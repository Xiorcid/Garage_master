ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32c0xx_hal_uart_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c"
  18              		.section	.text.UARTEx_Wakeup_AddressConfig,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	UARTEx_Wakeup_AddressConfig:
  25              	.LVL0:
  26              	.LFB232:
   1:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
   2:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   ******************************************************************************
   3:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @file    stm32c0xx_hal_uart_ex.c
   4:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief   Extended UART HAL module driver.
   6:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          This file provides firmware functions to manage the following extended
   7:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *           + Peripheral Control functions
  10:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *
  11:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *
  12:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   ******************************************************************************
  13:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @attention
  14:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *
  15:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * Copyright (c) 2022 STMicroelectronics.
  16:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * All rights reserved.
  17:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *
  18:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *
  22:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   ******************************************************************************
  23:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   @verbatim
  24:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   ==============================================================================
  25:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                ##### UART peripheral extended features  #####
  26:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   ==============================================================================
  27:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  28:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  29:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  30:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) For the UART RS485 Driver Enable mode, initialize the UART registers
  31:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         by calling the HAL_RS485Ex_Init() API.
  32:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 2


  33:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) FIFO mode enabling/disabling and RX/TX FIFO threshold programming.
  34:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  35:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         -@- When UART operates in FIFO mode, FIFO mode must be enabled prior
  36:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****             starting RX/TX transfers. Also RX/TX FIFO thresholds must be
  37:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****             configured prior starting RX/TX transfers.
  38:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  39:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   @endverbatim
  40:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   ******************************************************************************
  41:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
  42:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  43:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #include "stm32c0xx_hal.h"
  45:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  46:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @addtogroup STM32C0xx_HAL_Driver
  47:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
  48:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
  49:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  50:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @defgroup UARTEx UARTEx
  51:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief UART Extended HAL module driver
  52:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
  53:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
  54:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  55:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #ifdef HAL_UART_MODULE_ENABLED
  56:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  57:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* Private typedef -----------------------------------------------------------*/
  58:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* Private define ------------------------------------------------------------*/
  59:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @defgroup UARTEX_Private_Constants UARTEx Private Constants
  60:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
  61:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
  62:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* UART RX FIFO depth */
  63:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #define RX_FIFO_DEPTH 8U
  64:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  65:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* UART TX FIFO depth */
  66:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #define TX_FIFO_DEPTH 8U
  67:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
  68:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @}
  69:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
  70:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  71:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* Private macros ------------------------------------------------------------*/
  72:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* Private variables ---------------------------------------------------------*/
  73:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* Private function prototypes -----------------------------------------------*/
  74:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Private_Functions UARTEx Private Functions
  75:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
  76:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
  77:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
  78:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart);
  79:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
  80:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @}
  81:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
  82:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  83:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /* Exported functions --------------------------------------------------------*/
  84:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  85:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions  UARTEx Exported Functions
  86:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
  87:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
  88:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
  89:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group1 Initialization and de-initialization functions
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 3


  90:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief    Extended Initialization and Configuration Functions
  91:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *
  92:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** @verbatim
  93:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** ===============================================================================
  94:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****             ##### Initialization and Configuration functions #####
  95:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****  ===============================================================================
  96:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     [..]
  97:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
  98:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     in asynchronous mode.
  99:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       (+) For the asynchronous mode the parameters below can be configured:
 100:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) Baud Rate
 101:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) Word Length
 102:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) Stop Bit
 103:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 104:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****              in the data register is transmitted but is changed by the parity bit.
 105:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) Hardware flow control
 106:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) Receiver/transmitter modes
 107:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) Over Sampling Method
 108:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) One-Bit Sampling Method
 109:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 110:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) TX and/or RX pin level inversion
 111:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) data logical level inversion
 112:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) RX and TX pins swap
 113:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) RX overrun detection disabling
 114:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) DMA disabling on RX error
 115:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) MSB first on communication line
 116:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (++) auto Baud rate detection
 117:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     [..]
 118:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     The HAL_RS485Ex_Init() API follows the UART RS485 mode configuration
 119:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      procedures (details for the procedures are available in reference manual).
 120:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 121:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** @endverbatim
 122:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 123:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 124:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 125:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   following table.
 126:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 127:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     Table 1. UART frame format.
 128:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 129:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 130:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 131:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 132:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 133:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 134:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 135:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 136:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 137:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 138:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 139:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 140:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |---------|---------|-----------|---------------------------------------|
 141:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 142:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     +-----------------------------------------------------------------------+
 143:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 144:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
 145:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 146:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 4


 147:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 148:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Initialize the RS485 Driver enable feature according to the specified
 149:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *         parameters in the UART_InitTypeDef and creates the associated handle.
 150:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart            UART handle.
 151:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param Polarity         Select the driver enable polarity.
 152:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 153:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_HIGH DE signal is active high
 154:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          @arg @ref UART_DE_POLARITY_LOW  DE signal is active low
 155:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param AssertionTime    Driver Enable assertion time:
 156:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       5-bit value defining the time between the activation of the DE (Driver Enable)
 157:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       signal and the beginning of the start bit. It is expressed in sample time
 158:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       units (1/8 or 1/16 bit time, depending on the oversampling rate)
 159:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param DeassertionTime  Driver Enable deassertion time:
 160:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       5-bit value defining the time between the end of the last stop bit, in a
 161:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       transmitted message, and the de-activation of the DE (Driver Enable) signal.
 162:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       It is expressed in sample time units (1/8 or 1/16 bit time, depending on the
 163:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       oversampling rate).
 164:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 165:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 166:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_RS485Ex_Init(UART_HandleTypeDef *huart, uint32_t Polarity, uint32_t Assertion
 167:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                    uint32_t DeassertionTime)
 168:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t temp;
 170:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 171:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (huart == NULL)
 173:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 174:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return HAL_ERROR;
 175:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 176:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the Driver Enable UART instance */
 177:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_DRIVER_ENABLE_INSTANCE(huart->Instance));
 178:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 179:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the Driver Enable polarity */
 180:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_DE_POLARITY(Polarity));
 181:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 182:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the Driver Enable assertion time */
 183:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_ASSERTIONTIME(AssertionTime));
 184:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 185:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the Driver Enable deassertion time */
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_DEASSERTIONTIME(DeassertionTime));
 187:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 189:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 190:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Allocate lock resource and initialize it */
 191:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->Lock = HAL_UNLOCKED;
 192:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 193:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 194:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     UART_InitCallbacksToDefault(huart);
 195:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 196:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if (huart->MspInitCallback == NULL)
 197:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 198:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 199:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 200:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 201:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Init the low level hardware */
 202:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->MspInitCallback(huart);
 203:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #else
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 5


 204:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX */
 205:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     HAL_UART_MspInit(huart);
 206:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 207:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 208:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 210:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 211:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 212:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 213:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 214:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Perform advanced settings configuration */
 215:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* For some items, configuration requires to be done prior TE and RE bits are set */
 216:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 217:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 218:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     UART_AdvFeatureConfig(huart);
 219:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 220:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 221:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Set the UART Communication parameters */
 222:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 223:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 224:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return HAL_ERROR;
 225:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 226:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 227:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Enable the Driver Enable mode by setting the DEM bit in the CR3 register */
 228:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DEM);
 229:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 230:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Set the Driver Enable polarity */
 231:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_DEP, Polarity);
 232:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 233:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Set the Driver Enable assertion and deassertion times */
 234:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   temp = (AssertionTime << UART_CR1_DEAT_ADDRESS_LSB_POS);
 235:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 237:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 238:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 239:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 240:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 241:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 243:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 244:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 245:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 246:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @}
 247:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 248:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 249:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group2 IO operation functions
 250:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *  @brief Extended functions
 251:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *
 252:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** @verbatim
 253:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****  ===============================================================================
 254:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                       ##### IO operation functions #####
 255:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****  ===============================================================================
 256:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     This subsection provides a set of Wakeup and FIFO mode related callback functions.
 257:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 258:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) Wakeup from Stop mode Callback:
 259:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (+) HAL_UARTEx_WakeupCallback()
 260:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 6


 261:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) TX/RX Fifos Callbacks:
 262:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (+) HAL_UARTEx_RxFifoFullCallback()
 263:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (+) HAL_UARTEx_TxFifoEmptyCallback()
 264:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 265:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** @endverbatim
 266:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
 267:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 268:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 269:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 270:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief UART wakeup from Stop mode callback.
 271:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart UART handle.
 272:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval None
 273:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 274:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** __weak void HAL_UARTEx_WakeupCallback(UART_HandleTypeDef *huart)
 275:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 276:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 277:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   UNUSED(huart);
 278:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 279:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 280:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****             the HAL_UARTEx_WakeupCallback can be implemented in the user file.
 281:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****    */
 282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 283:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 284:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 285:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief  UART RX Fifo full callback.
 286:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param  huart UART handle.
 287:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval None
 288:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 289:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** __weak void HAL_UARTEx_RxFifoFullCallback(UART_HandleTypeDef *huart)
 290:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 291:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 292:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   UNUSED(huart);
 293:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 294:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 295:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****             the HAL_UARTEx_RxFifoFullCallback can be implemented in the user file.
 296:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****    */
 297:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 298:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 299:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 300:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief  UART TX Fifo empty callback.
 301:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param  huart UART handle.
 302:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval None
 303:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 304:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** __weak void HAL_UARTEx_TxFifoEmptyCallback(UART_HandleTypeDef *huart)
 305:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 306:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   UNUSED(huart);
 308:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 309:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 310:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****             the HAL_UARTEx_TxFifoEmptyCallback can be implemented in the user file.
 311:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****    */
 312:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 313:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 314:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 315:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @}
 316:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 317:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 7


 318:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @defgroup UARTEx_Exported_Functions_Group3 Peripheral Control functions
 319:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief    Extended Peripheral Control functions
 320:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *
 321:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** @verbatim
 322:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****  ===============================================================================
 323:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                       ##### Peripheral Control functions #####
 324:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****  ===============================================================================
 325:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     [..] This section provides the following functions:
 326:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      (+) HAL_MultiProcessorEx_AddressLength_Set() API optionally sets the UART node address
 327:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****          detection length to more than 4 bits for multiprocessor address mark wake up.
 328:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_StopModeWakeUpSourceConfig() API defines the wake-up from stop mode
 329:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****          trigger: address match, Start Bit detection or RXNE bit status.
 330:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableStopMode() API enables the UART to wake up the MCU from stop mode
 331:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableStopMode() API disables the above functionality
 332:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_EnableFifoMode() API enables the FIFO mode
 333:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_DisableFifoMode() API disables the FIFO mode
 334:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetTxFifoThreshold() API sets the TX FIFO threshold
 335:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****      (+) HAL_UARTEx_SetRxFifoThreshold() API sets the RX FIFO threshold
 336:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 337:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 338:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     services to user. (For example, these functions allow application to handle use cases
 339:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     where number of data to be received is unknown).
 340:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 341:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) Compared to standard reception services which only consider number of received
 342:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         data elements as reception completion criteria, these functions also consider additional ev
 343:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         as triggers for updating reception status to caller :
 344:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 345:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 346:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                for 1 frame time, after last received byte.
 347:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           (++) RX inactivity detected by RTO, i.e. line has been in idle state
 348:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                for a programmable time, after last received byte.
 349:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        (+) Detection that a specific character has been received.
 350:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 351:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) There are two mode of transfer:
 352:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 353:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            or till IDLE event occurs. Reception is handled only during function execution.
 354:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 355:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            are returned by function after finishing transfer.
 356:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 357:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            These API's return the HAL status.
 358:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            The end of the data processing will be indicated through the
 359:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 360:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 361:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 362:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 363:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) Blocking mode API:
 364:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 365:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 366:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) Non-Blocking mode API with Interrupt:
 367:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 368:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 369:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (#) Non-Blocking mode API with DMA:
 370:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 371:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 372:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** @endverbatim
 373:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
 374:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 8


 375:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 376:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 377:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief By default in multiprocessor mode, when the wake up method is set
 378:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        to address mark, the UART handles only 4-bit long addresses detection;
 379:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        this API allows to enable longer addresses detection (6-, 7- or 8-bit
 380:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        long).
 381:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  Addresses detection lengths are: 6-bit address detection in 7-bit data mode,
 382:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        7-bit address detection in 8-bit data mode, 8-bit address detection in 9-bit data mode.
 383:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart         UART handle.
 384:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param AddressLength This parameter can be one of the following values:
 385:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_4B 4-bit long address
 386:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          @arg @ref UART_ADDRESS_DETECT_7B 6-, 7- or 8-bit long address
 387:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 388:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 389:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_MultiProcessorEx_AddressLength_Set(UART_HandleTypeDef *huart, uint32_t Addres
 390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 391:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 392:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (huart == NULL)
 393:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 394:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return HAL_ERROR;
 395:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 396:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 397:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the address length parameter */
 398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(AddressLength));
 399:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 401:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 402:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 403:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 404:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 405:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Set the address length */
 406:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, AddressLength);
 407:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 408:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 409:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 410:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 411:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* TEACK and/or REACK to check before moving huart->gState to Ready */
 412:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return (UART_CheckIdleState(huart));
 413:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 414:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 415:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 416:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Set Wakeup from Stop mode interrupt flag selection.
 417:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note It is the application responsibility to enable the interrupt used as
 418:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       usart_wkup interrupt source before entering low-power mode.
 419:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart           UART handle.
 420:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param WakeUpSelection Address match, Start Bit detection or RXNE/RXFNE bit status.
 421:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 422:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_ADDRESS
 423:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_STARTBIT
 424:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          @arg @ref UART_WAKEUP_ON_READDATA_NONEMPTY
 425:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 426:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 427:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_StopModeWakeUpSourceConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeD
 428:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 429:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 430:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tickstart;
 431:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 9


 432:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* check the wake-up from stop mode UART instance */
 433:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance));
 434:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 435:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_WAKEUP_SELECTION(WakeUpSelection.WakeUpEvent));
 436:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 437:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 439:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 440:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 441:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 442:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Disable the Peripheral */
 443:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 444:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 445:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Set the wake-up selection scheme */
 446:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_WUS, WakeUpSelection.WakeUpEvent);
 447:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 448:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (WakeUpSelection.WakeUpEvent == UART_WAKEUP_ON_ADDRESS)
 449:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 450:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     UARTEx_Wakeup_AddressConfig(huart, WakeUpSelection);
 451:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 452:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 453:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Enable the Peripheral */
 454:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_ENABLE(huart);
 455:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 456:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Init tickstart for timeout management */
 457:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   tickstart = HAL_GetTick();
 458:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 459:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Wait until REACK flag is set */
 460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE)
 461:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 462:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     status = HAL_TIMEOUT;
 463:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 464:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   else
 465:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 466:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Initialize the UART State */
 467:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->gState = HAL_UART_STATE_READY;
 468:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 469:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 470:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Unlocked */
 471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 472:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 473:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return status;
 474:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 475:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 476:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 477:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Enable UART Stop Mode.
 478:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note The UART is able to wake up the MCU from Stop 1 mode as long as UART clock is HSI or LSE.
 479:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart UART handle.
 480:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 481:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 482:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableStopMode(UART_HandleTypeDef *huart)
 483:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 484:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 486:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 487:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Set UESM bit */
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_UESM);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 10


 489:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 490:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Unlocked */
 491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 492:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return HAL_OK;
 494:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 495:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 496:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 497:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Disable UART Stop Mode.
 498:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart UART handle.
 499:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 500:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 501:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableStopMode(UART_HandleTypeDef *huart)
 502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 503:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 505:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 506:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Clear UESM bit */
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_UESM);
 508:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 509:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Unlocked */
 510:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 511:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return HAL_OK;
 513:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 514:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 515:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 516:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief  Enable the FIFO mode.
 517:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart      UART handle.
 518:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 519:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 520:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_EnableFifoMode(UART_HandleTypeDef *huart)
 521:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 522:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 523:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 524:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check parameters */
 525:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 526:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 527:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 529:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 530:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 531:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 532:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 533:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 534:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 535:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Disable UART */
 536:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 537:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 538:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Enable FIFO mode */
 539:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   SET_BIT(tmpcr1, USART_CR1_FIFOEN);
 540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_ENABLE;
 541:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 542:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Restore UART configuration */
 543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 544:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 545:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 11


 546:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 547:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 548:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 549:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 550:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Unlocked */
 551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 552:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return HAL_OK;
 554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 555:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 556:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 557:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief  Disable the FIFO mode.
 558:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart      UART handle.
 559:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 560:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 561:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
 562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 563:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 564:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 565:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check parameters */
 566:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 567:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 568:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 570:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 571:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 572:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 573:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 574:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 575:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 576:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Disable UART */
 577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 578:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 579:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Disable FIFO mode */
 580:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 581:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_DISABLE;
 582:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 583:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Restore UART configuration */
 584:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 585:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 587:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 588:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Unlocked */
 589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 590:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 591:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return HAL_OK;
 592:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 593:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 594:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 595:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief  Set the TXFIFO threshold.
 596:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart      UART handle.
 597:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param Threshold  TX FIFO threshold value
 598:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 599:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_8
 600:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_4
 601:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_1_2
 602:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_3_4
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 12


 603:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
 604:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
 605:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 606:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 607:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 609:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 610:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 611:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check parameters */
 612:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 613:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 614:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 615:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 617:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 618:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 619:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 620:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 621:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 622:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 623:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Disable UART */
 624:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 625:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 626:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Update TX threshold configuration */
 627:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 628:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 629:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 630:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 631:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 632:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Restore UART configuration */
 633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 634:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 635:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 636:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 637:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Unlocked */
 638:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 639:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return HAL_OK;
 641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 642:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 643:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 644:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief  Set the RXFIFO threshold.
 645:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart      UART handle.
 646:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param Threshold  RX FIFO threshold value
 647:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *          This parameter can be one of the following values:
 648:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_8
 649:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_4
 650:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_1_2
 651:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_3_4
 652:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
 653:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
 654:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 655:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 656:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
 657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 658:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 659:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 13


 660:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the parameters */
 661:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
 662:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 663:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 664:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_LOCK(huart);
 666:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_BUSY;
 668:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 669:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Save actual UART configuration */
 670:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   tmpcr1 = READ_REG(huart->Instance->CR1);
 671:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 672:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Disable UART */
 673:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UART_DISABLE(huart);
 674:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 675:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Update RX threshold configuration */
 676:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 677:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 678:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Determine the number of data to process during RX/TX ISR execution */
 679:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   UARTEx_SetNbDataToProcess(huart);
 680:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 681:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Restore UART configuration */
 682:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   WRITE_REG(huart->Instance->CR1, tmpcr1);
 683:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->gState = HAL_UART_STATE_READY;
 685:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 686:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Unlocked */
 687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   __HAL_UNLOCK(huart);
 688:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 689:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return HAL_OK;
 690:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 691:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 692:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 693:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data
 694:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        is received or an IDLE event occurs.
 695:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  HAL_OK is returned if reception is completed (expected number of data has been received)
 696:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        or if reception is stopped after IDLE event (less than the expected number of data has b
 697:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        In this case, RxLen output parameter indicates number of data available in reception buf
 698:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 699:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
 700:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 701:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
 702:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       is not empty. Read operations from the RDR register are performed when
 703:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
 704:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       RXNE are mapped on the same bit-field.
 705:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 706:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
 707:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *         (16 bits) (as received data will be handled using uint16_t pointer cast). Depending on 
 708:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
 709:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *         alignment for pData.
 710:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart   UART handle.
 711:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
 712:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
 713:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param RxLen   Number of data elements finally received
 714:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *                (could be lower than Size, in case reception ends on IDLE event)
 715:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
 716:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 14


 717:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 718:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
 719:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                            uint32_t Timeout)
 720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 721:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 722:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint16_t *pdata16bits;
 723:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint16_t uhMask;
 724:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tickstart;
 725:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 726:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 727:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 728:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 730:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 731:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       return  HAL_ERROR;
 732:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 733:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 734:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
 735:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        should be aligned on a uint16_t frontier, as data to be received from RDR will be
 736:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        handled through a uint16_t cast. */
 737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 738:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 739:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 740:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 741:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         return  HAL_ERROR;
 742:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 743:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 744:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 745:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 746:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 748:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 749:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 750:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Init tickstart for timeout management */
 751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     tickstart = HAL_GetTick();
 752:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 753:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxXferSize  = Size;
 754:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 755:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 756:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Computation of UART mask to apply to RDR register */
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     UART_MASK_COMPUTATION(huart);
 758:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 759:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 760:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
 761:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 762:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       pdata8bits  = NULL;
 764:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 765:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 766:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     else
 767:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 768:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       pdata8bits  = pData;
 769:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       pdata16bits = NULL;
 770:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 771:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 772:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Initialize output number of received elements */
 773:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     *RxLen = 0U;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 15


 774:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 775:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* as long as data have to be received */
 776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     while (huart->RxXferCount > 0U)
 777:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 778:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       /* Check if IDLE flag is set */
 779:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 780:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 781:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         /* Clear IDLE flag in ISR */
 782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 783:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 784:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
 785:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
 786:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         if (*RxLen > 0U)
 787:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 788:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 790:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 791:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           return HAL_OK;
 792:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 793:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 794:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 795:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       /* Check if RXNE flag is set */
 796:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 797:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 798:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         if (pdata8bits == NULL)
 799:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 800:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata16bits++;
 802:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 803:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         else
 804:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 806:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata8bits++;
 807:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 808:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         /* Increment number of received elements */
 809:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         *RxLen += 1U;
 810:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         huart->RxXferCount--;
 811:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 812:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 813:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       /* Check for the Timeout */
 814:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       if (Timeout != HAL_MAX_DELAY)
 815:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 817:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 819:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           return HAL_TIMEOUT;
 821:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 822:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 823:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 824:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 825:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Set number of received elements in output parameter : RxLen */
 826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 827:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 828:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_READY;
 829:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return HAL_OK;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 16


 831:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 832:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   else
 833:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 834:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return HAL_BUSY;
 835:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 837:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 838:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 839:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data
 840:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        is received or an IDLE event occurs.
 841:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  Reception is initiated by this function call. Further progress of reception is achieved 
 842:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        to UART interrupts raised by RXNE and IDLE events. Callback is called at end of receptio
 843:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        number of received data elements.
 844:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 845:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
 846:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 847:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 848:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        address of user data buffer for storing data to be received, should be aligned on a half
 849:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        (16 bits) (as received data will be handled using uint16_t pointer cast). Depending on c
 850:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        use of specific alignment compilation directives or pragmas might be required
 851:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        to ensure proper alignment for pData.
 852:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart UART handle.
 853:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
 854:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
 855:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 856:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 857:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
 858:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 859:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 860:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 861:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 862:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 863:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 865:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       return HAL_ERROR;
 867:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 868:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 869:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
 870:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        should be aligned on a uint16_t frontier, as data to be received from RDR will be
 871:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        handled through a uint16_t cast. */
 872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 873:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 874:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 875:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 876:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         return  HAL_ERROR;
 877:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 878:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 879:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 880:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Set Reception type to reception till IDLE Event*/
 881:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 882:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 883:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     (void)UART_Start_Receive_IT(huart, pData, Size);
 885:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 887:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 17


 888:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 890:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 891:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     else
 892:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 893:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       /* In case of errors already pending when reception is started,
 894:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****          Interrupts may have already been raised and lead to reception abortion.
 895:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****          (Overrun error for instance).
 896:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****          In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
 897:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       status = HAL_ERROR;
 898:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 899:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 900:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return status;
 901:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 902:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   else
 903:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 904:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return HAL_BUSY;
 905:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 907:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 908:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #if defined(HAL_DMA_MODULE_ENABLED)
 909:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 910:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Receive an amount of data in DMA mode till either the expected number
 911:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        of data is received or an IDLE event occurs.
 912:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  Reception is initiated by this function call. Further progress of reception is achieved 
 913:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        to DMA services, transferring automatically received data elements in user reception buf
 914:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        calling registered callbacks at half/end of reception. UART IDLE events are also used to
 915:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        reception phase as ended. In all cases, callback execution will indicate number of recei
 916:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  When the UART parity is enabled (PCE = 1), the received data contain
 917:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        the parity bit (MSB position).
 918:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 919:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        the received data is handled as a set of uint16_t. In this case, Size must indicate the 
 920:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        of uint16_t available through pData.
 921:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-M
 922:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        address of user data buffer for storing data to be received, should be aligned on a half
 923:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        (16 bits) (as received data will be handled by DMA from halfword frontier). Depending on
 924:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        use of specific alignment compilation directives or pragmas might be required
 925:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        to ensure proper alignment for pData.
 926:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart UART handle.
 927:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
 928:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
 929:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval HAL status
 930:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
 931:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
 932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
 933:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 934:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 935:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check that a Rx process is not already ongoing */
 936:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 937:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 938:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if ((pData == NULL) || (Size == 0U))
 939:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       return HAL_ERROR;
 941:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 942:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 943:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
 944:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        should be aligned on a uint16_t frontier, as data copy from RDR will be
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 18


 945:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****        handled by DMA from a uint16_t frontier. */
 946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 947:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 948:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       if ((((uint32_t)pData) & 1U) != 0U)
 949:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 950:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         return  HAL_ERROR;
 951:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 952:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 953:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 954:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Set Reception type to reception till IDLE Event*/
 955:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 956:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 957:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 959:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 960:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* Check Rx process has been successfully started */
 961:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     if (status == HAL_OK)
 962:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 963:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 964:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 965:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_IDLEF);
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 967:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 968:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       else
 969:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 970:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         /* In case of errors already pending when reception is started,
 971:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            Interrupts may have already been raised and lead to reception abortion.
 972:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            (Overrun error for instance).
 973:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
 974:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         status = HAL_ERROR;
 975:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 976:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 977:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 978:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return status;
 979:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 980:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   else
 981:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 982:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     return HAL_BUSY;
 983:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 984:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 985:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #endif /* HAL_DMA_MODULE_ENABLED */
 986:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 987:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
 988:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Provide Rx Event type that has lead to RxEvent callback execution.
 989:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  When HAL_UARTEx_ReceiveToIdle_IT() or HAL_UARTEx_ReceiveToIdle_DMA() API are called, pro
 990:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        of reception process is provided to application through calls of Rx Event callback (eith
 991:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        HAL_UARTEx_RxEventCallback() or user registered one). As several types of events could o
 992:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        Half Transfer, or Transfer Complete), this function allows to retrieve the Rx Event type
 993:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        to Rx Event callback execution.
 994:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note  This function is expected to be called within the user implementation of Rx Event Callba
 995:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        in order to provide the accurate value :
 996:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        In Interrupt Mode :
 997:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *           - HAL_UART_RXEVENT_TC : when Reception has been completed (expected nb of data has be
 998:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *           - HAL_UART_RXEVENT_IDLE : when Idle event occurred prior reception has been completed
 999:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *             received data is lower than expected one)
1000:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        In DMA Mode :
1001:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *           - HAL_UART_RXEVENT_TC : when Reception has been completed (expected nb of data has be
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 19


1002:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *           - HAL_UART_RXEVENT_HT : when half of expected nb of data has been received
1003:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *           - HAL_UART_RXEVENT_IDLE : when Idle event occurred prior reception has been completed
1004:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *             received data is lower than expected one).
1005:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        In DMA mode, RxEvent callback could be called several times;
1006:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        When DMA is configured in Normal Mode, HT event does not stop Reception process;
1007:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *        When DMA is configured in Circular Mode, HT, TC or IDLE events don't stop Reception proc
1008:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param  huart UART handle.
1009:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval Rx Event Type (return vale will be a value of @ref UART_RxEvent_Type_Values)
1010:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
1011:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** HAL_UART_RxEventTypeTypeDef HAL_UARTEx_GetRxEventType(const UART_HandleTypeDef *huart)
1012:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
1013:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Return Rx Event type value, as stored in UART handle */
1014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   return (huart->RxEventType);
1015:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
1016:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
1017:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
1018:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @}
1019:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
1020:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
1021:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
1022:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @}
1023:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
1024:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
1025:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /** @addtogroup UARTEx_Private_Functions
1026:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @{
1027:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
1028:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
1029:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
1030:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Initialize the UART wake-up from stop mode parameters when triggered by address detectio
1031:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart           UART handle.
1032:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param WakeUpSelection UART wake up from stop mode parameters.
1033:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval None
1034:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
1035:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** static void UARTEx_Wakeup_AddressConfig(UART_HandleTypeDef *huart, UART_WakeUpTypeDef WakeUpSelecti
1036:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
  27              		.loc 1 1036 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              		.loc 1 1036 1 is_stmt 0 view .LVU1
  33 0000 82B0     		sub	sp, sp, #8
  34              		.cfi_def_cfa_offset 8
  35 0002 0091     		str	r1, [sp]
  36 0004 0192     		str	r2, [sp, #4]
1037:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_ADDRESSLENGTH_DETECT(WakeUpSelection.AddressLength));
  37              		.loc 1 1037 3 is_stmt 1 view .LVU2
1038:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
1039:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Set the USART address length */
1040:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADDM7, WakeUpSelection.AddressLength);
  38              		.loc 1 1040 3 view .LVU3
  39 0006 0268     		ldr	r2, [r0]
  40 0008 5368     		ldr	r3, [r2, #4]
  41 000a 1021     		movs	r1, #16
  42 000c 8B43     		bics	r3, r1
  43 000e 6946     		mov	r1, sp
  44 0010 8988     		ldrh	r1, [r1, #4]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 20


  45 0012 0B43     		orrs	r3, r1
  46 0014 5360     		str	r3, [r2, #4]
1041:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
1042:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Set the USART address node */
1043:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)WakeUpSelection.Address << UART_CR2_AD
  47              		.loc 1 1043 3 view .LVU4
  48 0016 0168     		ldr	r1, [r0]
  49 0018 4B68     		ldr	r3, [r1, #4]
  50 001a 1B02     		lsls	r3, r3, #8
  51 001c 1B0A     		lsrs	r3, r3, #8
  52 001e 6A46     		mov	r2, sp
  53 0020 9279     		ldrb	r2, [r2, #6]
  54 0022 1206     		lsls	r2, r2, #24
  55 0024 1343     		orrs	r3, r2
  56 0026 4B60     		str	r3, [r1, #4]
1044:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
  57              		.loc 1 1044 1 is_stmt 0 view .LVU5
  58 0028 02B0     		add	sp, sp, #8
  59              		@ sp needed
  60 002a 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE232:
  64              		.global	__aeabi_idiv
  65              		.section	.text.UARTEx_SetNbDataToProcess,"ax",%progbits
  66              		.align	1
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	UARTEx_SetNbDataToProcess:
  72              	.LVL1:
  73              	.LFB233:
1045:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
1046:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** /**
1047:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @brief Calculate the number of data to process in RX/TX ISR.
1048:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @note The RX FIFO depth and the TX FIFO depth is extracted from
1049:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   *       the UART configuration registers.
1050:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @param huart UART handle.
1051:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   * @retval None
1052:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   */
1053:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
1054:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** {
  74              		.loc 1 1054 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		.loc 1 1054 1 is_stmt 0 view .LVU7
  79 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  80              		.cfi_def_cfa_offset 24
  81              		.cfi_offset 3, -24
  82              		.cfi_offset 4, -20
  83              		.cfi_offset 5, -16
  84              		.cfi_offset 6, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 0400     		movs	r4, r0
1055:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint8_t rx_fifo_depth;
  88              		.loc 1 1055 3 is_stmt 1 view .LVU8
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 21


1056:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint8_t tx_fifo_depth;
  89              		.loc 1 1056 3 view .LVU9
1057:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint8_t rx_fifo_threshold;
  90              		.loc 1 1057 3 view .LVU10
1058:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint8_t tx_fifo_threshold;
  91              		.loc 1 1058 3 view .LVU11
1059:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  92              		.loc 1 1059 3 view .LVU12
1060:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
  93              		.loc 1 1060 3 view .LVU13
1061:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
1062:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   if (huart->FifoMode == UART_FIFOMODE_DISABLE)
  94              		.loc 1 1062 3 view .LVU14
  95              		.loc 1 1062 12 is_stmt 0 view .LVU15
  96 0004 436E     		ldr	r3, [r0, #100]
  97              		.loc 1 1062 6 view .LVU16
  98 0006 002B     		cmp	r3, #0
  99 0008 05D1     		bne	.L3
1063:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
1064:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = 1U;
 100              		.loc 1 1064 5 is_stmt 1 view .LVU17
 101              		.loc 1 1064 30 is_stmt 0 view .LVU18
 102 000a 0133     		adds	r3, r3, #1
 103 000c 6A22     		movs	r2, #106
 104 000e 8352     		strh	r3, [r0, r2]
1065:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = 1U;
 105              		.loc 1 1065 5 is_stmt 1 view .LVU19
 106              		.loc 1 1065 30 is_stmt 0 view .LVU20
 107 0010 023A     		subs	r2, r2, #2
 108 0012 8352     		strh	r3, [r0, r2]
 109              	.LVL2:
 110              	.L2:
1066:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
1067:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   else
1068:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
1069:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     rx_fifo_depth = RX_FIFO_DEPTH;
1070:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     tx_fifo_depth = TX_FIFO_DEPTH;
1071:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RX
1072:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
1073:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
1074:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
1075:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
1076:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
1077:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
1078:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 111              		.loc 1 1078 1 view .LVU21
 112              		@ sp needed
 113              	.LVL3:
 114              		.loc 1 1078 1 view .LVU22
 115 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 116              	.LVL4:
 117              	.L3:
1069:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     tx_fifo_depth = TX_FIFO_DEPTH;
 118              		.loc 1 1069 5 is_stmt 1 view .LVU23
1070:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RX
 119              		.loc 1 1070 5 view .LVU24
1071:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 22


 120              		.loc 1 1071 5 view .LVU25
1071:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 121              		.loc 1 1071 35 is_stmt 0 view .LVU26
 122 0016 0268     		ldr	r2, [r0]
 123 0018 9568     		ldr	r5, [r2, #8]
1071:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 124              		.loc 1 1071 25 view .LVU27
 125 001a 6D0E     		lsrs	r5, r5, #25
1071:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TX
 126              		.loc 1 1071 23 view .LVU28
 127 001c 0723     		movs	r3, #7
 128 001e 1D40     		ands	r5, r3
 129              	.LVL5:
1072:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 130              		.loc 1 1072 5 is_stmt 1 view .LVU29
1072:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 131              		.loc 1 1072 35 is_stmt 0 view .LVU30
 132 0020 9268     		ldr	r2, [r2, #8]
1072:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 133              		.loc 1 1072 25 view .LVU31
 134 0022 520F     		lsrs	r2, r2, #29
1072:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 135              		.loc 1 1072 23 view .LVU32
 136 0024 1340     		ands	r3, r2
 137              	.LVL6:
1073:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 138              		.loc 1 1073 5 is_stmt 1 view .LVU33
1073:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 139              		.loc 1 1073 68 is_stmt 0 view .LVU34
 140 0026 084F     		ldr	r7, .L5
 141 0028 F85C     		ldrb	r0, [r7, r3]
 142              	.LVL7:
1073:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 143              		.loc 1 1073 57 view .LVU35
 144 002a C000     		lsls	r0, r0, #3
1074:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 145              		.loc 1 1074 53 view .LVU36
 146 002c 074E     		ldr	r6, .L5+4
 147 002e F15C     		ldrb	r1, [r6, r3]
1073:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 148              		.loc 1 1073 89 view .LVU37
 149 0030 FFF7FEFF 		bl	__aeabi_idiv
 150              	.LVL8:
1073:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[tx_fifo_threshold];
 151              		.loc 1 1073 30 view .LVU38
 152 0034 6A23     		movs	r3, #106
 153 0036 E052     		strh	r0, [r4, r3]
1075:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 154              		.loc 1 1075 5 is_stmt 1 view .LVU39
1075:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 155              		.loc 1 1075 68 is_stmt 0 view .LVU40
 156 0038 785D     		ldrb	r0, [r7, r5]
1075:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 157              		.loc 1 1075 57 view .LVU41
 158 003a C000     		lsls	r0, r0, #3
1076:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 159              		.loc 1 1076 53 view .LVU42
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 23


 160 003c 715D     		ldrb	r1, [r6, r5]
1075:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 161              		.loc 1 1075 89 view .LVU43
 162 003e FFF7FEFF 		bl	__aeabi_idiv
 163              	.LVL9:
1075:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****                                (uint16_t)denominator[rx_fifo_threshold];
 164              		.loc 1 1075 30 view .LVU44
 165 0042 6823     		movs	r3, #104
 166 0044 E052     		strh	r0, [r4, r3]
 167              		.loc 1 1078 1 view .LVU45
 168 0046 E5E7     		b	.L2
 169              	.L6:
 170              		.align	2
 171              	.L5:
 172 0048 00000000 		.word	numerator.1
 173 004c 00000000 		.word	denominator.0
 174              		.cfi_endproc
 175              	.LFE233:
 177              		.section	.text.HAL_RS485Ex_Init,"ax",%progbits
 178              		.align	1
 179              		.global	HAL_RS485Ex_Init
 180              		.syntax unified
 181              		.code	16
 182              		.thumb_func
 184              	HAL_RS485Ex_Init:
 185              	.LVL10:
 186              	.LFB216:
 168:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t temp;
 187              		.loc 1 168 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 168:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t temp;
 191              		.loc 1 168 1 is_stmt 0 view .LVU47
 192 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 193              		.cfi_def_cfa_offset 24
 194              		.cfi_offset 3, -24
 195              		.cfi_offset 4, -20
 196              		.cfi_offset 5, -16
 197              		.cfi_offset 6, -12
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 0400     		movs	r4, r0
 201 0004 0F00     		movs	r7, r1
 202 0006 1600     		movs	r6, r2
 203 0008 1D00     		movs	r5, r3
 169:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 204              		.loc 1 169 3 is_stmt 1 view .LVU48
 172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 205              		.loc 1 172 3 view .LVU49
 172:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 206              		.loc 1 172 6 is_stmt 0 view .LVU50
 207 000a 0028     		cmp	r0, #0
 208 000c 3BD0     		beq	.L11
 177:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 209              		.loc 1 177 3 is_stmt 1 view .LVU51
 180:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 24


 210              		.loc 1 180 3 view .LVU52
 183:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 211              		.loc 1 183 3 view .LVU53
 186:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 212              		.loc 1 186 3 view .LVU54
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 213              		.loc 1 188 3 view .LVU55
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 214              		.loc 1 188 12 is_stmt 0 view .LVU56
 215 000e 8823     		movs	r3, #136
 216              	.LVL11:
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 217              		.loc 1 188 12 view .LVU57
 218 0010 C358     		ldr	r3, [r0, r3]
 188:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 219              		.loc 1 188 6 view .LVU58
 220 0012 002B     		cmp	r3, #0
 221 0014 2DD0     		beq	.L12
 222              	.LVL12:
 223              	.L9:
 209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 224              		.loc 1 209 3 is_stmt 1 view .LVU59
 209:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 225              		.loc 1 209 17 is_stmt 0 view .LVU60
 226 0016 8823     		movs	r3, #136
 227 0018 2422     		movs	r2, #36
 228 001a E250     		str	r2, [r4, r3]
 212:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 229              		.loc 1 212 3 is_stmt 1 view .LVU61
 230 001c 2268     		ldr	r2, [r4]
 231 001e 1368     		ldr	r3, [r2]
 232 0020 0121     		movs	r1, #1
 233 0022 8B43     		bics	r3, r1
 234 0024 1360     		str	r3, [r2]
 216:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 235              		.loc 1 216 3 view .LVU62
 216:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 236              		.loc 1 216 26 is_stmt 0 view .LVU63
 237 0026 A36A     		ldr	r3, [r4, #40]
 216:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 238              		.loc 1 216 6 view .LVU64
 239 0028 002B     		cmp	r3, #0
 240 002a 28D1     		bne	.L13
 241              	.L10:
 222:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 242              		.loc 1 222 3 is_stmt 1 view .LVU65
 222:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 243              		.loc 1 222 7 is_stmt 0 view .LVU66
 244 002c 2000     		movs	r0, r4
 245 002e FFF7FEFF 		bl	UART_SetConfig
 246              	.LVL13:
 222:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 247              		.loc 1 222 6 discriminator 1 view .LVU67
 248 0032 0128     		cmp	r0, #1
 249 0034 1CD0     		beq	.L8
 228:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 250              		.loc 1 228 3 is_stmt 1 view .LVU68
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 25


 251 0036 2268     		ldr	r2, [r4]
 252 0038 9168     		ldr	r1, [r2, #8]
 253 003a 8023     		movs	r3, #128
 254 003c DB01     		lsls	r3, r3, #7
 255 003e 0B43     		orrs	r3, r1
 256 0040 9360     		str	r3, [r2, #8]
 231:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 257              		.loc 1 231 3 view .LVU69
 258 0042 2268     		ldr	r2, [r4]
 259 0044 9368     		ldr	r3, [r2, #8]
 260 0046 1149     		ldr	r1, .L14
 261 0048 0B40     		ands	r3, r1
 262 004a 3B43     		orrs	r3, r7
 263 004c 9360     		str	r3, [r2, #8]
 234:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 264              		.loc 1 234 3 view .LVU70
 234:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   temp |= (DeassertionTime << UART_CR1_DEDT_ADDRESS_LSB_POS);
 265              		.loc 1 234 8 is_stmt 0 view .LVU71
 266 004e 7605     		lsls	r6, r6, #21
 267              	.LVL14:
 235:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 268              		.loc 1 235 3 is_stmt 1 view .LVU72
 235:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 269              		.loc 1 235 28 is_stmt 0 view .LVU73
 270 0050 2D04     		lsls	r5, r5, #16
 271              	.LVL15:
 235:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   MODIFY_REG(huart->Instance->CR1, (USART_CR1_DEDT | USART_CR1_DEAT), temp);
 272              		.loc 1 235 8 view .LVU74
 273 0052 3543     		orrs	r5, r6
 274              	.LVL16:
 236:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 275              		.loc 1 236 3 is_stmt 1 view .LVU75
 276 0054 2268     		ldr	r2, [r4]
 277 0056 1368     		ldr	r3, [r2]
 278 0058 0D49     		ldr	r1, .L14+4
 279 005a 0B40     		ands	r3, r1
 280 005c 2B43     		orrs	r3, r5
 281 005e 1360     		str	r3, [r2]
 239:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 282              		.loc 1 239 3 view .LVU76
 283 0060 2268     		ldr	r2, [r4]
 284 0062 1368     		ldr	r3, [r2]
 285 0064 0121     		movs	r1, #1
 286 0066 0B43     		orrs	r3, r1
 287 0068 1360     		str	r3, [r2]
 242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 288              		.loc 1 242 3 view .LVU77
 242:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 289              		.loc 1 242 11 is_stmt 0 view .LVU78
 290 006a 2000     		movs	r0, r4
 291 006c FFF7FEFF 		bl	UART_CheckIdleState
 292              	.LVL17:
 293              	.L8:
 243:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 294              		.loc 1 243 1 view .LVU79
 295              		@ sp needed
 296              	.LVL18:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 26


 297              	.LVL19:
 243:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 298              		.loc 1 243 1 view .LVU80
 299 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 300              	.LVL20:
 301              	.L12:
 191:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 302              		.loc 1 191 5 is_stmt 1 view .LVU81
 191:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 303              		.loc 1 191 17 is_stmt 0 view .LVU82
 304 0072 8433     		adds	r3, r3, #132
 305 0074 0022     		movs	r2, #0
 306              	.LVL21:
 191:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 307              		.loc 1 191 17 view .LVU83
 308 0076 C254     		strb	r2, [r0, r3]
 205:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 309              		.loc 1 205 5 is_stmt 1 view .LVU84
 310 0078 FFF7FEFF 		bl	HAL_UART_MspInit
 311              	.LVL22:
 205:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 312              		.loc 1 205 5 is_stmt 0 view .LVU85
 313 007c CBE7     		b	.L9
 314              	.L13:
 218:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 315              		.loc 1 218 5 is_stmt 1 view .LVU86
 316 007e 2000     		movs	r0, r4
 317 0080 FFF7FEFF 		bl	UART_AdvFeatureConfig
 318              	.LVL23:
 319 0084 D2E7     		b	.L10
 320              	.LVL24:
 321              	.L11:
 174:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 322              		.loc 1 174 12 is_stmt 0 view .LVU87
 323 0086 0120     		movs	r0, #1
 324              	.LVL25:
 174:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 325              		.loc 1 174 12 view .LVU88
 326 0088 F2E7     		b	.L8
 327              	.L15:
 328 008a C046     		.align	2
 329              	.L14:
 330 008c FF7FFFFF 		.word	-32769
 331 0090 FFFF00FC 		.word	-67043329
 332              		.cfi_endproc
 333              	.LFE216:
 335              		.section	.text.HAL_UARTEx_WakeupCallback,"ax",%progbits
 336              		.align	1
 337              		.weak	HAL_UARTEx_WakeupCallback
 338              		.syntax unified
 339              		.code	16
 340              		.thumb_func
 342              	HAL_UARTEx_WakeupCallback:
 343              	.LVL26:
 344              	.LFB217:
 275:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 345              		.loc 1 275 1 is_stmt 1 view -0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 27


 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 277:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 350              		.loc 1 277 3 view .LVU90
 282:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 351              		.loc 1 282 1 is_stmt 0 view .LVU91
 352              		@ sp needed
 353 0000 7047     		bx	lr
 354              		.cfi_endproc
 355              	.LFE217:
 357              		.section	.text.HAL_UARTEx_RxFifoFullCallback,"ax",%progbits
 358              		.align	1
 359              		.weak	HAL_UARTEx_RxFifoFullCallback
 360              		.syntax unified
 361              		.code	16
 362              		.thumb_func
 364              	HAL_UARTEx_RxFifoFullCallback:
 365              	.LVL27:
 366              	.LFB218:
 290:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 367              		.loc 1 290 1 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 292:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 372              		.loc 1 292 3 view .LVU93
 297:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 373              		.loc 1 297 1 is_stmt 0 view .LVU94
 374              		@ sp needed
 375 0000 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE218:
 379              		.section	.text.HAL_UARTEx_TxFifoEmptyCallback,"ax",%progbits
 380              		.align	1
 381              		.weak	HAL_UARTEx_TxFifoEmptyCallback
 382              		.syntax unified
 383              		.code	16
 384              		.thumb_func
 386              	HAL_UARTEx_TxFifoEmptyCallback:
 387              	.LVL28:
 388              	.LFB219:
 305:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Prevent unused argument(s) compilation warning */
 389              		.loc 1 305 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 307:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 394              		.loc 1 307 3 view .LVU96
 312:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 395              		.loc 1 312 1 is_stmt 0 view .LVU97
 396              		@ sp needed
 397 0000 7047     		bx	lr
 398              		.cfi_endproc
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 28


 399              	.LFE219:
 401              		.section	.text.HAL_MultiProcessorEx_AddressLength_Set,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_MultiProcessorEx_AddressLength_Set
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	HAL_MultiProcessorEx_AddressLength_Set:
 409              	.LVL29:
 410              	.LFB220:
 390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 411              		.loc 1 390 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 390:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Check the UART handle allocation */
 415              		.loc 1 390 1 is_stmt 0 view .LVU99
 416 0000 70B5     		push	{r4, r5, r6, lr}
 417              		.cfi_def_cfa_offset 16
 418              		.cfi_offset 4, -16
 419              		.cfi_offset 5, -12
 420              		.cfi_offset 6, -8
 421              		.cfi_offset 14, -4
 422 0002 0B00     		movs	r3, r1
 392:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 423              		.loc 1 392 3 is_stmt 1 view .LVU100
 392:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 424              		.loc 1 392 6 is_stmt 0 view .LVU101
 425 0004 0028     		cmp	r0, #0
 426 0006 14D0     		beq	.L21
 398:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 427              		.loc 1 398 3 is_stmt 1 view .LVU102
 400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 428              		.loc 1 400 3 view .LVU103
 400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 429              		.loc 1 400 17 is_stmt 0 view .LVU104
 430 0008 8822     		movs	r2, #136
 431 000a 2421     		movs	r1, #36
 432              	.LVL30:
 400:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 433              		.loc 1 400 17 view .LVU105
 434 000c 8150     		str	r1, [r0, r2]
 403:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 435              		.loc 1 403 3 is_stmt 1 view .LVU106
 436 000e 0168     		ldr	r1, [r0]
 437 0010 0A68     		ldr	r2, [r1]
 438 0012 0124     		movs	r4, #1
 439 0014 A243     		bics	r2, r4
 440 0016 0A60     		str	r2, [r1]
 406:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 441              		.loc 1 406 3 view .LVU107
 442 0018 0268     		ldr	r2, [r0]
 443 001a 5168     		ldr	r1, [r2, #4]
 444 001c 1025     		movs	r5, #16
 445 001e A943     		bics	r1, r5
 446 0020 1943     		orrs	r1, r3
 447 0022 5160     		str	r1, [r2, #4]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 29


 409:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 448              		.loc 1 409 3 view .LVU108
 449 0024 0268     		ldr	r2, [r0]
 450 0026 1368     		ldr	r3, [r2]
 451              	.LVL31:
 409:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 452              		.loc 1 409 3 is_stmt 0 view .LVU109
 453 0028 2343     		orrs	r3, r4
 454 002a 1360     		str	r3, [r2]
 412:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 455              		.loc 1 412 3 is_stmt 1 view .LVU110
 412:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 456              		.loc 1 412 11 is_stmt 0 view .LVU111
 457 002c FFF7FEFF 		bl	UART_CheckIdleState
 458              	.LVL32:
 459              	.L20:
 413:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 460              		.loc 1 413 1 view .LVU112
 461              		@ sp needed
 462 0030 70BD     		pop	{r4, r5, r6, pc}
 463              	.LVL33:
 464              	.L21:
 394:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 465              		.loc 1 394 12 view .LVU113
 466 0032 0120     		movs	r0, #1
 467              	.LVL34:
 394:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 468              		.loc 1 394 12 view .LVU114
 469 0034 FCE7     		b	.L20
 470              		.cfi_endproc
 471              	.LFE220:
 473              		.section	.text.HAL_UARTEx_StopModeWakeUpSourceConfig,"ax",%progbits
 474              		.align	1
 475              		.global	HAL_UARTEx_StopModeWakeUpSourceConfig
 476              		.syntax unified
 477              		.code	16
 478              		.thumb_func
 480              	HAL_UARTEx_StopModeWakeUpSourceConfig:
 481              	.LVL35:
 482              	.LFB221:
 428:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 483              		.loc 1 428 1 is_stmt 1 view -0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 8
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 428:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 487              		.loc 1 428 1 is_stmt 0 view .LVU116
 488 0000 10B5     		push	{r4, lr}
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 4, -8
 491              		.cfi_offset 14, -4
 492 0002 84B0     		sub	sp, sp, #16
 493              		.cfi_def_cfa_offset 24
 494 0004 0400     		movs	r4, r0
 495 0006 0291     		str	r1, [sp, #8]
 496 0008 0392     		str	r2, [sp, #12]
 429:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tickstart;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 30


 497              		.loc 1 429 3 is_stmt 1 view .LVU117
 498              	.LVL36:
 430:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 499              		.loc 1 430 3 view .LVU118
 433:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* check the wake-up selection parameter */
 500              		.loc 1 433 3 view .LVU119
 435:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 501              		.loc 1 435 3 view .LVU120
 438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 502              		.loc 1 438 3 view .LVU121
 438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 503              		.loc 1 438 3 view .LVU122
 504 000a 8423     		movs	r3, #132
 505 000c C35C     		ldrb	r3, [r0, r3]
 506 000e 012B     		cmp	r3, #1
 507 0010 33D0     		beq	.L26
 438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 508              		.loc 1 438 3 discriminator 2 view .LVU123
 509 0012 0121     		movs	r1, #1
 510 0014 8423     		movs	r3, #132
 511 0016 C154     		strb	r1, [r0, r3]
 438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 512              		.loc 1 438 3 discriminator 2 view .LVU124
 440:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 513              		.loc 1 440 3 view .LVU125
 440:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 514              		.loc 1 440 17 is_stmt 0 view .LVU126
 515 0018 0433     		adds	r3, r3, #4
 516 001a 2422     		movs	r2, #36
 517 001c C250     		str	r2, [r0, r3]
 443:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 518              		.loc 1 443 3 is_stmt 1 view .LVU127
 519 001e 0268     		ldr	r2, [r0]
 520 0020 1368     		ldr	r3, [r2]
 521 0022 8B43     		bics	r3, r1
 522 0024 1360     		str	r3, [r2]
 446:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 523              		.loc 1 446 3 view .LVU128
 524 0026 0168     		ldr	r1, [r0]
 525 0028 8B68     		ldr	r3, [r1, #8]
 526 002a 154A     		ldr	r2, .L29
 527 002c 1340     		ands	r3, r2
 528 002e 029A     		ldr	r2, [sp, #8]
 529 0030 1343     		orrs	r3, r2
 530 0032 8B60     		str	r3, [r1, #8]
 448:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 531              		.loc 1 448 3 view .LVU129
 448:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 532              		.loc 1 448 6 is_stmt 0 view .LVU130
 533 0034 002A     		cmp	r2, #0
 534 0036 15D0     		beq	.L28
 535              	.LVL37:
 536              	.L24:
 454:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 537              		.loc 1 454 3 is_stmt 1 view .LVU131
 538 0038 2268     		ldr	r2, [r4]
 539 003a 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 31


 540 003c 0121     		movs	r1, #1
 541 003e 0B43     		orrs	r3, r1
 542 0040 1360     		str	r3, [r2]
 457:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 543              		.loc 1 457 3 view .LVU132
 457:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 544              		.loc 1 457 15 is_stmt 0 view .LVU133
 545 0042 FFF7FEFF 		bl	HAL_GetTick
 546              	.LVL38:
 547 0046 0300     		movs	r3, r0
 548              	.LVL39:
 460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 549              		.loc 1 460 3 is_stmt 1 view .LVU134
 460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 550              		.loc 1 460 7 is_stmt 0 view .LVU135
 551 0048 8021     		movs	r1, #128
 552 004a 0E4A     		ldr	r2, .L29+4
 553 004c 0092     		str	r2, [sp]
 554 004e 0022     		movs	r2, #0
 555 0050 C903     		lsls	r1, r1, #15
 556 0052 2000     		movs	r0, r4
 557              	.LVL40:
 460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 558              		.loc 1 460 7 view .LVU136
 559 0054 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 560              	.LVL41:
 460:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 561              		.loc 1 460 6 discriminator 1 view .LVU137
 562 0058 0028     		cmp	r0, #0
 563 005a 08D1     		bne	.L27
 467:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 564              		.loc 1 467 5 is_stmt 1 view .LVU138
 467:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 565              		.loc 1 467 19 is_stmt 0 view .LVU139
 566 005c 8823     		movs	r3, #136
 567 005e 2022     		movs	r2, #32
 568 0060 E250     		str	r2, [r4, r3]
 569 0062 05E0     		b	.L25
 570              	.LVL42:
 571              	.L28:
 450:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 572              		.loc 1 450 5 is_stmt 1 view .LVU140
 573 0064 1100     		movs	r1, r2
 574 0066 039A     		ldr	r2, [sp, #12]
 575 0068 FFF7FEFF 		bl	UARTEx_Wakeup_AddressConfig
 576              	.LVL43:
 450:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 577              		.loc 1 450 5 is_stmt 0 view .LVU141
 578 006c E4E7     		b	.L24
 579              	.LVL44:
 580              	.L27:
 462:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 581              		.loc 1 462 12 view .LVU142
 582 006e 0320     		movs	r0, #3
 583              	.L25:
 584              	.LVL45:
 471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 32


 585              		.loc 1 471 3 is_stmt 1 view .LVU143
 471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 586              		.loc 1 471 3 view .LVU144
 587 0070 8423     		movs	r3, #132
 588 0072 0022     		movs	r2, #0
 589 0074 E254     		strb	r2, [r4, r3]
 471:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 590              		.loc 1 471 3 view .LVU145
 473:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 591              		.loc 1 473 3 view .LVU146
 592              	.LVL46:
 593              	.L23:
 474:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 594              		.loc 1 474 1 is_stmt 0 view .LVU147
 595 0076 04B0     		add	sp, sp, #16
 596              		@ sp needed
 597              	.LVL47:
 474:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 598              		.loc 1 474 1 view .LVU148
 599 0078 10BD     		pop	{r4, pc}
 600              	.LVL48:
 601              	.L26:
 438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 602              		.loc 1 438 3 discriminator 1 view .LVU149
 603 007a 0220     		movs	r0, #2
 604              	.LVL49:
 438:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 605              		.loc 1 438 3 discriminator 1 view .LVU150
 606 007c FBE7     		b	.L23
 607              	.L30:
 608 007e C046     		.align	2
 609              	.L29:
 610 0080 FFFFCFFF 		.word	-3145729
 611 0084 FFFFFF01 		.word	33554431
 612              		.cfi_endproc
 613              	.LFE221:
 615              		.section	.text.HAL_UARTEx_EnableStopMode,"ax",%progbits
 616              		.align	1
 617              		.global	HAL_UARTEx_EnableStopMode
 618              		.syntax unified
 619              		.code	16
 620              		.thumb_func
 622              	HAL_UARTEx_EnableStopMode:
 623              	.LVL50:
 624              	.LFB222:
 483:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 625              		.loc 1 483 1 is_stmt 1 view -0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 483:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 629              		.loc 1 483 1 is_stmt 0 view .LVU152
 630 0000 10B5     		push	{r4, lr}
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 4, -8
 633              		.cfi_offset 14, -4
 485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 33


 634              		.loc 1 485 3 is_stmt 1 view .LVU153
 485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 635              		.loc 1 485 3 view .LVU154
 636 0002 8423     		movs	r3, #132
 637 0004 C35C     		ldrb	r3, [r0, r3]
 638 0006 012B     		cmp	r3, #1
 639 0008 11D0     		beq	.L33
 485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 640              		.loc 1 485 3 discriminator 2 view .LVU155
 641 000a 8422     		movs	r2, #132
 642 000c 0123     		movs	r3, #1
 643 000e 8354     		strb	r3, [r0, r2]
 485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 644              		.loc 1 485 3 discriminator 2 view .LVU156
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 645              		.loc 1 488 3 view .LVU157
 646              	.LBB30:
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 647              		.loc 1 488 3 view .LVU158
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 648              		.loc 1 488 3 view .LVU159
 649              	.LBB31:
 650              	.LBI31:
 651              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 34


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 35


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 36


 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 37


 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 38


 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 39


 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 40


 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 41


 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 42


 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 43


 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 44


 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 45


 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 46


 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 47


 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 48


 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 49


 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 50


 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 966:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 973:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 996:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 51


1003:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ISB();
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1006:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1009:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
1011:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
1012:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
1013:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
1015:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ISB();
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1019:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1020:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1033:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1034:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1036:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
1039:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
1040:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1044:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
1052:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 52


1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1063:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1064:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1071:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1084:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1087:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1090:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1099:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
1100:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1104:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1106:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
1108:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
1109:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
1110:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
1112:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
1114:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 53


1117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1118:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1119:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
1120:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
1122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1123:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
1124:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1125:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1127:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
1128:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1129:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1130:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1132:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1133:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1134:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
1135:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
1136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
1137:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1138:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
1139:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1140:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
1143:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1144:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1145:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1146:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1147:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1148:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
1150:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
1151:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1152:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1153:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
1154:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
1156:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1157:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1159:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1160:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1161:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
1162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
1163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
1164:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1165:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
1166:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1167:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
1168:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1169:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1170:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1171:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1172:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1173:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 54


1174:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
1175:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
1176:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
1177:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1178:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
1179:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1180:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1182:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
1183:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1187:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1188:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
1189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
1190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
1191:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1192:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
1193:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1194:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
1195:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1199:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1200:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
1201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
1202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
1203:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 652              		.loc 2 1204 31 view .LVU160
 653              	.LBB32:
1205:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1206:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 654              		.loc 2 1206 3 view .LVU161
1207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 655              		.loc 2 1208 3 view .LVU162
 656              		.syntax divided
 657              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 658 0010 EFF3108C 		MRS ip, primask
 659              	@ 0 "" 2
 660              	.LVL51:
1209:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 661              		.loc 2 1209 3 view .LVU163
 662              		.loc 2 1209 3 is_stmt 0 view .LVU164
 663              		.thumb
 664              		.syntax unified
 665              	.LBE32:
 666              	.LBE31:
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 667              		.loc 1 488 3 is_stmt 1 discriminator 1 view .LVU165
 668              	.LBB33:
 669              	.LBI33:
1210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 55


1212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1213:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
1214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
1216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
1217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
1218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
1220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
1224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
1225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1226:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1228:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1229:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
1231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
1232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
1233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 670              		.loc 2 1234 27 view .LVU166
 671              	.LBB34:
1235:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1236:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 672              		.loc 2 1236 3 view .LVU167
 673              		.syntax divided
 674              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 675 0014 83F31088 		MSR primask, r3
 676              	@ 0 "" 2
 677              	.LVL52:
 678              		.loc 2 1236 3 is_stmt 0 view .LVU168
 679              		.thumb
 680              		.syntax unified
 681              	.LBE34:
 682              	.LBE33:
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 683              		.loc 1 488 3 is_stmt 1 discriminator 2 view .LVU169
 684 0018 0168     		ldr	r1, [r0]
 685 001a 0B68     		ldr	r3, [r1]
 686 001c 0224     		movs	r4, #2
 687 001e 2343     		orrs	r3, r4
 688 0020 0B60     		str	r3, [r1]
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 689              		.loc 1 488 3 discriminator 2 view .LVU170
 690              	.LVL53:
 691              	.LBB35:
 692              	.LBI35:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693              		.loc 2 1234 27 view .LVU171
 694              	.LBB36:
 695              		.loc 2 1236 3 view .LVU172
 696              		.syntax divided
 697              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 698 0022 8CF31088 		MSR primask, ip
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 56


 699              	@ 0 "" 2
 700              	.LVL54:
 701              		.loc 2 1236 3 is_stmt 0 view .LVU173
 702              		.thumb
 703              		.syntax unified
 704              	.LBE36:
 705              	.LBE35:
 706              	.LBE30:
 488:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 707              		.loc 1 488 3 is_stmt 1 discriminator 3 view .LVU174
 491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 708              		.loc 1 491 3 view .LVU175
 491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 709              		.loc 1 491 3 view .LVU176
 710 0026 0023     		movs	r3, #0
 711 0028 8354     		strb	r3, [r0, r2]
 491:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 712              		.loc 1 491 3 view .LVU177
 493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 713              		.loc 1 493 3 view .LVU178
 493:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 714              		.loc 1 493 10 is_stmt 0 view .LVU179
 715 002a 0020     		movs	r0, #0
 716              	.LVL55:
 717              	.L32:
 494:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 718              		.loc 1 494 1 view .LVU180
 719              		@ sp needed
 720 002c 10BD     		pop	{r4, pc}
 721              	.LVL56:
 722              	.L33:
 485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 723              		.loc 1 485 3 discriminator 1 view .LVU181
 724 002e 0220     		movs	r0, #2
 725              	.LVL57:
 485:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 726              		.loc 1 485 3 discriminator 1 view .LVU182
 727 0030 FCE7     		b	.L32
 728              		.cfi_endproc
 729              	.LFE222:
 731              		.section	.text.HAL_UARTEx_DisableStopMode,"ax",%progbits
 732              		.align	1
 733              		.global	HAL_UARTEx_DisableStopMode
 734              		.syntax unified
 735              		.code	16
 736              		.thumb_func
 738              	HAL_UARTEx_DisableStopMode:
 739              	.LVL58:
 740              	.LFB223:
 502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 741              		.loc 1 502 1 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 502:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Process Locked */
 745              		.loc 1 502 1 is_stmt 0 view .LVU184
 746 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 57


 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 4, -8
 749              		.cfi_offset 14, -4
 504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 750              		.loc 1 504 3 is_stmt 1 view .LVU185
 504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 751              		.loc 1 504 3 view .LVU186
 752 0002 8423     		movs	r3, #132
 753 0004 C35C     		ldrb	r3, [r0, r3]
 754 0006 012B     		cmp	r3, #1
 755 0008 11D0     		beq	.L36
 504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 756              		.loc 1 504 3 discriminator 2 view .LVU187
 757 000a 8422     		movs	r2, #132
 758 000c 0123     		movs	r3, #1
 759 000e 8354     		strb	r3, [r0, r2]
 504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 760              		.loc 1 504 3 discriminator 2 view .LVU188
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 761              		.loc 1 507 3 view .LVU189
 762              	.LBB37:
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 763              		.loc 1 507 3 view .LVU190
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 764              		.loc 1 507 3 view .LVU191
 765              	.LBB38:
 766              	.LBI38:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 767              		.loc 2 1204 31 view .LVU192
 768              	.LBB39:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 769              		.loc 2 1206 3 view .LVU193
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 770              		.loc 2 1208 3 view .LVU194
 771              		.syntax divided
 772              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 773 0010 EFF3108C 		MRS ip, primask
 774              	@ 0 "" 2
 775              	.LVL59:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 776              		.loc 2 1209 3 view .LVU195
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 777              		.loc 2 1209 3 is_stmt 0 view .LVU196
 778              		.thumb
 779              		.syntax unified
 780              	.LBE39:
 781              	.LBE38:
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 782              		.loc 1 507 3 is_stmt 1 discriminator 1 view .LVU197
 783              	.LBB40:
 784              	.LBI40:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 785              		.loc 2 1234 27 view .LVU198
 786              	.LBB41:
 787              		.loc 2 1236 3 view .LVU199
 788              		.syntax divided
 789              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 58


 790 0014 83F31088 		MSR primask, r3
 791              	@ 0 "" 2
 792              	.LVL60:
 793              		.loc 2 1236 3 is_stmt 0 view .LVU200
 794              		.thumb
 795              		.syntax unified
 796              	.LBE41:
 797              	.LBE40:
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 798              		.loc 1 507 3 is_stmt 1 discriminator 2 view .LVU201
 799 0018 0168     		ldr	r1, [r0]
 800 001a 0B68     		ldr	r3, [r1]
 801 001c 0224     		movs	r4, #2
 802 001e A343     		bics	r3, r4
 803 0020 0B60     		str	r3, [r1]
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 804              		.loc 1 507 3 discriminator 2 view .LVU202
 805              	.LVL61:
 806              	.LBB42:
 807              	.LBI42:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 808              		.loc 2 1234 27 view .LVU203
 809              	.LBB43:
 810              		.loc 2 1236 3 view .LVU204
 811              		.syntax divided
 812              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 813 0022 8CF31088 		MSR primask, ip
 814              	@ 0 "" 2
 815              	.LVL62:
 816              		.loc 2 1236 3 is_stmt 0 view .LVU205
 817              		.thumb
 818              		.syntax unified
 819              	.LBE43:
 820              	.LBE42:
 821              	.LBE37:
 507:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 822              		.loc 1 507 3 is_stmt 1 discriminator 3 view .LVU206
 510:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 823              		.loc 1 510 3 view .LVU207
 510:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 824              		.loc 1 510 3 view .LVU208
 825 0026 0023     		movs	r3, #0
 826 0028 8354     		strb	r3, [r0, r2]
 510:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 827              		.loc 1 510 3 view .LVU209
 512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 828              		.loc 1 512 3 view .LVU210
 512:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 829              		.loc 1 512 10 is_stmt 0 view .LVU211
 830 002a 0020     		movs	r0, #0
 831              	.LVL63:
 832              	.L35:
 513:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 833              		.loc 1 513 1 view .LVU212
 834              		@ sp needed
 835 002c 10BD     		pop	{r4, pc}
 836              	.LVL64:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 59


 837              	.L36:
 504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 838              		.loc 1 504 3 discriminator 1 view .LVU213
 839 002e 0220     		movs	r0, #2
 840              	.LVL65:
 504:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 841              		.loc 1 504 3 discriminator 1 view .LVU214
 842 0030 FCE7     		b	.L35
 843              		.cfi_endproc
 844              	.LFE223:
 846              		.section	.text.HAL_UARTEx_EnableFifoMode,"ax",%progbits
 847              		.align	1
 848              		.global	HAL_UARTEx_EnableFifoMode
 849              		.syntax unified
 850              		.code	16
 851              		.thumb_func
 853              	HAL_UARTEx_EnableFifoMode:
 854              	.LVL66:
 855              	.LFB224:
 521:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 856              		.loc 1 521 1 is_stmt 1 view -0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 0, uses_anonymous_args = 0
 521:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 860              		.loc 1 521 1 is_stmt 0 view .LVU216
 861 0000 70B5     		push	{r4, r5, r6, lr}
 862              		.cfi_def_cfa_offset 16
 863              		.cfi_offset 4, -16
 864              		.cfi_offset 5, -12
 865              		.cfi_offset 6, -8
 866              		.cfi_offset 14, -4
 867 0002 0400     		movs	r4, r0
 522:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 868              		.loc 1 522 3 is_stmt 1 view .LVU217
 525:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 869              		.loc 1 525 3 view .LVU218
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 870              		.loc 1 528 3 view .LVU219
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 871              		.loc 1 528 3 view .LVU220
 872 0004 8423     		movs	r3, #132
 873 0006 C35C     		ldrb	r3, [r0, r3]
 874 0008 012B     		cmp	r3, #1
 875 000a 19D0     		beq	.L39
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 876              		.loc 1 528 3 discriminator 2 view .LVU221
 877 000c 8425     		movs	r5, #132
 878 000e 0120     		movs	r0, #1
 879              	.LVL67:
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 880              		.loc 1 528 3 is_stmt 0 discriminator 2 view .LVU222
 881 0010 6055     		strb	r0, [r4, r5]
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 882              		.loc 1 528 3 is_stmt 1 discriminator 2 view .LVU223
 530:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 883              		.loc 1 530 3 view .LVU224
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 60


 530:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 884              		.loc 1 530 17 is_stmt 0 view .LVU225
 885 0012 8826     		movs	r6, #136
 886 0014 2423     		movs	r3, #36
 887 0016 A351     		str	r3, [r4, r6]
 533:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 888              		.loc 1 533 3 is_stmt 1 view .LVU226
 533:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 889              		.loc 1 533 12 is_stmt 0 view .LVU227
 890 0018 2268     		ldr	r2, [r4]
 533:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 891              		.loc 1 533 10 view .LVU228
 892 001a 1368     		ldr	r3, [r2]
 893              	.LVL68:
 536:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 894              		.loc 1 536 3 is_stmt 1 view .LVU229
 895 001c 1168     		ldr	r1, [r2]
 896 001e 8143     		bics	r1, r0
 897 0020 1160     		str	r1, [r2]
 539:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_ENABLE;
 898              		.loc 1 539 3 view .LVU230
 899 0022 8022     		movs	r2, #128
 900 0024 9205     		lsls	r2, r2, #22
 901 0026 1343     		orrs	r3, r2
 902              	.LVL69:
 540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 903              		.loc 1 540 3 view .LVU231
 540:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 904              		.loc 1 540 19 is_stmt 0 view .LVU232
 905 0028 6266     		str	r2, [r4, #100]
 543:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 906              		.loc 1 543 3 is_stmt 1 view .LVU233
 907 002a 2268     		ldr	r2, [r4]
 908 002c 1360     		str	r3, [r2]
 546:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 909              		.loc 1 546 3 view .LVU234
 910 002e 2000     		movs	r0, r4
 911 0030 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 912              	.LVL70:
 548:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 913              		.loc 1 548 3 view .LVU235
 548:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 914              		.loc 1 548 17 is_stmt 0 view .LVU236
 915 0034 2023     		movs	r3, #32
 916 0036 A351     		str	r3, [r4, r6]
 551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 917              		.loc 1 551 3 is_stmt 1 view .LVU237
 551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 918              		.loc 1 551 3 view .LVU238
 919 0038 0023     		movs	r3, #0
 920 003a 6355     		strb	r3, [r4, r5]
 551:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 921              		.loc 1 551 3 view .LVU239
 553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 922              		.loc 1 553 3 view .LVU240
 553:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 923              		.loc 1 553 10 is_stmt 0 view .LVU241
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 61


 924 003c 0020     		movs	r0, #0
 925              	.LVL71:
 926              	.L38:
 554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 927              		.loc 1 554 1 view .LVU242
 928              		@ sp needed
 929              	.LVL72:
 554:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 930              		.loc 1 554 1 view .LVU243
 931 003e 70BD     		pop	{r4, r5, r6, pc}
 932              	.LVL73:
 933              	.L39:
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 934              		.loc 1 528 3 discriminator 1 view .LVU244
 935 0040 0220     		movs	r0, #2
 936              	.LVL74:
 528:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 937              		.loc 1 528 3 discriminator 1 view .LVU245
 938 0042 FCE7     		b	.L38
 939              		.cfi_endproc
 940              	.LFE224:
 942              		.section	.text.HAL_UARTEx_DisableFifoMode,"ax",%progbits
 943              		.align	1
 944              		.global	HAL_UARTEx_DisableFifoMode
 945              		.syntax unified
 946              		.code	16
 947              		.thumb_func
 949              	HAL_UARTEx_DisableFifoMode:
 950              	.LVL75:
 951              	.LFB225:
 562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 952              		.loc 1 562 1 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 562:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 956              		.loc 1 562 1 is_stmt 0 view .LVU247
 957 0000 70B5     		push	{r4, r5, r6, lr}
 958              		.cfi_def_cfa_offset 16
 959              		.cfi_offset 4, -16
 960              		.cfi_offset 5, -12
 961              		.cfi_offset 6, -8
 962              		.cfi_offset 14, -4
 563:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 963              		.loc 1 563 3 is_stmt 1 view .LVU248
 566:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 964              		.loc 1 566 3 view .LVU249
 569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 965              		.loc 1 569 3 view .LVU250
 569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 966              		.loc 1 569 3 view .LVU251
 967 0002 8423     		movs	r3, #132
 968 0004 C35C     		ldrb	r3, [r0, r3]
 969 0006 012B     		cmp	r3, #1
 970 0008 15D0     		beq	.L42
 569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 971              		.loc 1 569 3 discriminator 2 view .LVU252
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 62


 972 000a 8424     		movs	r4, #132
 973 000c 0126     		movs	r6, #1
 974 000e 0655     		strb	r6, [r0, r4]
 569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 975              		.loc 1 569 3 discriminator 2 view .LVU253
 571:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 976              		.loc 1 571 3 view .LVU254
 571:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 977              		.loc 1 571 17 is_stmt 0 view .LVU255
 978 0010 8825     		movs	r5, #136
 979 0012 2423     		movs	r3, #36
 980 0014 4351     		str	r3, [r0, r5]
 574:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 981              		.loc 1 574 3 is_stmt 1 view .LVU256
 574:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 982              		.loc 1 574 12 is_stmt 0 view .LVU257
 983 0016 0268     		ldr	r2, [r0]
 574:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 984              		.loc 1 574 10 view .LVU258
 985 0018 1368     		ldr	r3, [r2]
 986              	.LVL76:
 577:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 987              		.loc 1 577 3 is_stmt 1 view .LVU259
 988 001a 1168     		ldr	r1, [r2]
 989 001c B143     		bics	r1, r6
 990 001e 1160     		str	r1, [r2]
 580:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   huart->FifoMode = UART_FIFOMODE_DISABLE;
 991              		.loc 1 580 3 view .LVU260
 992 0020 064A     		ldr	r2, .L43
 993 0022 1340     		ands	r3, r2
 994              	.LVL77:
 581:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 995              		.loc 1 581 3 view .LVU261
 581:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 996              		.loc 1 581 19 is_stmt 0 view .LVU262
 997 0024 0022     		movs	r2, #0
 998 0026 4266     		str	r2, [r0, #100]
 584:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 999              		.loc 1 584 3 is_stmt 1 view .LVU263
 1000 0028 0168     		ldr	r1, [r0]
 1001 002a 0B60     		str	r3, [r1]
 586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1002              		.loc 1 586 3 view .LVU264
 586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1003              		.loc 1 586 17 is_stmt 0 view .LVU265
 1004 002c 2023     		movs	r3, #32
 1005              	.LVL78:
 586:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1006              		.loc 1 586 17 view .LVU266
 1007 002e 4351     		str	r3, [r0, r5]
 1008              	.LVL79:
 589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1009              		.loc 1 589 3 is_stmt 1 view .LVU267
 589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1010              		.loc 1 589 3 view .LVU268
 1011 0030 0255     		strb	r2, [r0, r4]
 589:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 63


 1012              		.loc 1 589 3 view .LVU269
 591:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 1013              		.loc 1 591 3 view .LVU270
 591:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 1014              		.loc 1 591 10 is_stmt 0 view .LVU271
 1015 0032 0020     		movs	r0, #0
 1016              	.LVL80:
 1017              	.L41:
 592:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1018              		.loc 1 592 1 view .LVU272
 1019              		@ sp needed
 1020 0034 70BD     		pop	{r4, r5, r6, pc}
 1021              	.LVL81:
 1022              	.L42:
 569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1023              		.loc 1 569 3 discriminator 1 view .LVU273
 1024 0036 0220     		movs	r0, #2
 1025              	.LVL82:
 569:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1026              		.loc 1 569 3 discriminator 1 view .LVU274
 1027 0038 FCE7     		b	.L41
 1028              	.L44:
 1029 003a C046     		.align	2
 1030              	.L43:
 1031 003c FFFFFFDF 		.word	-536870913
 1032              		.cfi_endproc
 1033              	.LFE225:
 1035              		.section	.text.HAL_UARTEx_SetTxFifoThreshold,"ax",%progbits
 1036              		.align	1
 1037              		.global	HAL_UARTEx_SetTxFifoThreshold
 1038              		.syntax unified
 1039              		.code	16
 1040              		.thumb_func
 1042              	HAL_UARTEx_SetTxFifoThreshold:
 1043              	.LVL83:
 1044              	.LFB226:
 608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 1045              		.loc 1 608 1 is_stmt 1 view -0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 608:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 1049              		.loc 1 608 1 is_stmt 0 view .LVU276
 1050 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1051              		.cfi_def_cfa_offset 24
 1052              		.cfi_offset 3, -24
 1053              		.cfi_offset 4, -20
 1054              		.cfi_offset 5, -16
 1055              		.cfi_offset 6, -12
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 0400     		movs	r4, r0
 1059 0004 0A00     		movs	r2, r1
 609:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1060              		.loc 1 609 3 is_stmt 1 view .LVU277
 612:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));
 1061              		.loc 1 612 3 view .LVU278
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 64


 613:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1062              		.loc 1 613 3 view .LVU279
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1063              		.loc 1 616 3 view .LVU280
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1064              		.loc 1 616 3 view .LVU281
 1065 0006 8423     		movs	r3, #132
 1066 0008 C35C     		ldrb	r3, [r0, r3]
 1067 000a 012B     		cmp	r3, #1
 1068 000c 1BD0     		beq	.L47
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1069              		.loc 1 616 3 discriminator 2 view .LVU282
 1070 000e 8425     		movs	r5, #132
 1071 0010 0120     		movs	r0, #1
 1072              	.LVL84:
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1073              		.loc 1 616 3 is_stmt 0 discriminator 2 view .LVU283
 1074 0012 6055     		strb	r0, [r4, r5]
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1075              		.loc 1 616 3 is_stmt 1 discriminator 2 view .LVU284
 618:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1076              		.loc 1 618 3 view .LVU285
 618:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1077              		.loc 1 618 17 is_stmt 0 view .LVU286
 1078 0014 8826     		movs	r6, #136
 1079 0016 2423     		movs	r3, #36
 1080 0018 A351     		str	r3, [r4, r6]
 621:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1081              		.loc 1 621 3 is_stmt 1 view .LVU287
 621:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1082              		.loc 1 621 12 is_stmt 0 view .LVU288
 1083 001a 2368     		ldr	r3, [r4]
 621:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1084              		.loc 1 621 10 view .LVU289
 1085 001c 1F68     		ldr	r7, [r3]
 1086              	.LVL85:
 624:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1087              		.loc 1 624 3 is_stmt 1 view .LVU290
 1088 001e 1968     		ldr	r1, [r3]
 1089              	.LVL86:
 624:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1090              		.loc 1 624 3 is_stmt 0 view .LVU291
 1091 0020 8143     		bics	r1, r0
 1092 0022 1960     		str	r1, [r3]
 627:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1093              		.loc 1 627 3 is_stmt 1 view .LVU292
 1094 0024 2068     		ldr	r0, [r4]
 1095 0026 8368     		ldr	r3, [r0, #8]
 1096 0028 DB00     		lsls	r3, r3, #3
 1097 002a D908     		lsrs	r1, r3, #3
 1098 002c 1143     		orrs	r1, r2
 1099 002e 8160     		str	r1, [r0, #8]
 630:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1100              		.loc 1 630 3 view .LVU293
 1101 0030 2000     		movs	r0, r4
 1102 0032 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 1103              	.LVL87:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 65


 633:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1104              		.loc 1 633 3 view .LVU294
 1105 0036 2368     		ldr	r3, [r4]
 1106 0038 1F60     		str	r7, [r3]
 635:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1107              		.loc 1 635 3 view .LVU295
 635:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1108              		.loc 1 635 17 is_stmt 0 view .LVU296
 1109 003a 2023     		movs	r3, #32
 1110 003c A351     		str	r3, [r4, r6]
 638:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1111              		.loc 1 638 3 is_stmt 1 view .LVU297
 638:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1112              		.loc 1 638 3 view .LVU298
 1113 003e 0023     		movs	r3, #0
 1114 0040 6355     		strb	r3, [r4, r5]
 638:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1115              		.loc 1 638 3 view .LVU299
 640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 1116              		.loc 1 640 3 view .LVU300
 640:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 1117              		.loc 1 640 10 is_stmt 0 view .LVU301
 1118 0042 0020     		movs	r0, #0
 1119              	.LVL88:
 1120              	.L46:
 641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1121              		.loc 1 641 1 view .LVU302
 1122              		@ sp needed
 1123              	.LVL89:
 641:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1124              		.loc 1 641 1 view .LVU303
 1125 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1126              	.LVL90:
 1127              	.L47:
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1128              		.loc 1 616 3 discriminator 1 view .LVU304
 1129 0046 0220     		movs	r0, #2
 1130              	.LVL91:
 616:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1131              		.loc 1 616 3 discriminator 1 view .LVU305
 1132 0048 FCE7     		b	.L46
 1133              		.cfi_endproc
 1134              	.LFE226:
 1136              		.section	.text.HAL_UARTEx_SetRxFifoThreshold,"ax",%progbits
 1137              		.align	1
 1138              		.global	HAL_UARTEx_SetRxFifoThreshold
 1139              		.syntax unified
 1140              		.code	16
 1141              		.thumb_func
 1143              	HAL_UARTEx_SetRxFifoThreshold:
 1144              	.LVL92:
 1145              	.LFB227:
 657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 1146              		.loc 1 657 1 is_stmt 1 view -0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 66


 657:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tmpcr1;
 1150              		.loc 1 657 1 is_stmt 0 view .LVU307
 1151 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1152              		.cfi_def_cfa_offset 24
 1153              		.cfi_offset 3, -24
 1154              		.cfi_offset 4, -20
 1155              		.cfi_offset 5, -16
 1156              		.cfi_offset 6, -12
 1157              		.cfi_offset 7, -8
 1158              		.cfi_offset 14, -4
 1159 0002 0400     		movs	r4, r0
 1160 0004 0B00     		movs	r3, r1
 658:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1161              		.loc 1 658 3 is_stmt 1 view .LVU308
 661:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));
 1162              		.loc 1 661 3 view .LVU309
 662:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1163              		.loc 1 662 3 view .LVU310
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1164              		.loc 1 665 3 view .LVU311
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1165              		.loc 1 665 3 view .LVU312
 1166 0006 8422     		movs	r2, #132
 1167 0008 825C     		ldrb	r2, [r0, r2]
 1168 000a 012A     		cmp	r2, #1
 1169 000c 1BD0     		beq	.L50
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1170              		.loc 1 665 3 discriminator 2 view .LVU313
 1171 000e 8425     		movs	r5, #132
 1172 0010 0120     		movs	r0, #1
 1173              	.LVL93:
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1174              		.loc 1 665 3 is_stmt 0 discriminator 2 view .LVU314
 1175 0012 6055     		strb	r0, [r4, r5]
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1176              		.loc 1 665 3 is_stmt 1 discriminator 2 view .LVU315
 667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1177              		.loc 1 667 3 view .LVU316
 667:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1178              		.loc 1 667 17 is_stmt 0 view .LVU317
 1179 0014 8826     		movs	r6, #136
 1180 0016 2422     		movs	r2, #36
 1181 0018 A251     		str	r2, [r4, r6]
 670:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1182              		.loc 1 670 3 is_stmt 1 view .LVU318
 670:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1183              		.loc 1 670 12 is_stmt 0 view .LVU319
 1184 001a 2268     		ldr	r2, [r4]
 670:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1185              		.loc 1 670 10 view .LVU320
 1186 001c 1768     		ldr	r7, [r2]
 1187              	.LVL94:
 673:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1188              		.loc 1 673 3 is_stmt 1 view .LVU321
 1189 001e 1168     		ldr	r1, [r2]
 1190              	.LVL95:
 673:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 67


 1191              		.loc 1 673 3 is_stmt 0 view .LVU322
 1192 0020 8143     		bics	r1, r0
 1193 0022 1160     		str	r1, [r2]
 676:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1194              		.loc 1 676 3 is_stmt 1 view .LVU323
 1195 0024 2268     		ldr	r2, [r4]
 1196 0026 9168     		ldr	r1, [r2, #8]
 1197 0028 0848     		ldr	r0, .L51
 1198 002a 0140     		ands	r1, r0
 1199 002c 1943     		orrs	r1, r3
 1200 002e 9160     		str	r1, [r2, #8]
 679:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1201              		.loc 1 679 3 view .LVU324
 1202 0030 2000     		movs	r0, r4
 1203 0032 FFF7FEFF 		bl	UARTEx_SetNbDataToProcess
 1204              	.LVL96:
 682:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1205              		.loc 1 682 3 view .LVU325
 1206 0036 2368     		ldr	r3, [r4]
 1207 0038 1F60     		str	r7, [r3]
 684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1208              		.loc 1 684 3 view .LVU326
 684:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1209              		.loc 1 684 17 is_stmt 0 view .LVU327
 1210 003a 2023     		movs	r3, #32
 1211 003c A351     		str	r3, [r4, r6]
 687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1212              		.loc 1 687 3 is_stmt 1 view .LVU328
 687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1213              		.loc 1 687 3 view .LVU329
 1214 003e 0023     		movs	r3, #0
 1215 0040 6355     		strb	r3, [r4, r5]
 687:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1216              		.loc 1 687 3 view .LVU330
 689:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 1217              		.loc 1 689 3 view .LVU331
 689:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 1218              		.loc 1 689 10 is_stmt 0 view .LVU332
 1219 0042 0020     		movs	r0, #0
 1220              	.LVL97:
 1221              	.L49:
 690:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1222              		.loc 1 690 1 view .LVU333
 1223              		@ sp needed
 1224              	.LVL98:
 690:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1225              		.loc 1 690 1 view .LVU334
 1226 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1227              	.LVL99:
 1228              	.L50:
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1229              		.loc 1 665 3 discriminator 1 view .LVU335
 1230 0046 0220     		movs	r0, #2
 1231              	.LVL100:
 665:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1232              		.loc 1 665 3 discriminator 1 view .LVU336
 1233 0048 FCE7     		b	.L49
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 68


 1234              	.L52:
 1235 004a C046     		.align	2
 1236              	.L51:
 1237 004c FFFFFFF1 		.word	-234881025
 1238              		.cfi_endproc
 1239              	.LFE227:
 1241              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 1242              		.align	1
 1243              		.global	HAL_UARTEx_ReceiveToIdle
 1244              		.syntax unified
 1245              		.code	16
 1246              		.thumb_func
 1248              	HAL_UARTEx_ReceiveToIdle:
 1249              	.LVL101:
 1250              	.LFB228:
 720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 1251              		.loc 1 720 1 is_stmt 1 view -0
 1252              		.cfi_startproc
 1253              		@ args = 4, pretend = 0, frame = 8
 1254              		@ frame_needed = 0, uses_anonymous_args = 0
 720:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint8_t  *pdata8bits;
 1255              		.loc 1 720 1 is_stmt 0 view .LVU338
 1256 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1257              		.cfi_def_cfa_offset 20
 1258              		.cfi_offset 4, -20
 1259              		.cfi_offset 5, -16
 1260              		.cfi_offset 6, -12
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 D646     		mov	lr, r10
 1264 0004 4F46     		mov	r7, r9
 1265 0006 4646     		mov	r6, r8
 1266 0008 C0B5     		push	{r6, r7, lr}
 1267              		.cfi_def_cfa_offset 32
 1268              		.cfi_offset 8, -32
 1269              		.cfi_offset 9, -28
 1270              		.cfi_offset 10, -24
 1271 000a 82B0     		sub	sp, sp, #8
 1272              		.cfi_def_cfa_offset 40
 1273 000c 0400     		movs	r4, r0
 1274 000e 0D00     		movs	r5, r1
 1275 0010 9046     		mov	r8, r2
 1276 0012 1F00     		movs	r7, r3
 1277 0014 0A9E     		ldr	r6, [sp, #40]
 721:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint16_t *pdata16bits;
 1278              		.loc 1 721 3 is_stmt 1 view .LVU339
 722:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint16_t uhMask;
 1279              		.loc 1 722 3 view .LVU340
 723:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   uint32_t tickstart;
 1280              		.loc 1 723 3 view .LVU341
 724:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1281              		.loc 1 724 3 view .LVU342
 727:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1282              		.loc 1 727 3 view .LVU343
 727:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1283              		.loc 1 727 12 is_stmt 0 view .LVU344
 1284 0016 8C23     		movs	r3, #140
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 69


 1285              	.LVL102:
 727:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1286              		.loc 1 727 12 view .LVU345
 1287 0018 C358     		ldr	r3, [r0, r3]
 727:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1288              		.loc 1 727 6 view .LVU346
 1289 001a 202B     		cmp	r3, #32
 1290 001c 00D0     		beq	.LCB1106
 1291 001e B1E0     		b	.L72	@long jump
 1292              	.LCB1106:
 729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1293              		.loc 1 729 5 is_stmt 1 view .LVU347
 729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1294              		.loc 1 729 8 is_stmt 0 view .LVU348
 1295 0020 0029     		cmp	r1, #0
 1296 0022 00D1     		bne	.LCB1109
 1297 0024 B5E0     		b	.L73	@long jump
 1298              	.LCB1109:
 729:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1299              		.loc 1 729 25 discriminator 1 view .LVU349
 1300 0026 002A     		cmp	r2, #0
 1301 0028 00D1     		bne	.LCB1111
 1302 002a B4E0     		b	.L74	@long jump
 1303              	.LCB1111:
 737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1304              		.loc 1 737 5 is_stmt 1 view .LVU350
 737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1305              		.loc 1 737 21 is_stmt 0 view .LVU351
 1306 002c 8268     		ldr	r2, [r0, #8]
 1307              	.LVL103:
 737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1308              		.loc 1 737 8 view .LVU352
 1309 002e 8023     		movs	r3, #128
 1310 0030 5B01     		lsls	r3, r3, #5
 1311 0032 9A42     		cmp	r2, r3
 1312 0034 05D1     		bne	.L55
 737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1313              		.loc 1 737 71 discriminator 1 view .LVU353
 1314 0036 0369     		ldr	r3, [r0, #16]
 737:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1315              		.loc 1 737 56 discriminator 1 view .LVU354
 1316 0038 002B     		cmp	r3, #0
 1317 003a 02D1     		bne	.L55
 739:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1318              		.loc 1 739 7 is_stmt 1 view .LVU355
 739:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1319              		.loc 1 739 10 is_stmt 0 view .LVU356
 1320 003c CB07     		lsls	r3, r1, #31
 1321 003e 00D5     		bpl	.LCB1126
 1322 0040 ABE0     		b	.L75	@long jump
 1323              	.LCB1126:
 1324              	.L55:
 745:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1325              		.loc 1 745 5 is_stmt 1 view .LVU357
 745:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1326              		.loc 1 745 22 is_stmt 0 view .LVU358
 1327 0042 0023     		movs	r3, #0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 70


 1328 0044 9022     		movs	r2, #144
 1329 0046 A350     		str	r3, [r4, r2]
 746:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1330              		.loc 1 746 5 is_stmt 1 view .LVU359
 746:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1331              		.loc 1 746 20 is_stmt 0 view .LVU360
 1332 0048 043A     		subs	r2, r2, #4
 1333 004a 2221     		movs	r1, #34
 1334              	.LVL104:
 746:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 1335              		.loc 1 746 20 view .LVU361
 1336 004c A150     		str	r1, [r4, r2]
 747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 1337              		.loc 1 747 5 is_stmt 1 view .LVU362
 747:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 1338              		.loc 1 747 26 is_stmt 0 view .LVU363
 1339 004e 8B3A     		subs	r2, r2, #139
 1340 0050 E266     		str	r2, [r4, #108]
 748:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1341              		.loc 1 748 5 is_stmt 1 view .LVU364
 748:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1342              		.loc 1 748 24 is_stmt 0 view .LVU365
 1343 0052 2367     		str	r3, [r4, #112]
 751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1344              		.loc 1 751 5 is_stmt 1 view .LVU366
 751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1345              		.loc 1 751 17 is_stmt 0 view .LVU367
 1346 0054 FFF7FEFF 		bl	HAL_GetTick
 1347              	.LVL105:
 751:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1348              		.loc 1 751 17 view .LVU368
 1349 0058 8146     		mov	r9, r0
 1350              	.LVL106:
 753:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 1351              		.loc 1 753 5 is_stmt 1 view .LVU369
 753:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxXferCount = Size;
 1352              		.loc 1 753 24 is_stmt 0 view .LVU370
 1353 005a 5C23     		movs	r3, #92
 1354 005c 4246     		mov	r2, r8
 1355 005e E252     		strh	r2, [r4, r3]
 754:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1356              		.loc 1 754 5 is_stmt 1 view .LVU371
 754:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1357              		.loc 1 754 24 is_stmt 0 view .LVU372
 1358 0060 0233     		adds	r3, r3, #2
 1359 0062 E252     		strh	r2, [r4, r3]
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1360              		.loc 1 757 5 is_stmt 1 view .LVU373
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1361              		.loc 1 757 5 view .LVU374
 1362 0064 A368     		ldr	r3, [r4, #8]
 1363 0066 8022     		movs	r2, #128
 1364 0068 5201     		lsls	r2, r2, #5
 1365 006a 9342     		cmp	r3, r2
 1366 006c 08D0     		beq	.L81
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1367              		.loc 1 757 5 discriminator 2 view .LVU375
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 71


 1368 006e 002B     		cmp	r3, #0
 1369 0070 15D1     		bne	.L59
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1370              		.loc 1 757 5 discriminator 5 view .LVU376
 1371 0072 2269     		ldr	r2, [r4, #16]
 1372 0074 002A     		cmp	r2, #0
 1373 0076 0ED1     		bne	.L60
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1374              		.loc 1 757 5 discriminator 7 view .LVU377
 1375 0078 6032     		adds	r2, r2, #96
 1376 007a FF21     		movs	r1, #255
 1377 007c A152     		strh	r1, [r4, r2]
 1378 007e 15E0     		b	.L58
 1379              	.L81:
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1380              		.loc 1 757 5 discriminator 1 view .LVU378
 1381 0080 2269     		ldr	r2, [r4, #16]
 1382 0082 002A     		cmp	r2, #0
 1383 0084 03D1     		bne	.L57
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1384              		.loc 1 757 5 discriminator 3 view .LVU379
 1385 0086 6032     		adds	r2, r2, #96
 1386 0088 4549     		ldr	r1, .L88
 1387 008a A152     		strh	r1, [r4, r2]
 1388 008c 0EE0     		b	.L58
 1389              	.L57:
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1390              		.loc 1 757 5 discriminator 4 view .LVU380
 1391 008e 6022     		movs	r2, #96
 1392 0090 FF21     		movs	r1, #255
 1393 0092 A152     		strh	r1, [r4, r2]
 1394 0094 0AE0     		b	.L58
 1395              	.L60:
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1396              		.loc 1 757 5 discriminator 8 view .LVU381
 1397 0096 6022     		movs	r2, #96
 1398 0098 7F21     		movs	r1, #127
 1399 009a A152     		strh	r1, [r4, r2]
 1400 009c 06E0     		b	.L58
 1401              	.L59:
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1402              		.loc 1 757 5 discriminator 6 view .LVU382
 1403 009e 8022     		movs	r2, #128
 1404 00a0 5205     		lsls	r2, r2, #21
 1405 00a2 9342     		cmp	r3, r2
 1406 00a4 0ED0     		beq	.L82
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1407              		.loc 1 757 5 discriminator 10 view .LVU383
 1408 00a6 6022     		movs	r2, #96
 1409 00a8 0021     		movs	r1, #0
 1410 00aa A152     		strh	r1, [r4, r2]
 1411              	.L58:
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1412              		.loc 1 757 5 discriminator 13 view .LVU384
 758:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1413              		.loc 1 758 5 view .LVU385
 758:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 72


 1414              		.loc 1 758 12 is_stmt 0 view .LVU386
 1415 00ac 6022     		movs	r2, #96
 1416 00ae A25A     		ldrh	r2, [r4, r2]
 1417 00b0 0192     		str	r2, [sp, #4]
 1418              	.LVL107:
 761:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1419              		.loc 1 761 5 is_stmt 1 view .LVU387
 761:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1420              		.loc 1 761 8 is_stmt 0 view .LVU388
 1421 00b2 8022     		movs	r2, #128
 1422 00b4 5201     		lsls	r2, r2, #5
 1423 00b6 9342     		cmp	r3, r2
 1424 00b8 0FD0     		beq	.L83
 769:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1425              		.loc 1 769 19 view .LVU389
 1426 00ba 0023     		movs	r3, #0
 1427 00bc 9A46     		mov	r10, r3
 1428              	.LVL108:
 1429              	.L63:
 773:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1430              		.loc 1 773 5 is_stmt 1 view .LVU390
 773:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1431              		.loc 1 773 12 is_stmt 0 view .LVU391
 1432 00be 0023     		movs	r3, #0
 1433 00c0 3B80     		strh	r3, [r7]
 776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1434              		.loc 1 776 5 is_stmt 1 view .LVU392
 776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1435              		.loc 1 776 11 is_stmt 0 view .LVU393
 1436 00c2 2CE0     		b	.L64
 1437              	.LVL109:
 1438              	.L82:
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1439              		.loc 1 757 5 is_stmt 1 discriminator 9 view .LVU394
 1440 00c4 2269     		ldr	r2, [r4, #16]
 1441 00c6 002A     		cmp	r2, #0
 1442 00c8 03D1     		bne	.L62
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1443              		.loc 1 757 5 discriminator 11 view .LVU395
 1444 00ca 6032     		adds	r2, r2, #96
 1445 00cc 7F21     		movs	r1, #127
 1446 00ce A152     		strh	r1, [r4, r2]
 1447 00d0 ECE7     		b	.L58
 1448              	.L62:
 757:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     uhMask = huart->Mask;
 1449              		.loc 1 757 5 discriminator 12 view .LVU396
 1450 00d2 6022     		movs	r2, #96
 1451 00d4 3F21     		movs	r1, #63
 1452 00d6 A152     		strh	r1, [r4, r2]
 1453 00d8 E8E7     		b	.L58
 1454              	.LVL110:
 1455              	.L83:
 761:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1456              		.loc 1 761 71 is_stmt 0 discriminator 1 view .LVU397
 1457 00da 2369     		ldr	r3, [r4, #16]
 761:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1458              		.loc 1 761 56 discriminator 1 view .LVU398
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 73


 1459 00dc 002B     		cmp	r3, #0
 1460 00de 02D0     		beq	.L77
 769:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1461              		.loc 1 769 19 view .LVU399
 1462 00e0 0023     		movs	r3, #0
 1463 00e2 9A46     		mov	r10, r3
 1464 00e4 EBE7     		b	.L63
 1465              	.L77:
 764:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1466              		.loc 1 764 19 view .LVU400
 1467 00e6 AA46     		mov	r10, r5
 763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 1468              		.loc 1 763 19 view .LVU401
 1469 00e8 0025     		movs	r5, #0
 1470              	.LVL111:
 763:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       pdata16bits = (uint16_t *) pData;
 1471              		.loc 1 763 19 view .LVU402
 1472 00ea E8E7     		b	.L63
 1473              	.LVL112:
 1474              	.L86:
 788:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 1475              		.loc 1 788 11 is_stmt 1 view .LVU403
 788:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           huart->RxState = HAL_UART_STATE_READY;
 1476              		.loc 1 788 30 is_stmt 0 view .LVU404
 1477 00ec 0223     		movs	r3, #2
 1478 00ee 2367     		str	r3, [r4, #112]
 789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1479              		.loc 1 789 11 is_stmt 1 view .LVU405
 789:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1480              		.loc 1 789 26 is_stmt 0 view .LVU406
 1481 00f0 8A33     		adds	r3, r3, #138
 1482 00f2 2022     		movs	r2, #32
 1483 00f4 E250     		str	r2, [r4, r3]
 791:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1484              		.loc 1 791 11 is_stmt 1 view .LVU407
 791:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1485              		.loc 1 791 18 is_stmt 0 view .LVU408
 1486 00f6 0020     		movs	r0, #0
 1487 00f8 45E0     		b	.L54
 1488              	.L87:
 800:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata16bits++;
 1489              		.loc 1 800 11 is_stmt 1 view .LVU409
 800:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata16bits++;
 1490              		.loc 1 800 52 is_stmt 0 view .LVU410
 1491 00fa 536A     		ldr	r3, [r2, #36]
 800:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata16bits++;
 1492              		.loc 1 800 26 view .LVU411
 1493 00fc 019A     		ldr	r2, [sp, #4]
 1494 00fe 1340     		ands	r3, r2
 800:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata16bits++;
 1495              		.loc 1 800 24 view .LVU412
 1496 0100 5246     		mov	r2, r10
 1497 0102 1380     		strh	r3, [r2]
 801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1498              		.loc 1 801 11 is_stmt 1 view .LVU413
 801:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1499              		.loc 1 801 22 is_stmt 0 view .LVU414
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 74


 1500 0104 0223     		movs	r3, #2
 1501 0106 9C46     		mov	ip, r3
 1502 0108 E244     		add	r10, r10, ip
 1503              	.LVL113:
 1504              	.L68:
 809:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         huart->RxXferCount--;
 1505              		.loc 1 809 9 is_stmt 1 view .LVU415
 1506 010a 3B88     		ldrh	r3, [r7]
 809:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         huart->RxXferCount--;
 1507              		.loc 1 809 16 is_stmt 0 view .LVU416
 1508 010c 0133     		adds	r3, r3, #1
 1509 010e 3B80     		strh	r3, [r7]
 810:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1510              		.loc 1 810 9 is_stmt 1 view .LVU417
 810:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1511              		.loc 1 810 14 is_stmt 0 view .LVU418
 1512 0110 5E22     		movs	r2, #94
 1513 0112 A35A     		ldrh	r3, [r4, r2]
 810:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1514              		.loc 1 810 27 view .LVU419
 1515 0114 013B     		subs	r3, r3, #1
 1516 0116 9BB2     		uxth	r3, r3
 1517 0118 A352     		strh	r3, [r4, r2]
 1518              	.L66:
 814:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1519              		.loc 1 814 7 is_stmt 1 view .LVU420
 814:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1520              		.loc 1 814 10 is_stmt 0 view .LVU421
 1521 011a 731C     		adds	r3, r6, #1
 1522 011c 1AD1     		bne	.L84
 1523              	.L64:
 776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1524              		.loc 1 776 31 is_stmt 1 view .LVU422
 776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1525              		.loc 1 776 17 is_stmt 0 view .LVU423
 1526 011e 5E23     		movs	r3, #94
 1527 0120 E25A     		ldrh	r2, [r4, r3]
 1528 0122 92B2     		uxth	r2, r2
 776:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1529              		.loc 1 776 31 view .LVU424
 1530 0124 002A     		cmp	r2, #0
 1531 0126 22D0     		beq	.L85
 779:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1532              		.loc 1 779 7 is_stmt 1 view .LVU425
 779:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1533              		.loc 1 779 11 is_stmt 0 view .LVU426
 1534 0128 2268     		ldr	r2, [r4]
 1535 012a D369     		ldr	r3, [r2, #28]
 779:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1536              		.loc 1 779 10 view .LVU427
 1537 012c DB06     		lsls	r3, r3, #27
 1538 012e 04D5     		bpl	.L65
 782:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1539              		.loc 1 782 9 is_stmt 1 view .LVU428
 1540 0130 1023     		movs	r3, #16
 1541 0132 1362     		str	r3, [r2, #32]
 786:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 75


 1542              		.loc 1 786 9 view .LVU429
 786:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 1543              		.loc 1 786 13 is_stmt 0 view .LVU430
 1544 0134 3B88     		ldrh	r3, [r7]
 786:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 1545              		.loc 1 786 12 view .LVU431
 1546 0136 002B     		cmp	r3, #0
 1547 0138 D8D1     		bne	.L86
 1548              	.L65:
 796:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1549              		.loc 1 796 7 is_stmt 1 view .LVU432
 796:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1550              		.loc 1 796 11 is_stmt 0 view .LVU433
 1551 013a 2268     		ldr	r2, [r4]
 1552 013c D369     		ldr	r3, [r2, #28]
 796:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1553              		.loc 1 796 10 view .LVU434
 1554 013e 9B06     		lsls	r3, r3, #26
 1555 0140 EBD5     		bpl	.L66
 798:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 1556              		.loc 1 798 9 is_stmt 1 view .LVU435
 798:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 1557              		.loc 1 798 12 is_stmt 0 view .LVU436
 1558 0142 002D     		cmp	r5, #0
 1559 0144 D9D0     		beq	.L87
 805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata8bits++;
 1560              		.loc 1 805 11 is_stmt 1 view .LVU437
 805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata8bits++;
 1561              		.loc 1 805 50 is_stmt 0 view .LVU438
 1562 0146 536A     		ldr	r3, [r2, #36]
 805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata8bits++;
 1563              		.loc 1 805 58 view .LVU439
 1564 0148 6A46     		mov	r2, sp
 1565 014a 1279     		ldrb	r2, [r2, #4]
 805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata8bits++;
 1566              		.loc 1 805 25 view .LVU440
 1567 014c 1340     		ands	r3, r2
 805:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****           pdata8bits++;
 1568              		.loc 1 805 23 view .LVU441
 1569 014e 2B70     		strb	r3, [r5]
 806:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1570              		.loc 1 806 11 is_stmt 1 view .LVU442
 806:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1571              		.loc 1 806 21 is_stmt 0 view .LVU443
 1572 0150 0135     		adds	r5, r5, #1
 1573              	.LVL114:
 806:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1574              		.loc 1 806 21 view .LVU444
 1575 0152 DAE7     		b	.L68
 1576              	.L84:
 816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 1577              		.loc 1 816 9 is_stmt 1 view .LVU445
 816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 1578              		.loc 1 816 15 is_stmt 0 view .LVU446
 1579 0154 FFF7FEFF 		bl	HAL_GetTick
 1580              	.LVL115:
 816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 76


 1581              		.loc 1 816 29 discriminator 1 view .LVU447
 1582 0158 4B46     		mov	r3, r9
 1583 015a C01A     		subs	r0, r0, r3
 816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 1584              		.loc 1 816 12 discriminator 1 view .LVU448
 1585 015c B042     		cmp	r0, r6
 1586 015e 01D8     		bhi	.L70
 1587              	.LVL116:
 816:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         {
 1588              		.loc 1 816 53 discriminator 1 view .LVU449
 1589 0160 002E     		cmp	r6, #0
 1590 0162 DCD1     		bne	.L64
 1591              	.L70:
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1592              		.loc 1 818 11 is_stmt 1 view .LVU450
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1593              		.loc 1 818 26 is_stmt 0 view .LVU451
 1594 0164 8C23     		movs	r3, #140
 1595              	.LVL117:
 818:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1596              		.loc 1 818 26 view .LVU452
 1597 0166 2022     		movs	r2, #32
 1598 0168 E250     		str	r2, [r4, r3]
 820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1599              		.loc 1 820 11 is_stmt 1 view .LVU453
 820:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         }
 1600              		.loc 1 820 18 is_stmt 0 view .LVU454
 1601 016a 0320     		movs	r0, #3
 1602 016c 0BE0     		b	.L54
 1603              	.L85:
 826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1604              		.loc 1 826 5 is_stmt 1 view .LVU455
 826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1605              		.loc 1 826 19 is_stmt 0 view .LVU456
 1606 016e 023B     		subs	r3, r3, #2
 1607 0170 E35A     		ldrh	r3, [r4, r3]
 826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1608              		.loc 1 826 39 view .LVU457
 1609 0172 5E32     		adds	r2, r2, #94
 1610 0174 A25A     		ldrh	r2, [r4, r2]
 826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1611              		.loc 1 826 32 view .LVU458
 1612 0176 9B1A     		subs	r3, r3, r2
 826:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 1613              		.loc 1 826 12 view .LVU459
 1614 0178 3B80     		strh	r3, [r7]
 828:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1615              		.loc 1 828 5 is_stmt 1 view .LVU460
 828:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1616              		.loc 1 828 20 is_stmt 0 view .LVU461
 1617 017a 8C23     		movs	r3, #140
 1618 017c 2022     		movs	r2, #32
 1619 017e E250     		str	r2, [r4, r3]
 830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 1620              		.loc 1 830 5 is_stmt 1 view .LVU462
 830:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 1621              		.loc 1 830 12 is_stmt 0 view .LVU463
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 77


 1622 0180 0020     		movs	r0, #0
 1623 0182 00E0     		b	.L54
 1624              	.LVL118:
 1625              	.L72:
 834:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 1626              		.loc 1 834 12 view .LVU464
 1627 0184 0220     		movs	r0, #2
 1628              	.LVL119:
 1629              	.L54:
 836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1630              		.loc 1 836 1 view .LVU465
 1631 0186 02B0     		add	sp, sp, #8
 1632              		@ sp needed
 1633              	.LVL120:
 1634              	.LVL121:
 1635              	.LVL122:
 836:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1636              		.loc 1 836 1 view .LVU466
 1637 0188 E0BC     		pop	{r5, r6, r7}
 1638 018a BA46     		mov	r10, r7
 1639 018c B146     		mov	r9, r6
 1640 018e A846     		mov	r8, r5
 1641 0190 F0BD     		pop	{r4, r5, r6, r7, pc}
 1642              	.LVL123:
 1643              	.L73:
 731:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1644              		.loc 1 731 15 view .LVU467
 1645 0192 0120     		movs	r0, #1
 1646              	.LVL124:
 731:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1647              		.loc 1 731 15 view .LVU468
 1648 0194 F7E7     		b	.L54
 1649              	.LVL125:
 1650              	.L74:
 731:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1651              		.loc 1 731 15 view .LVU469
 1652 0196 0120     		movs	r0, #1
 1653              	.LVL126:
 731:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1654              		.loc 1 731 15 view .LVU470
 1655 0198 F5E7     		b	.L54
 1656              	.LVL127:
 1657              	.L75:
 741:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1658              		.loc 1 741 17 view .LVU471
 1659 019a 0120     		movs	r0, #1
 1660              	.LVL128:
 741:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1661              		.loc 1 741 17 view .LVU472
 1662 019c F3E7     		b	.L54
 1663              	.L89:
 1664 019e C046     		.align	2
 1665              	.L88:
 1666 01a0 FF010000 		.word	511
 1667              		.cfi_endproc
 1668              	.LFE228:
 1670              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 78


 1671              		.align	1
 1672              		.global	HAL_UARTEx_ReceiveToIdle_IT
 1673              		.syntax unified
 1674              		.code	16
 1675              		.thumb_func
 1677              	HAL_UARTEx_ReceiveToIdle_IT:
 1678              	.LVL129:
 1679              	.LFB229:
 858:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1680              		.loc 1 858 1 is_stmt 1 view -0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 858:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1684              		.loc 1 858 1 is_stmt 0 view .LVU474
 1685 0000 10B5     		push	{r4, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 4, -8
 1688              		.cfi_offset 14, -4
 1689 0002 0400     		movs	r4, r0
 859:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1690              		.loc 1 859 3 is_stmt 1 view .LVU475
 1691              	.LVL130:
 862:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1692              		.loc 1 862 3 view .LVU476
 862:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1693              		.loc 1 862 12 is_stmt 0 view .LVU477
 1694 0004 8C23     		movs	r3, #140
 1695 0006 C358     		ldr	r3, [r0, r3]
 862:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1696              		.loc 1 862 6 view .LVU478
 1697 0008 202B     		cmp	r3, #32
 1698 000a 29D1     		bne	.L94
 864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1699              		.loc 1 864 5 is_stmt 1 view .LVU479
 864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1700              		.loc 1 864 8 is_stmt 0 view .LVU480
 1701 000c 0029     		cmp	r1, #0
 1702 000e 29D0     		beq	.L95
 864:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1703              		.loc 1 864 25 discriminator 1 view .LVU481
 1704 0010 002A     		cmp	r2, #0
 1705 0012 29D0     		beq	.L96
 872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1706              		.loc 1 872 5 is_stmt 1 view .LVU482
 872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1707              		.loc 1 872 21 is_stmt 0 view .LVU483
 1708 0014 8068     		ldr	r0, [r0, #8]
 1709              	.LVL131:
 872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1710              		.loc 1 872 8 view .LVU484
 1711 0016 8023     		movs	r3, #128
 1712 0018 5B01     		lsls	r3, r3, #5
 1713 001a 9842     		cmp	r0, r3
 1714 001c 04D1     		bne	.L92
 872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1715              		.loc 1 872 71 discriminator 1 view .LVU485
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 79


 1716 001e 2369     		ldr	r3, [r4, #16]
 872:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1717              		.loc 1 872 56 discriminator 1 view .LVU486
 1718 0020 002B     		cmp	r3, #0
 1719 0022 01D1     		bne	.L92
 874:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1720              		.loc 1 874 7 is_stmt 1 view .LVU487
 874:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1721              		.loc 1 874 10 is_stmt 0 view .LVU488
 1722 0024 CB07     		lsls	r3, r1, #31
 1723 0026 21D4     		bmi	.L97
 1724              	.L92:
 881:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 1725              		.loc 1 881 5 is_stmt 1 view .LVU489
 881:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 1726              		.loc 1 881 26 is_stmt 0 view .LVU490
 1727 0028 0123     		movs	r3, #1
 1728 002a E366     		str	r3, [r4, #108]
 882:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1729              		.loc 1 882 5 is_stmt 1 view .LVU491
 882:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1730              		.loc 1 882 24 is_stmt 0 view .LVU492
 1731 002c 0023     		movs	r3, #0
 1732 002e 2367     		str	r3, [r4, #112]
 884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1733              		.loc 1 884 5 is_stmt 1 view .LVU493
 884:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1734              		.loc 1 884 11 is_stmt 0 view .LVU494
 1735 0030 2000     		movs	r0, r4
 1736 0032 FFF7FEFF 		bl	UART_Start_Receive_IT
 1737              	.LVL132:
 886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1738              		.loc 1 886 5 is_stmt 1 view .LVU495
 886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1739              		.loc 1 886 14 is_stmt 0 view .LVU496
 1740 0036 E36E     		ldr	r3, [r4, #108]
 886:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1741              		.loc 1 886 8 view .LVU497
 1742 0038 012B     		cmp	r3, #1
 1743 003a 01D0     		beq	.L99
 897:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1744              		.loc 1 897 14 view .LVU498
 1745 003c 0120     		movs	r0, #1
 1746              	.LVL133:
 900:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 1747              		.loc 1 900 5 is_stmt 1 view .LVU499
 900:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 1748              		.loc 1 900 12 is_stmt 0 view .LVU500
 1749 003e 10E0     		b	.L91
 1750              	.LVL134:
 1751              	.L99:
 888:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 1752              		.loc 1 888 7 is_stmt 1 view .LVU501
 1753 0040 2368     		ldr	r3, [r4]
 1754 0042 1021     		movs	r1, #16
 1755 0044 1962     		str	r1, [r3, #32]
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 80


 1756              		.loc 1 889 7 view .LVU502
 1757              	.LBB44:
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1758              		.loc 1 889 7 view .LVU503
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1759              		.loc 1 889 7 view .LVU504
 1760              	.LBB45:
 1761              	.LBI45:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1762              		.loc 2 1204 31 view .LVU505
 1763              	.LBB46:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1764              		.loc 2 1206 3 view .LVU506
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1765              		.loc 2 1208 3 view .LVU507
 1766              		.syntax divided
 1767              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1768 0046 EFF31080 		MRS r0, primask
 1769              	@ 0 "" 2
 1770              	.LVL135:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1771              		.loc 2 1209 3 view .LVU508
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1772              		.loc 2 1209 3 is_stmt 0 view .LVU509
 1773              		.thumb
 1774              		.syntax unified
 1775              	.LBE46:
 1776              	.LBE45:
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1777              		.loc 1 889 7 is_stmt 1 discriminator 1 view .LVU510
 1778              	.LBB47:
 1779              	.LBI47:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1780              		.loc 2 1234 27 view .LVU511
 1781              	.LBB48:
 1782              		.loc 2 1236 3 view .LVU512
 1783 004a 0123     		movs	r3, #1
 1784              		.syntax divided
 1785              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1786 004c 83F31088 		MSR primask, r3
 1787              	@ 0 "" 2
 1788              	.LVL136:
 1789              		.loc 2 1236 3 is_stmt 0 view .LVU513
 1790              		.thumb
 1791              		.syntax unified
 1792              	.LBE48:
 1793              	.LBE47:
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1794              		.loc 1 889 7 is_stmt 1 discriminator 2 view .LVU514
 1795 0050 2268     		ldr	r2, [r4]
 1796 0052 1368     		ldr	r3, [r2]
 1797 0054 0B43     		orrs	r3, r1
 1798 0056 1360     		str	r3, [r2]
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1799              		.loc 1 889 7 discriminator 2 view .LVU515
 1800              	.LVL137:
 1801              	.LBB49:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 81


 1802              	.LBI49:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1803              		.loc 2 1234 27 view .LVU516
 1804              	.LBB50:
 1805              		.loc 2 1236 3 view .LVU517
 1806              		.syntax divided
 1807              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1808 0058 80F31088 		MSR primask, r0
 1809              	@ 0 "" 2
 1810              	.LVL138:
 1811              		.loc 2 1236 3 is_stmt 0 view .LVU518
 1812              		.thumb
 1813              		.syntax unified
 1814              	.LBE50:
 1815              	.LBE49:
 1816              	.LBE44:
 889:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1817              		.loc 1 889 7 is_stmt 1 discriminator 3 view .LVU519
 859:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1818              		.loc 1 859 21 is_stmt 0 view .LVU520
 1819 005c 0020     		movs	r0, #0
 1820              	.LVL139:
 1821              	.LBB53:
 1822              	.LBB52:
 1823              	.LBB51:
1237:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1824              		.loc 2 1237 1 view .LVU521
 1825 005e 00E0     		b	.L91
 1826              	.LVL140:
 1827              	.L94:
 1828              		.loc 2 1237 1 view .LVU522
 1829              	.LBE51:
 1830              	.LBE52:
 1831              	.LBE53:
 904:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 1832              		.loc 1 904 12 view .LVU523
 1833 0060 0220     		movs	r0, #2
 1834              	.LVL141:
 1835              	.L91:
 906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1836              		.loc 1 906 1 view .LVU524
 1837              		@ sp needed
 1838              	.LVL142:
 906:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1839              		.loc 1 906 1 view .LVU525
 1840 0062 10BD     		pop	{r4, pc}
 1841              	.LVL143:
 1842              	.L95:
 866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1843              		.loc 1 866 14 view .LVU526
 1844 0064 0120     		movs	r0, #1
 1845              	.LVL144:
 866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1846              		.loc 1 866 14 view .LVU527
 1847 0066 FCE7     		b	.L91
 1848              	.LVL145:
 1849              	.L96:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 82


 866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1850              		.loc 1 866 14 view .LVU528
 1851 0068 0120     		movs	r0, #1
 1852              	.LVL146:
 866:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 1853              		.loc 1 866 14 view .LVU529
 1854 006a FAE7     		b	.L91
 1855              	.L97:
 876:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1856              		.loc 1 876 17 view .LVU530
 1857 006c 0120     		movs	r0, #1
 1858 006e F8E7     		b	.L91
 1859              		.cfi_endproc
 1860              	.LFE229:
 1862              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 1863              		.align	1
 1864              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 1865              		.syntax unified
 1866              		.code	16
 1867              		.thumb_func
 1869              	HAL_UARTEx_ReceiveToIdle_DMA:
 1870              	.LVL147:
 1871              	.LFB230:
 932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1872              		.loc 1 932 1 is_stmt 1 view -0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 932:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   HAL_StatusTypeDef status;
 1876              		.loc 1 932 1 is_stmt 0 view .LVU532
 1877 0000 10B5     		push	{r4, lr}
 1878              		.cfi_def_cfa_offset 8
 1879              		.cfi_offset 4, -8
 1880              		.cfi_offset 14, -4
 1881 0002 0400     		movs	r4, r0
 933:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1882              		.loc 1 933 3 is_stmt 1 view .LVU533
 936:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1883              		.loc 1 936 3 view .LVU534
 936:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1884              		.loc 1 936 12 is_stmt 0 view .LVU535
 1885 0004 8C23     		movs	r3, #140
 1886 0006 C358     		ldr	r3, [r0, r3]
 936:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   {
 1887              		.loc 1 936 6 view .LVU536
 1888 0008 202B     		cmp	r3, #32
 1889 000a 2AD1     		bne	.L104
 938:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1890              		.loc 1 938 5 is_stmt 1 view .LVU537
 938:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1891              		.loc 1 938 8 is_stmt 0 view .LVU538
 1892 000c 0029     		cmp	r1, #0
 1893 000e 2AD0     		beq	.L105
 938:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1894              		.loc 1 938 25 discriminator 1 view .LVU539
 1895 0010 002A     		cmp	r2, #0
 1896 0012 2AD0     		beq	.L106
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 83


 946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1897              		.loc 1 946 5 is_stmt 1 view .LVU540
 946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1898              		.loc 1 946 21 is_stmt 0 view .LVU541
 1899 0014 8068     		ldr	r0, [r0, #8]
 1900              	.LVL148:
 946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1901              		.loc 1 946 8 view .LVU542
 1902 0016 8023     		movs	r3, #128
 1903 0018 5B01     		lsls	r3, r3, #5
 1904 001a 9842     		cmp	r0, r3
 1905 001c 04D1     		bne	.L102
 946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1906              		.loc 1 946 71 discriminator 1 view .LVU543
 1907 001e 2369     		ldr	r3, [r4, #16]
 946:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1908              		.loc 1 946 56 discriminator 1 view .LVU544
 1909 0020 002B     		cmp	r3, #0
 1910 0022 01D1     		bne	.L102
 948:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1911              		.loc 1 948 7 is_stmt 1 view .LVU545
 948:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1912              		.loc 1 948 10 is_stmt 0 view .LVU546
 1913 0024 CB07     		lsls	r3, r1, #31
 1914 0026 22D4     		bmi	.L107
 1915              	.L102:
 955:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 1916              		.loc 1 955 5 is_stmt 1 view .LVU547
 955:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 1917              		.loc 1 955 26 is_stmt 0 view .LVU548
 1918 0028 0123     		movs	r3, #1
 1919 002a E366     		str	r3, [r4, #108]
 956:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1920              		.loc 1 956 5 is_stmt 1 view .LVU549
 956:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1921              		.loc 1 956 24 is_stmt 0 view .LVU550
 1922 002c 0023     		movs	r3, #0
 1923 002e 2367     		str	r3, [r4, #112]
 958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1924              		.loc 1 958 5 is_stmt 1 view .LVU551
 958:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 1925              		.loc 1 958 15 is_stmt 0 view .LVU552
 1926 0030 2000     		movs	r0, r4
 1927 0032 FFF7FEFF 		bl	UART_Start_Receive_DMA
 1928              	.LVL149:
 961:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1929              		.loc 1 961 5 is_stmt 1 view .LVU553
 961:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     {
 1930              		.loc 1 961 8 is_stmt 0 view .LVU554
 1931 0036 0028     		cmp	r0, #0
 1932 0038 14D1     		bne	.L101
 963:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1933              		.loc 1 963 7 is_stmt 1 view .LVU555
 963:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
 1934              		.loc 1 963 16 is_stmt 0 view .LVU556
 1935 003a E36E     		ldr	r3, [r4, #108]
 963:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 84


 1936              		.loc 1 963 10 view .LVU557
 1937 003c 012B     		cmp	r3, #1
 1938 003e 01D0     		beq	.L109
 974:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1939              		.loc 1 974 16 view .LVU558
 1940 0040 0120     		movs	r0, #1
 1941              	.LVL150:
 978:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 1942              		.loc 1 978 5 is_stmt 1 view .LVU559
 978:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 1943              		.loc 1 978 12 is_stmt 0 view .LVU560
 1944 0042 0FE0     		b	.L101
 1945              	.LVL151:
 1946              	.L109:
 965:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 1947              		.loc 1 965 9 is_stmt 1 view .LVU561
 1948 0044 2368     		ldr	r3, [r4]
 1949 0046 1021     		movs	r1, #16
 1950 0048 1962     		str	r1, [r3, #32]
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1951              		.loc 1 966 9 view .LVU562
 1952              	.LBB54:
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1953              		.loc 1 966 9 view .LVU563
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1954              		.loc 1 966 9 view .LVU564
 1955              	.LBB55:
 1956              	.LBI55:
1204:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1957              		.loc 2 1204 31 view .LVU565
 1958              	.LBB56:
1206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1959              		.loc 2 1206 3 view .LVU566
1208:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1960              		.loc 2 1208 3 view .LVU567
 1961              		.syntax divided
 1962              	@ 1208 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1963 004a EFF3108C 		MRS ip, primask
 1964              	@ 0 "" 2
 1965              	.LVL152:
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1966              		.loc 2 1209 3 view .LVU568
1209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1967              		.loc 2 1209 3 is_stmt 0 view .LVU569
 1968              		.thumb
 1969              		.syntax unified
 1970              	.LBE56:
 1971              	.LBE55:
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1972              		.loc 1 966 9 is_stmt 1 discriminator 1 view .LVU570
 1973              	.LBB57:
 1974              	.LBI57:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1975              		.loc 2 1234 27 view .LVU571
 1976              	.LBB58:
1236:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1977              		.loc 2 1236 3 view .LVU572
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 85


 1978 004e 0123     		movs	r3, #1
 1979              		.syntax divided
 1980              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1981 0050 83F31088 		MSR primask, r3
 1982              	@ 0 "" 2
 1983              	.LVL153:
1236:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1984              		.loc 2 1236 3 is_stmt 0 view .LVU573
 1985              		.thumb
 1986              		.syntax unified
 1987              	.LBE58:
 1988              	.LBE57:
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1989              		.loc 1 966 9 is_stmt 1 discriminator 2 view .LVU574
 1990 0054 2268     		ldr	r2, [r4]
 1991 0056 1368     		ldr	r3, [r2]
 1992 0058 0B43     		orrs	r3, r1
 1993 005a 1360     		str	r3, [r2]
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 1994              		.loc 1 966 9 discriminator 2 view .LVU575
 1995              	.LVL154:
 1996              	.LBB59:
 1997              	.LBI59:
1234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1998              		.loc 2 1234 27 view .LVU576
 1999              	.LBB60:
1236:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2000              		.loc 2 1236 3 view .LVU577
 2001              		.syntax divided
 2002              	@ 1236 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2003 005c 8CF31088 		MSR primask, ip
 2004              	@ 0 "" 2
 2005              	.LVL155:
1236:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2006              		.loc 2 1236 3 is_stmt 0 view .LVU578
 2007              		.thumb
 2008              		.syntax unified
 2009              	.LBE60:
 2010              	.LBE59:
 2011              	.LBE54:
 966:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 2012              		.loc 1 966 9 is_stmt 1 discriminator 3 view .LVU579
 2013              	.LBB63:
 2014              	.LBB62:
 2015              	.LBB61:
 2016              		.loc 2 1237 1 is_stmt 0 view .LVU580
 2017 0060 00E0     		b	.L101
 2018              	.LVL156:
 2019              	.L104:
 2020              		.loc 2 1237 1 view .LVU581
 2021              	.LBE61:
 2022              	.LBE62:
 2023              	.LBE63:
 982:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   }
 2024              		.loc 1 982 12 view .LVU582
 2025 0062 0220     		movs	r0, #2
 2026              	.LVL157:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 86


 2027              	.L101:
 984:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #endif /* HAL_DMA_MODULE_ENABLED */
 2028              		.loc 1 984 1 view .LVU583
 2029              		@ sp needed
 2030              	.LVL158:
 984:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** #endif /* HAL_DMA_MODULE_ENABLED */
 2031              		.loc 1 984 1 view .LVU584
 2032 0064 10BD     		pop	{r4, pc}
 2033              	.LVL159:
 2034              	.L105:
 940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 2035              		.loc 1 940 14 view .LVU585
 2036 0066 0120     		movs	r0, #1
 2037              	.LVL160:
 940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 2038              		.loc 1 940 14 view .LVU586
 2039 0068 FCE7     		b	.L101
 2040              	.LVL161:
 2041              	.L106:
 940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 2042              		.loc 1 940 14 view .LVU587
 2043 006a 0120     		movs	r0, #1
 2044              	.LVL162:
 940:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****     }
 2045              		.loc 1 940 14 view .LVU588
 2046 006c FAE7     		b	.L101
 2047              	.L107:
 950:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****       }
 2048              		.loc 1 950 17 view .LVU589
 2049 006e 0120     		movs	r0, #1
 2050 0070 F8E7     		b	.L101
 2051              		.cfi_endproc
 2052              	.LFE230:
 2054              		.section	.text.HAL_UARTEx_GetRxEventType,"ax",%progbits
 2055              		.align	1
 2056              		.global	HAL_UARTEx_GetRxEventType
 2057              		.syntax unified
 2058              		.code	16
 2059              		.thumb_func
 2061              	HAL_UARTEx_GetRxEventType:
 2062              	.LVL163:
 2063              	.LFB231:
1012:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c ****   /* Return Rx Event type value, as stored in UART handle */
 2064              		.loc 1 1012 1 is_stmt 1 view -0
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 0
 2067              		@ frame_needed = 0, uses_anonymous_args = 0
 2068              		@ link register save eliminated.
1014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 2069              		.loc 1 1014 3 view .LVU591
1014:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** }
 2070              		.loc 1 1014 16 is_stmt 0 view .LVU592
 2071 0000 006F     		ldr	r0, [r0, #112]
 2072              	.LVL164:
1015:Drivers/STM32C0xx_HAL_Driver/Src/stm32c0xx_hal_uart_ex.c **** 
 2073              		.loc 1 1015 1 view .LVU593
 2074              		@ sp needed
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 87


 2075 0002 7047     		bx	lr
 2076              		.cfi_endproc
 2077              	.LFE231:
 2079              		.section	.rodata.denominator.0,"a"
 2080              		.align	2
 2083              	denominator.0:
 2084 0000 08040204 		.ascii	"\010\004\002\004\010\001\001\001"
 2084      08010101 
 2085              		.section	.rodata.numerator.1,"a"
 2086              		.align	2
 2089              	numerator.1:
 2090 0000 01010103 		.ascii	"\001\001\001\003\007\001\000\000"
 2090      07010000 
 2091              		.text
 2092              	.Letext0:
 2093              		.file 3 "C:/Users/kroko/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 2094              		.file 4 "C:/Users/kroko/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 2095              		.file 5 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c031xx.h"
 2096              		.file 6 "Drivers/CMSIS/Device/ST/STM32C0xx/Include/stm32c0xx.h"
 2097              		.file 7 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_def.h"
 2098              		.file 8 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_dma.h"
 2099              		.file 9 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_uart.h"
 2100              		.file 10 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal_uart_ex.h"
 2101              		.file 11 "Drivers/STM32C0xx_HAL_Driver/Inc/stm32c0xx_hal.h"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 88


DEFINED SYMBOLS
                            *ABS*:00000000 stm32c0xx_hal_uart_ex.c
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:19     .text.UARTEx_Wakeup_AddressConfig:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:24     .text.UARTEx_Wakeup_AddressConfig:00000000 UARTEx_Wakeup_AddressConfig
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:66     .text.UARTEx_SetNbDataToProcess:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:71     .text.UARTEx_SetNbDataToProcess:00000000 UARTEx_SetNbDataToProcess
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:172    .text.UARTEx_SetNbDataToProcess:00000048 $d
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:2089   .rodata.numerator.1:00000000 numerator.1
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:2083   .rodata.denominator.0:00000000 denominator.0
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:178    .text.HAL_RS485Ex_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:184    .text.HAL_RS485Ex_Init:00000000 HAL_RS485Ex_Init
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:330    .text.HAL_RS485Ex_Init:0000008c $d
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:336    .text.HAL_UARTEx_WakeupCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:342    .text.HAL_UARTEx_WakeupCallback:00000000 HAL_UARTEx_WakeupCallback
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:358    .text.HAL_UARTEx_RxFifoFullCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:364    .text.HAL_UARTEx_RxFifoFullCallback:00000000 HAL_UARTEx_RxFifoFullCallback
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:380    .text.HAL_UARTEx_TxFifoEmptyCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:386    .text.HAL_UARTEx_TxFifoEmptyCallback:00000000 HAL_UARTEx_TxFifoEmptyCallback
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:402    .text.HAL_MultiProcessorEx_AddressLength_Set:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:408    .text.HAL_MultiProcessorEx_AddressLength_Set:00000000 HAL_MultiProcessorEx_AddressLength_Set
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:474    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:480    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:00000000 HAL_UARTEx_StopModeWakeUpSourceConfig
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:610    .text.HAL_UARTEx_StopModeWakeUpSourceConfig:00000080 $d
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:616    .text.HAL_UARTEx_EnableStopMode:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:622    .text.HAL_UARTEx_EnableStopMode:00000000 HAL_UARTEx_EnableStopMode
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:732    .text.HAL_UARTEx_DisableStopMode:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:738    .text.HAL_UARTEx_DisableStopMode:00000000 HAL_UARTEx_DisableStopMode
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:847    .text.HAL_UARTEx_EnableFifoMode:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:853    .text.HAL_UARTEx_EnableFifoMode:00000000 HAL_UARTEx_EnableFifoMode
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:943    .text.HAL_UARTEx_DisableFifoMode:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:949    .text.HAL_UARTEx_DisableFifoMode:00000000 HAL_UARTEx_DisableFifoMode
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1031   .text.HAL_UARTEx_DisableFifoMode:0000003c $d
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1036   .text.HAL_UARTEx_SetTxFifoThreshold:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1042   .text.HAL_UARTEx_SetTxFifoThreshold:00000000 HAL_UARTEx_SetTxFifoThreshold
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1137   .text.HAL_UARTEx_SetRxFifoThreshold:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1143   .text.HAL_UARTEx_SetRxFifoThreshold:00000000 HAL_UARTEx_SetRxFifoThreshold
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1237   .text.HAL_UARTEx_SetRxFifoThreshold:0000004c $d
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1242   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1248   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1666   .text.HAL_UARTEx_ReceiveToIdle:000001a0 $d
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1671   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1677   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1863   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:1869   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:2055   .text.HAL_UARTEx_GetRxEventType:00000000 $t
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:2061   .text.HAL_UARTEx_GetRxEventType:00000000 HAL_UARTEx_GetRxEventType
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:2080   .rodata.denominator.0:00000000 $d
C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s:2086   .rodata.numerator.1:00000000 $d

UNDEFINED SYMBOLS
__aeabi_idiv
UART_SetConfig
UART_CheckIdleState
HAL_UART_MspInit
UART_AdvFeatureConfig
HAL_GetTick
UART_WaitOnFlagUntilTimeout
ARM GAS  C:\Users\kroko\AppData\Local\Temp\cc4JWvNf.s 			page 89


UART_Start_Receive_IT
UART_Start_Receive_DMA
