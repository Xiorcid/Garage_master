ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB142:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdlib.h>
  26:Core/Src/main.c **** #include <dispcolor.h>
  27:Core/Src/main.c **** #include <gpio.h>
  28:Core/Src/main.c **** #include "info_disp.h"
  29:Core/Src/main.c **** #include "buttons.h"
  30:Core/Src/main.c **** #include "enc.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** #define STATE_INIT    0
  41:Core/Src/main.c **** #define STATE_DISPLAY 1
  42:Core/Src/main.c **** #define STATE_800INIT 2
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** #define SCROLL_MODE_AUTO  0
  45:Core/Src/main.c **** #define SCROLL_MODE_HALT  1
  46:Core/Src/main.c **** #define SCROLL_MODE_CLICK 2
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** #define TRANSMIT_MODE_GET 0
  49:Core/Src/main.c **** #define TRANSMIT_MODE_SET 1
  50:Core/Src/main.c **** /* USER CODE END PD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  61:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  62:Core/Src/main.c **** // DMA_HandleTypeDef hdma_spi1_tx;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** UART_HandleTypeDef huart5;
  65:Core/Src/main.c **** UART_HandleTypeDef huart6;
  66:Core/Src/main.c **** DMA_HandleTypeDef hdma_uart5_rx;
  67:Core/Src/main.c **** DMA_HandleTypeDef hdma_uart5_tx;
  68:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart6_rx;
  69:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart6_tx;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE BEGIN PV */
  72:Core/Src/main.c **** #define DEV0_UART &huart5
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** #define DEV_STATE_IN    1
  75:Core/Src/main.c **** #define DEV_STATE_UNIN  0
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** #define SIM800_UART &huart6
  79:Core/Src/main.c **** /* USER CODE END PV */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  82:Core/Src/main.c **** void SystemClock_Config(void);
  83:Core/Src/main.c **** static void MX_GPIO_Init(void);
  84:Core/Src/main.c **** static void MX_DMA_Init(void);
  85:Core/Src/main.c **** static void MX_SPI1_Init(void);
  86:Core/Src/main.c **** static void MX_UART5_Init(void);
  87:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  88:Core/Src/main.c **** static void MX_SPI2_Init(void);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 3


  89:Core/Src/main.c **** static void MX_RTC_Init(void);
  90:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* USER CODE END PFP */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  95:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  96:Core/Src/main.c **** double val = 10;
  97:Core/Src/main.c **** uint8_t tx_buff[]={84,66,67,68,69,70,71,72,73,74};
  98:Core/Src/main.c **** uint8_t palette = TEMP_PALETTE;
  99:Core/Src/main.c **** uint8_t device_type = TYPE_SET_TEL;
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** uint8_t state = STATE_INIT;
 102:Core/Src/main.c **** uint8_t dev_num = 0;
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** bool trySIMInit = 0;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** uint8_t screen_scroll_mode = SCROLL_MODE_AUTO;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** Button button = {ENC_KEY_GPIO_Port, ENC_KEY_Pin, TYPE_HIGH_PULL};
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** Encoder enc = {ENC_S1_GPIO_Port, ENC_S1_Pin, ENC_S2_GPIO_Port, ENC_S2_Pin};
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** // Device device_0 = {&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY};
 113:Core/Src/main.c **** // Device device_2 = {&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY};
 114:Core/Src/main.c **** // Device device_3 = {&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY};
 115:Core/Src/main.c **** // Device device_4 = {&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY};
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** Device deviceList[] = {{&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY}};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** SIM sim = {SIM800_UART};
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** uint8_t rx_buff[10];
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** #define DEV_COUNT sizeof(deviceList)/sizeof(deviceList[0])
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** bool transmitMode = TRANSMIT_MODE_GET;
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** bool isSDInitialised = false;
 128:Core/Src/main.c **** /* USER CODE END 0 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /**
 131:Core/Src/main.c ****   * @brief  The application entry point.
 132:Core/Src/main.c ****   * @retval int
 133:Core/Src/main.c ****   */
 134:Core/Src/main.c **** int main(void)
 135:Core/Src/main.c **** {
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE END 1 */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 144:Core/Src/main.c ****   HAL_Init();
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 4


 146:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 147:Core/Src/main.c **** 	// gpio_SetGPIOmode_Out(GPIOB, GPIO_PIN_14);
 148:Core/Src/main.c ****   gpio_SetGPIOmode_Out(GPIOD, GPIO_PIN_2);
 149:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);
 150:Core/Src/main.c **** 	HAL_Delay(100);
 151:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 155:Core/Src/main.c **** 	// HAL_Delay(1000);
 156:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 157:Core/Src/main.c ****   /* USER CODE END Init */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* Configure the system clock */
 160:Core/Src/main.c ****   SystemClock_Config();
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END SysInit */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* Initialize all configured peripherals */
 167:Core/Src/main.c ****   MX_GPIO_Init();
 168:Core/Src/main.c ****   MX_DMA_Init();
 169:Core/Src/main.c ****   MX_SPI1_Init();
 170:Core/Src/main.c ****   MX_UART5_Init();
 171:Core/Src/main.c ****   MX_USART6_UART_Init();
 172:Core/Src/main.c ****   MX_SPI2_Init();
 173:Core/Src/main.c ****   MX_FATFS_Init();
 174:Core/Src/main.c ****   MX_RTC_Init();
 175:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 176:Core/Src/main.c ****   // init(&button);
 177:Core/Src/main.c ****   // initEnc(&enc);
 178:Core/Src/main.c ****   
 179:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 180:Core/Src/main.c ****   HAL_Delay(200);
 181:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** 	dispcolor_Init(240, 240);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** 	uint32_t dev_init_timeout = HAL_GetTick();
 186:Core/Src/main.c ****   uint32_t screen_disp_time = HAL_GetTick();
 187:Core/Src/main.c ****   uint32_t hold_timeout = HAL_GetTick();
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   uint32_t simtmr = HAL_GetTick();
 190:Core/Src/main.c ****   uint32_t txtmr = HAL_GetTick();
 191:Core/Src/main.c ****   
 192:Core/Src/main.c ****   uint8_t old_dev_num = 0;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* RTC */
 195:Core/Src/main.c ****   // GET RTC DATETIME
 196:Core/Src/main.c ****   RTC_DateTypeDef gDate;
 197:Core/Src/main.c ****   RTC_TimeTypeDef gTime;
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* Get the RTC current Time */
 200:Core/Src/main.c ****   HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 201:Core/Src/main.c ****   /* Get the RTC current Date */
 202:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 5


 203:Core/Src/main.c ****   
 204:Core/Src/main.c ****   if(gDate.Year == 0){
 205:Core/Src/main.c ****     Show_Message("SET UP RTC!", 1000);
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* SD CARD */
 211:Core/Src/main.c ****   FATFS FatFs;
 212:Core/Src/main.c ****   FRESULT FR_Status;
 213:Core/Src/main.c ****   FIL Fil;
 214:Core/Src/main.c ****   UINT bytesWrote;
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   FR_Status = f_mount(&FatFs, "", 1);
 217:Core/Src/main.c ****   if (FR_Status == FR_OK){
 218:Core/Src/main.c ****     isSDInitialised = true;
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   deviceList[0].tx_buff[0] = 84;
 223:Core/Src/main.c ****   /* USER CODE END 2 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* Infinite loop */
 226:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 227:Core/Src/main.c ****   while (1)
 228:Core/Src/main.c ****   { // NEW CODE START
 229:Core/Src/main.c ****     if(state == STATE_INIT){
 230:Core/Src/main.c ****       Display_Init(dev_num, DEV_COUNT);
 231:Core/Src/main.c ****       HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 232:Core/Src/main.c ****       HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 233:Core/Src/main.c ****     }
 234:Core/Src/main.c ****     // else if (state == STATE_800INIT){
 235:Core/Src/main.c ****     //   trySIMInit = 1;
 236:Core/Src/main.c ****     //   state = STATE_DISPLAY;
 237:Core/Src/main.c ****     //   //SIM_Init("TRY TO", "INIT SIM");
 238:Core/Src/main.c ****     //   HAL_UART_Transmit(sim.uart, "AT\r\n", 5, 1000); //UART8 NO DMA TX
 239:Core/Src/main.c ****     //   HAL_UART_Receive_DMA(sim.uart, rx_buff, 5);
 240:Core/Src/main.c ****     // }
 241:Core/Src/main.c ****     else{
 242:Core/Src/main.c ****       Dispaly_Data(&deviceList[dev_num]);
 243:Core/Src/main.c ****       if(!transmitMode){
 244:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 245:Core/Src/main.c ****       }else{
 246:Core/Src/main.c ****         char setValueTx[10];
 247:Core/Src/main.c ****         sprintf(setValueTx, "%d", deviceList[dev_num].setValue);
 248:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, setValueTx, 10);
 249:Core/Src/main.c ****       }
 250:Core/Src/main.c ****     }
 251:Core/Src/main.c ****     // NEW CODE END
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****     // DEVICE INITIALIZATION START
 254:Core/Src/main.c ****     if (HAL_GetTick()-dev_init_timeout>1000 && state == STATE_INIT){
 255:Core/Src/main.c ****       if(dev_num == old_dev_num){
 256:Core/Src/main.c ****         dev_num++;
 257:Core/Src/main.c ****       }else{
 258:Core/Src/main.c ****         old_dev_num = dev_num;
 259:Core/Src/main.c ****       }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 6


 260:Core/Src/main.c ****       dev_init_timeout = HAL_GetTick();
 261:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 262:Core/Src/main.c ****     }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****     // SIM INIT START
 265:Core/Src/main.c ****     // if(state == STATE_800INIT && HAL_GetTick() - simtmr > 1000){
 266:Core/Src/main.c ****     //   trySIMInit = 0;
 267:Core/Src/main.c ****     //   sim.initState = 0;
 268:Core/Src/main.c ****     //   state = STATE_DISPLAY;
 269:Core/Src/main.c ****     //   Show_Message("SIM INIT FAIL", 1000);
 270:Core/Src/main.c ****     // }
 271:Core/Src/main.c ****     // if(sim.initState = 1 && state == STATE_800INIT){
 272:Core/Src/main.c ****     //   state = STATE_DISPLAY;
 273:Core/Src/main.c ****     // }
 274:Core/Src/main.c ****     // SIM INIT END
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****     if(dev_num == DEV_COUNT && state == STATE_INIT){
 277:Core/Src/main.c ****       // state = STATE_800INIT;
 278:Core/Src/main.c ****       state = STATE_DISPLAY;
 279:Core/Src/main.c ****       simtmr = HAL_GetTick();
 280:Core/Src/main.c ****       dev_num = 0;
 281:Core/Src/main.c ****       
 282:Core/Src/main.c ****       // CREATE FILE "init_time_date.txt"
 283:Core/Src/main.c ****       char filename_buff[35];
 284:Core/Src/main.c ****       uint8_t buf_len;
 285:Core/Src/main.c ****       sprintf(filename_buff, "init_%02d-%02d-%02d_%02d-%02d-%2d.txt", gTime.Hours, gTime.Minutes, g
 286:Core/Src/main.c ****       FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 287:Core/Src/main.c ****       for (uint8_t i = 0; i < DEV_COUNT; i++){
 288:Core/Src/main.c ****         char init_file_buf[50];
 289:Core/Src/main.c ****         if(deviceList[i].initState == DEV_STATE_IN){
 290:Core/Src/main.c ****           buf_len = sprintf(init_file_buf, "DEV: %d\nMin/Max: %d/%d\nDev type: %d\n\n", i, deviceLi
 291:Core/Src/main.c ****         }else{
 292:Core/Src/main.c ****           buf_len = sprintf(init_file_buf, "DEV: empty\n\n");
 293:Core/Src/main.c ****         }
 294:Core/Src/main.c ****         FR_Status = f_write(&Fil, init_file_buf, buf_len, &bytesWrote);
 295:Core/Src/main.c ****       }
 296:Core/Src/main.c ****       f_close(&Fil);
 297:Core/Src/main.c ****       // SAVE CONFIG
 298:Core/Src/main.c ****     }
 299:Core/Src/main.c ****     // DEVICE INITIALIZATION END
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****     // AUTO SCREEN SCROLL START
 302:Core/Src/main.c ****     if (HAL_GetTick()-screen_disp_time>5000 && screen_scroll_mode == SCROLL_MODE_AUTO){
 303:Core/Src/main.c ****       if(state != STATE_INIT){
 304:Core/Src/main.c ****         do{
 305:Core/Src/main.c ****           if(dev_num < DEV_COUNT-1){
 306:Core/Src/main.c ****             dev_num++;
 307:Core/Src/main.c ****           }else{
 308:Core/Src/main.c ****             dev_num=0;
 309:Core/Src/main.c ****           }
 310:Core/Src/main.c ****         }while (!deviceList[dev_num].initState);  
 311:Core/Src/main.c ****       }
 312:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 313:Core/Src/main.c ****     }
 314:Core/Src/main.c ****     // AUTO SCREEN SCROLL END
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****     // GPIO READING START
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 7


 317:Core/Src/main.c ****     tick(&button);
 318:Core/Src/main.c ****     
 319:Core/Src/main.c ****     // GPIO READING END
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****     // SCROLL MODE CHANGE START
 322:Core/Src/main.c ****     if(isClicked(&button)){
 323:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 324:Core/Src/main.c ****       if(screen_scroll_mode == SCROLL_MODE_AUTO){
 325:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 326:Core/Src/main.c ****       }else{
 327:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_AUTO;
 328:Core/Src/main.c ****       }
 329:Core/Src/main.c ****     }
 330:Core/Src/main.c ****     // SCROLL MODE CHANGE END
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     // ENCODER START
 333:Core/Src/main.c ****     // TEST CODE START
 334:Core/Src/main.c ****     if (deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 335:Core/Src/main.c ****     // TEST CODE
 336:Core/Src/main.c ****       // MANUAL SCREEN SROLL START
 337:Core/Src/main.c ****       // if(isRight(&enc)){
 338:Core/Src/main.c ****       //   if(dev_num < DEV_COUNT){
 339:Core/Src/main.c ****       //     dev_num++;
 340:Core/Src/main.c ****       //   }else{
 341:Core/Src/main.c ****       //     dev_num = 0;
 342:Core/Src/main.c ****       //   }
 343:Core/Src/main.c ****       //   screen_disp_time = HAL_GetTick();
 344:Core/Src/main.c ****       // }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****       // if(isLeft(&enc)){
 347:Core/Src/main.c ****       //   if(dev_num > 0){
 348:Core/Src/main.c ****       //     dev_num--;
 349:Core/Src/main.c ****       //   }else{
 350:Core/Src/main.c ****       //     dev_num = DEV_COUNT;
 351:Core/Src/main.c ****       //   }
 352:Core/Src/main.c ****       //   screen_disp_time = HAL_GetTick();
 353:Core/Src/main.c ****       // }
 354:Core/Src/main.c ****       // MANUAL SCREEN SCROLL START
 355:Core/Src/main.c ****     }else{
 356:Core/Src/main.c ****       // VALUE EDIT START
 357:Core/Src/main.c ****       if(isRight(&enc)){
 358:Core/Src/main.c ****         if(deviceList[dev_num].setValue+5<deviceList[dev_num].maxValue){
 359:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 360:Core/Src/main.c ****         }
 361:Core/Src/main.c ****       }
 362:Core/Src/main.c ****       if(isLeft(&enc)){
 363:Core/Src/main.c ****         if(deviceList[dev_num].setValue-5>deviceList[dev_num].minValue){
 364:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 365:Core/Src/main.c ****         }
 366:Core/Src/main.c ****       }
 367:Core/Src/main.c ****       // VALUE EDIT END
 368:Core/Src/main.c ****     }
 369:Core/Src/main.c ****     // ENCODER END
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****     // EDIT VALUE START
 372:Core/Src/main.c ****     if(isHold(&button) && HAL_GetTick() - hold_timeout > 750){
 373:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 8


 374:Core/Src/main.c ****       hold_timeout = HAL_GetTick();
 375:Core/Src/main.c ****       if(deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 376:Core/Src/main.c ****         deviceList[dev_num].setValue = deviceList[dev_num].currentValue;
 377:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_EDIT;
 378:Core/Src/main.c ****       }else{
 379:Core/Src/main.c ****         transmitMode = TRANSMIT_MODE_SET;
 380:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_NORMAL;
 381:Core/Src/main.c ****       }
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****       if(screen_scroll_mode == SCROLL_MODE_AUTO){
 384:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 385:Core/Src/main.c ****       }else{
 386:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_AUTO;
 387:Core/Src/main.c ****       }
 388:Core/Src/main.c ****     }
 389:Core/Src/main.c ****     // EDIT VALUE END
 390:Core/Src/main.c ****     /* USER CODE END WHILE */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 393:Core/Src/main.c ****   }
 394:Core/Src/main.c ****   /* USER CODE END 3 */
 395:Core/Src/main.c **** }
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** /**
 398:Core/Src/main.c ****   * @brief System Clock Configuration
 399:Core/Src/main.c ****   * @retval None
 400:Core/Src/main.c ****   */
 401:Core/Src/main.c **** void SystemClock_Config(void)
 402:Core/Src/main.c **** {
 403:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 404:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 409:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 412:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 413:Core/Src/main.c ****   */
 414:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 415:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 416:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 417:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 418:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 419:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 420:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 421:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 422:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 423:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 424:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 425:Core/Src/main.c ****   {
 426:Core/Src/main.c ****     Error_Handler();
 427:Core/Src/main.c ****   }
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 430:Core/Src/main.c ****   */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 9


 431:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 432:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 433:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 434:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 435:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 436:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     Error_Handler();
 441:Core/Src/main.c ****   }
 442:Core/Src/main.c **** }
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** /**
 445:Core/Src/main.c ****   * @brief RTC Initialization Function
 446:Core/Src/main.c ****   * @param None
 447:Core/Src/main.c ****   * @retval None
 448:Core/Src/main.c ****   */
 449:Core/Src/main.c **** static void MX_RTC_Init(void)
 450:Core/Src/main.c **** {
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 457:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /** Initialize RTC Only
 464:Core/Src/main.c ****   */
 465:Core/Src/main.c ****   hrtc.Instance = RTC;
 466:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 467:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 468:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 469:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 470:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 471:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 472:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 473:Core/Src/main.c ****   {
 474:Core/Src/main.c ****     Error_Handler();
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 482:Core/Src/main.c ****   */
 483:Core/Src/main.c ****   // sTime.Hours = 0x16;
 484:Core/Src/main.c ****   // sTime.Minutes = 0x34;
 485:Core/Src/main.c ****   // sTime.Seconds = 0x45;
 486:Core/Src/main.c ****   // sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 487:Core/Src/main.c ****   // sTime.StoreOperation = RTC_STOREOPERATION_RESET;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 10


 488:Core/Src/main.c ****   // if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 489:Core/Src/main.c ****   // {
 490:Core/Src/main.c ****   //   Error_Handler();
 491:Core/Src/main.c ****   // }
 492:Core/Src/main.c ****   // sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 493:Core/Src/main.c ****   // sDate.Month = RTC_MONTH_OCTOBER;
 494:Core/Src/main.c ****   // sDate.Date = 0x14;
 495:Core/Src/main.c ****   // sDate.Year = 0x2024;
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   // if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 498:Core/Src/main.c ****   // {
 499:Core/Src/main.c ****   //   Error_Handler();
 500:Core/Src/main.c ****   // }
 501:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** }
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** /**
 508:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 509:Core/Src/main.c ****   * @param None
 510:Core/Src/main.c ****   * @retval None
 511:Core/Src/main.c ****   */
 512:Core/Src/main.c **** static void MX_SPI1_Init(void)
 513:Core/Src/main.c **** {
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 522:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 523:Core/Src/main.c ****   hspi1.Instance = SPI1;
 524:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 525:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 526:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 527:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 528:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 529:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 530:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 531:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 532:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 533:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 534:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 535:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 536:Core/Src/main.c ****   {
 537:Core/Src/main.c ****     Error_Handler();
 538:Core/Src/main.c ****   }
 539:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 542:Core/Src/main.c **** 
 543:Core/Src/main.c **** }
 544:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 11


 545:Core/Src/main.c **** /**
 546:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 547:Core/Src/main.c ****   * @param None
 548:Core/Src/main.c ****   * @retval None
 549:Core/Src/main.c ****   */
 550:Core/Src/main.c **** static void MX_SPI2_Init(void)
 551:Core/Src/main.c **** {
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 560:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 561:Core/Src/main.c ****   hspi2.Instance = SPI2;
 562:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 563:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 564:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 565:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 566:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 567:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 568:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 569:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 570:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 571:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 572:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 573:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 574:Core/Src/main.c ****   {
 575:Core/Src/main.c ****     Error_Handler();
 576:Core/Src/main.c ****   }
 577:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 578:Core/Src/main.c **** 
 579:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c **** }
 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** /**
 584:Core/Src/main.c ****   * @brief UART5 Initialization Function
 585:Core/Src/main.c ****   * @param None
 586:Core/Src/main.c ****   * @retval None
 587:Core/Src/main.c ****   */
 588:Core/Src/main.c **** static void MX_UART5_Init(void)
 589:Core/Src/main.c **** {
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 0 */
 592:Core/Src/main.c **** 
 593:Core/Src/main.c ****   /* USER CODE END UART5_Init 0 */
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 1 */
 596:Core/Src/main.c **** 
 597:Core/Src/main.c ****   /* USER CODE END UART5_Init 1 */
 598:Core/Src/main.c ****   huart5.Instance = UART5;
 599:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 600:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 601:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 12


 602:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 603:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 604:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 605:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 606:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 607:Core/Src/main.c ****   {
 608:Core/Src/main.c ****     Error_Handler();
 609:Core/Src/main.c ****   }
 610:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 2 */
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****   /* USER CODE END UART5_Init 2 */
 613:Core/Src/main.c **** 
 614:Core/Src/main.c **** }
 615:Core/Src/main.c **** 
 616:Core/Src/main.c **** /**
 617:Core/Src/main.c ****   * @brief USART6 Initialization Function
 618:Core/Src/main.c ****   * @param None
 619:Core/Src/main.c ****   * @retval None
 620:Core/Src/main.c ****   */
 621:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
 622:Core/Src/main.c **** {
 623:Core/Src/main.c **** 
 624:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
 625:Core/Src/main.c **** 
 626:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
 627:Core/Src/main.c **** 
 628:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
 631:Core/Src/main.c ****   huart6.Instance = USART6;
 632:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 633:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 634:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 635:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 636:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 637:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 638:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 639:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 640:Core/Src/main.c ****   {
 641:Core/Src/main.c ****     Error_Handler();
 642:Core/Src/main.c ****   }
 643:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
 646:Core/Src/main.c **** 
 647:Core/Src/main.c **** }
 648:Core/Src/main.c **** 
 649:Core/Src/main.c **** /**
 650:Core/Src/main.c ****   * Enable DMA controller clock
 651:Core/Src/main.c ****   */
 652:Core/Src/main.c **** static void MX_DMA_Init(void)
 653:Core/Src/main.c **** {
 654:Core/Src/main.c **** 
 655:Core/Src/main.c ****   /* DMA controller clock enable */
 656:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 657:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 658:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 13


 659:Core/Src/main.c ****   /* DMA interrupt init */
 660:Core/Src/main.c ****   /* DMA1_Stream0_IRQn interrupt configuration */
 661:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 662:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 663:Core/Src/main.c ****   /* DMA1_Stream7_IRQn interrupt configuration */
 664:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 665:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 666:Core/Src/main.c ****   /* DMA2_Stream1_IRQn interrupt configuration */
 667:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 0, 0);
 668:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 669:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 670:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 671:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 672:Core/Src/main.c ****   /* DMA2_Stream6_IRQn interrupt configuration */
 673:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 0, 0);
 674:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 675:Core/Src/main.c **** 
 676:Core/Src/main.c **** }
 677:Core/Src/main.c **** 
 678:Core/Src/main.c **** /**
 679:Core/Src/main.c ****   * @brief GPIO Initialization Function
 680:Core/Src/main.c ****   * @param None
 681:Core/Src/main.c ****   * @retval None
 682:Core/Src/main.c ****   */
 683:Core/Src/main.c **** static void MX_GPIO_Init(void)
 684:Core/Src/main.c **** {
  28              		.loc 1 684 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              		.cfi_def_cfa_offset 64
 685:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 685 3 view .LVU1
  42              		.loc 1 685 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 686:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 687:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 688:Core/Src/main.c **** 
 689:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 690:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 690 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 690 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 14


  53              		.loc 1 690 3 view .LVU5
  54 0012 344B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 690 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 690 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 690 3 view .LVU8
 691:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 691 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 691 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 691 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 691 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 691 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 691 3 view .LVU14
 692:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 692 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 692 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 692 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 692 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 692 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 692 3 view .LVU20
 693:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 693 3 view .LVU21
  99              	.LBB7:
 100              		.loc 1 693 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 693 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 693 3 view .LVU24
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 15


 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 693 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 693 3 view .LVU26
 694:Core/Src/main.c **** 
 695:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 696:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED_Pin|SPI2_CS_Pin|DC_Pin, GPIO_PIN_RESET);
 114              		.loc 1 696 3 view .LVU27
 115 0062 214F     		ldr	r7, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 42F21201 		movw	r1, #8210
 118 006a 3846     		mov	r0, r7
 119 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 697:Core/Src/main.c **** 
 698:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 699:Core/Src/main.c ****   HAL_GPIO_WritePin(RST_GPIO_Port, RST_Pin, GPIO_PIN_RESET);
 121              		.loc 1 699 3 view .LVU28
 122 0070 1E4D     		ldr	r5, .L3+8
 123 0072 2246     		mov	r2, r4
 124 0074 4021     		movs	r1, #64
 125 0076 2846     		mov	r0, r5
 126 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL1:
 700:Core/Src/main.c **** 
 701:Core/Src/main.c ****   /*Configure GPIO pins : LED_Pin SPI2_CS_Pin DC_Pin */
 702:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin|SPI2_CS_Pin|DC_Pin;
 128              		.loc 1 702 3 view .LVU29
 129              		.loc 1 702 23 is_stmt 0 view .LVU30
 130 007c 42F21203 		movw	r3, #8210
 131 0080 0593     		str	r3, [sp, #20]
 703:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 703 3 is_stmt 1 view .LVU31
 133              		.loc 1 703 24 is_stmt 0 view .LVU32
 134 0082 0126     		movs	r6, #1
 135 0084 0696     		str	r6, [sp, #24]
 704:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 704 3 is_stmt 1 view .LVU33
 137              		.loc 1 704 24 is_stmt 0 view .LVU34
 138 0086 0794     		str	r4, [sp, #28]
 705:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 705 3 is_stmt 1 view .LVU35
 140              		.loc 1 705 25 is_stmt 0 view .LVU36
 141 0088 0894     		str	r4, [sp, #32]
 706:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 142              		.loc 1 706 3 is_stmt 1 view .LVU37
 143 008a 05A9     		add	r1, sp, #20
 144 008c 3846     		mov	r0, r7
 145 008e FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL2:
 707:Core/Src/main.c **** 
 708:Core/Src/main.c ****   /*Configure GPIO pin : RST_Pin */
 709:Core/Src/main.c ****   GPIO_InitStruct.Pin = RST_Pin;
 147              		.loc 1 709 3 view .LVU38
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 16


 148              		.loc 1 709 23 is_stmt 0 view .LVU39
 149 0092 4023     		movs	r3, #64
 150 0094 0593     		str	r3, [sp, #20]
 710:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 151              		.loc 1 710 3 is_stmt 1 view .LVU40
 152              		.loc 1 710 24 is_stmt 0 view .LVU41
 153 0096 0696     		str	r6, [sp, #24]
 711:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 154              		.loc 1 711 3 is_stmt 1 view .LVU42
 155              		.loc 1 711 24 is_stmt 0 view .LVU43
 156 0098 0794     		str	r4, [sp, #28]
 712:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 157              		.loc 1 712 3 is_stmt 1 view .LVU44
 158              		.loc 1 712 25 is_stmt 0 view .LVU45
 159 009a 0894     		str	r4, [sp, #32]
 713:Core/Src/main.c ****   HAL_GPIO_Init(RST_GPIO_Port, &GPIO_InitStruct);
 160              		.loc 1 713 3 is_stmt 1 view .LVU46
 161 009c 05A9     		add	r1, sp, #20
 162 009e 2846     		mov	r0, r5
 163 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL3:
 714:Core/Src/main.c **** 
 715:Core/Src/main.c ****   /*Configure GPIO pins : ENC_KEY_Pin ENC_S2_Pin */
 716:Core/Src/main.c ****   GPIO_InitStruct.Pin = ENC_KEY_Pin|ENC_S2_Pin;
 165              		.loc 1 716 3 view .LVU47
 166              		.loc 1 716 23 is_stmt 0 view .LVU48
 167 00a4 4FF4C073 		mov	r3, #384
 168 00a8 0593     		str	r3, [sp, #20]
 717:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 169              		.loc 1 717 3 is_stmt 1 view .LVU49
 170              		.loc 1 717 24 is_stmt 0 view .LVU50
 171 00aa 0694     		str	r4, [sp, #24]
 718:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 172              		.loc 1 718 3 is_stmt 1 view .LVU51
 173              		.loc 1 718 24 is_stmt 0 view .LVU52
 174 00ac 0794     		str	r4, [sp, #28]
 719:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 175              		.loc 1 719 3 is_stmt 1 view .LVU53
 176 00ae 05F58065 		add	r5, r5, #1024
 177 00b2 05A9     		add	r1, sp, #20
 178 00b4 2846     		mov	r0, r5
 179 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL4:
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****   /*Configure GPIO pin : ENC_S1_Pin */
 722:Core/Src/main.c ****   GPIO_InitStruct.Pin = ENC_S1_Pin;
 181              		.loc 1 722 3 view .LVU54
 182              		.loc 1 722 23 is_stmt 0 view .LVU55
 183 00ba 4FF40073 		mov	r3, #512
 184 00be 0593     		str	r3, [sp, #20]
 723:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 185              		.loc 1 723 3 is_stmt 1 view .LVU56
 186              		.loc 1 723 24 is_stmt 0 view .LVU57
 187 00c0 4FF44413 		mov	r3, #3211264
 188 00c4 0693     		str	r3, [sp, #24]
 724:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 189              		.loc 1 724 3 is_stmt 1 view .LVU58
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 17


 190              		.loc 1 724 24 is_stmt 0 view .LVU59
 191 00c6 0794     		str	r4, [sp, #28]
 725:Core/Src/main.c ****   HAL_GPIO_Init(ENC_S1_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 725 3 is_stmt 1 view .LVU60
 193 00c8 05A9     		add	r1, sp, #20
 194 00ca 2846     		mov	r0, r5
 195 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL5:
 726:Core/Src/main.c **** 
 727:Core/Src/main.c ****   /* EXTI interrupt init*/
 728:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 197              		.loc 1 728 3 view .LVU61
 198 00d0 2246     		mov	r2, r4
 199 00d2 2146     		mov	r1, r4
 200 00d4 1720     		movs	r0, #23
 201 00d6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 202              	.LVL6:
 729:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 203              		.loc 1 729 3 view .LVU62
 204 00da 1720     		movs	r0, #23
 205 00dc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 206              	.LVL7:
 730:Core/Src/main.c **** 
 731:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 732:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 733:Core/Src/main.c **** }
 207              		.loc 1 733 1 is_stmt 0 view .LVU63
 208 00e0 0BB0     		add	sp, sp, #44
 209              		.cfi_def_cfa_offset 20
 210              		@ sp needed
 211 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 212              	.L4:
 213              		.align	2
 214              	.L3:
 215 00e4 00380240 		.word	1073887232
 216 00e8 00080240 		.word	1073874944
 217 00ec 00000240 		.word	1073872896
 218              		.cfi_endproc
 219              	.LFE142:
 221              		.section	.text.MX_DMA_Init,"ax",%progbits
 222              		.align	1
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 227              	MX_DMA_Init:
 228              	.LFB141:
 653:Core/Src/main.c **** 
 229              		.loc 1 653 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 18


 656:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 239              		.loc 1 656 3 view .LVU65
 240              	.LBB8:
 656:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 241              		.loc 1 656 3 view .LVU66
 242 0004 0024     		movs	r4, #0
 243 0006 0094     		str	r4, [sp]
 656:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 244              		.loc 1 656 3 view .LVU67
 245 0008 1E4B     		ldr	r3, .L7
 246 000a 1A6B     		ldr	r2, [r3, #48]
 247 000c 42F48002 		orr	r2, r2, #4194304
 248 0010 1A63     		str	r2, [r3, #48]
 656:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 249              		.loc 1 656 3 view .LVU68
 250 0012 1A6B     		ldr	r2, [r3, #48]
 251 0014 02F48002 		and	r2, r2, #4194304
 252 0018 0092     		str	r2, [sp]
 656:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 253              		.loc 1 656 3 view .LVU69
 254 001a 009A     		ldr	r2, [sp]
 255              	.LBE8:
 656:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 256              		.loc 1 656 3 view .LVU70
 657:Core/Src/main.c **** 
 257              		.loc 1 657 3 view .LVU71
 258              	.LBB9:
 657:Core/Src/main.c **** 
 259              		.loc 1 657 3 view .LVU72
 260 001c 0194     		str	r4, [sp, #4]
 657:Core/Src/main.c **** 
 261              		.loc 1 657 3 view .LVU73
 262 001e 1A6B     		ldr	r2, [r3, #48]
 263 0020 42F40012 		orr	r2, r2, #2097152
 264 0024 1A63     		str	r2, [r3, #48]
 657:Core/Src/main.c **** 
 265              		.loc 1 657 3 view .LVU74
 266 0026 1B6B     		ldr	r3, [r3, #48]
 267 0028 03F40013 		and	r3, r3, #2097152
 268 002c 0193     		str	r3, [sp, #4]
 657:Core/Src/main.c **** 
 269              		.loc 1 657 3 view .LVU75
 270 002e 019B     		ldr	r3, [sp, #4]
 271              	.LBE9:
 657:Core/Src/main.c **** 
 272              		.loc 1 657 3 view .LVU76
 661:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 273              		.loc 1 661 3 view .LVU77
 274 0030 2246     		mov	r2, r4
 275 0032 2146     		mov	r1, r4
 276 0034 0B20     		movs	r0, #11
 277 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 278              	.LVL8:
 662:Core/Src/main.c ****   /* DMA1_Stream7_IRQn interrupt configuration */
 279              		.loc 1 662 3 view .LVU78
 280 003a 0B20     		movs	r0, #11
 281 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 19


 282              	.LVL9:
 664:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 283              		.loc 1 664 3 view .LVU79
 284 0040 2246     		mov	r2, r4
 285 0042 2146     		mov	r1, r4
 286 0044 2F20     		movs	r0, #47
 287 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 288              	.LVL10:
 665:Core/Src/main.c ****   /* DMA2_Stream1_IRQn interrupt configuration */
 289              		.loc 1 665 3 view .LVU80
 290 004a 2F20     		movs	r0, #47
 291 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 292              	.LVL11:
 667:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 293              		.loc 1 667 3 view .LVU81
 294 0050 2246     		mov	r2, r4
 295 0052 2146     		mov	r1, r4
 296 0054 3920     		movs	r0, #57
 297 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 298              	.LVL12:
 668:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 299              		.loc 1 668 3 view .LVU82
 300 005a 3920     		movs	r0, #57
 301 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 302              	.LVL13:
 670:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 303              		.loc 1 670 3 view .LVU83
 304 0060 2246     		mov	r2, r4
 305 0062 2146     		mov	r1, r4
 306 0064 3A20     		movs	r0, #58
 307 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 308              	.LVL14:
 671:Core/Src/main.c ****   /* DMA2_Stream6_IRQn interrupt configuration */
 309              		.loc 1 671 3 view .LVU84
 310 006a 3A20     		movs	r0, #58
 311 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 312              	.LVL15:
 673:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 313              		.loc 1 673 3 view .LVU85
 314 0070 2246     		mov	r2, r4
 315 0072 2146     		mov	r1, r4
 316 0074 4520     		movs	r0, #69
 317 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 318              	.LVL16:
 674:Core/Src/main.c **** 
 319              		.loc 1 674 3 view .LVU86
 320 007a 4520     		movs	r0, #69
 321 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 322              	.LVL17:
 676:Core/Src/main.c **** 
 323              		.loc 1 676 1 is_stmt 0 view .LVU87
 324 0080 02B0     		add	sp, sp, #8
 325              		.cfi_def_cfa_offset 8
 326              		@ sp needed
 327 0082 10BD     		pop	{r4, pc}
 328              	.L8:
 329              		.align	2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 20


 330              	.L7:
 331 0084 00380240 		.word	1073887232
 332              		.cfi_endproc
 333              	.LFE141:
 335              		.global	__aeabi_d2uiz
 336              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 337              		.align	1
 338              		.global	HAL_UART_RxCpltCallback
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 343              	HAL_UART_RxCpltCallback:
 344              	.LVL18:
 345              	.LFB143:
 734:Core/Src/main.c **** 
 735:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 736:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 737:Core/Src/main.c **** {
 346              		.loc 1 737 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 16
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350              		.loc 1 737 1 is_stmt 0 view .LVU89
 351 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 352              		.cfi_def_cfa_offset 28
 353              		.cfi_offset 4, -28
 354              		.cfi_offset 5, -24
 355              		.cfi_offset 6, -20
 356              		.cfi_offset 7, -16
 357              		.cfi_offset 8, -12
 358              		.cfi_offset 9, -8
 359              		.cfi_offset 14, -4
 360 0004 85B0     		sub	sp, sp, #20
 361              		.cfi_def_cfa_offset 48
 362 0006 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 364 0008 0024     		movs	r4, #0
 365 000a 2546     		mov	r5, r4
 738:Core/Src/main.c ****   /*
 739:Core/Src/main.c ****   COMMUNICATION PROTOCOL
 740:Core/Src/main.c ****   Master    Slave
 741:Core/Src/main.c ****   T      -> palette(L/T), type(S/T/B), (value), X(value), (symbol) ... LB0X250Y%
 742:Core/Src/main.c ****   G      -> value ... 754
 743:Core/Src/main.c ****   val    -> OK
 744:Core/Src/main.c ****   ON     -> OK
 745:Core/Src/main.c ****   OFF    -> OK
 746:Core/Src/main.c ****   S      -> S(state(0/1)) ... S1
 747:Core/Src/main.c ****   */
 748:Core/Src/main.c ****   //uint8_t rx_buff[10];
 749:Core/Src/main.c ****  //(rx_buff, ""); 
 750:Core/Src/main.c ****   // HAL_UART_Receive_DMA(deviceList[dev_num].uart, rx_buff, 9);
 751:Core/Src/main.c ****   uint8_t rx_buff[10];
 366              		.loc 1 751 3 is_stmt 1 view .LVU90
 752:Core/Src/main.c **** HAL_UART_Receive_DMA(&huart5, rx_buff, 10);
 367              		.loc 1 752 1 view .LVU91
 368 000c 0A22     		movs	r2, #10
 369 000e 391D     		adds	r1, r7, #4
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 21


 370 0010 6248     		ldr	r0, .L29
 371              	.LVL19:
 372              		.loc 1 752 1 is_stmt 0 view .LVU92
 373 0012 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 374              	.LVL20:
 753:Core/Src/main.c **** //HAL_Delay(10);
 754:Core/Src/main.c ****   // if(trySIMInit == 1){
 755:Core/Src/main.c ****   //   if(rx_buff[0] == 79){
 756:Core/Src/main.c ****   //     sim.initState = 1;
 757:Core/Src/main.c ****   //     trySIMInit = 0;
 758:Core/Src/main.c ****   //   }
 759:Core/Src/main.c ****   //   return;
 760:Core/Src/main.c ****   // }
 761:Core/Src/main.c **** 
 762:Core/Src/main.c ****     // NEW CODE START
 763:Core/Src/main.c ****     // IF FIRST LETTER IS L OR T
 764:Core/Src/main.c ****   if(rx_buff[0] == 76 || rx_buff[0] == 84){
 375              		.loc 1 764 3 is_stmt 1 view .LVU93
 376              		.loc 1 764 13 is_stmt 0 view .LVU94
 377 0016 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 378              		.loc 1 764 5 view .LVU95
 379 0018 4C2B     		cmp	r3, #76
 380 001a 08D0     		beq	.L10
 381              		.loc 1 764 23 discriminator 1 view .LVU96
 382 001c 542B     		cmp	r3, #84
 383 001e 06D0     		beq	.L10
 765:Core/Src/main.c ****     // IF L
 766:Core/Src/main.c ****     if (rx_buff[0] == 76){
 767:Core/Src/main.c ****       deviceList[dev_num].paletteType = LIGHT_PALETTE;
 768:Core/Src/main.c ****     }else{
 769:Core/Src/main.c ****       deviceList[dev_num].paletteType = TEMP_PALETTE;
 770:Core/Src/main.c ****     }
 771:Core/Src/main.c ****     // ENDIF
 772:Core/Src/main.c **** 
 773:Core/Src/main.c ****     // DEVICE MODE
 774:Core/Src/main.c ****     switch (rx_buff[1])
 775:Core/Src/main.c ****     {
 776:Core/Src/main.c ****     case 83:
 777:Core/Src/main.c ****       deviceList[dev_num].deviceMode = TYPE_SET_ONLY;
 778:Core/Src/main.c ****       break;
 779:Core/Src/main.c ****     case 84:
 780:Core/Src/main.c ****       deviceList[dev_num].deviceMode = TYPE_TEL_ONLY;
 781:Core/Src/main.c ****       break;
 782:Core/Src/main.c ****     case 66:
 783:Core/Src/main.c ****       deviceList[dev_num].deviceMode = TYPE_SET_TEL;
 784:Core/Src/main.c ****       break;
 785:Core/Src/main.c ****     }
 786:Core/Src/main.c ****     // ENDIF
 787:Core/Src/main.c **** 
 788:Core/Src/main.c ****     //GET MIN, MAX VALUE & SYMBOL START
 789:Core/Src/main.c ****     uint8_t minValueEndIndex;
 790:Core/Src/main.c ****     uint8_t maxValueEndIndex;
 791:Core/Src/main.c **** 
 792:Core/Src/main.c ****     for (int i = 2; i<10; i++){
 793:Core/Src/main.c ****       if(rx_buff[i] == 88){
 794:Core/Src/main.c ****         minValueEndIndex = i-1;
 795:Core/Src/main.c ****       }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 22


 796:Core/Src/main.c ****       if(rx_buff[i] == 89){
 797:Core/Src/main.c ****         maxValueEndIndex = i-1;
 798:Core/Src/main.c ****         break;
 799:Core/Src/main.c ****       }
 800:Core/Src/main.c ****     }
 801:Core/Src/main.c **** 
 802:Core/Src/main.c ****     char minValueArr[minValueEndIndex-1];
 803:Core/Src/main.c ****     char maxValueArr[maxValueEndIndex-minValueEndIndex-1];
 804:Core/Src/main.c **** 
 805:Core/Src/main.c ****     memcpy(minValueArr, &rx_buff[2], (minValueEndIndex-1) * sizeof(char));
 806:Core/Src/main.c **** 
 807:Core/Src/main.c ****     memcpy(maxValueArr, &rx_buff[minValueEndIndex+2], (maxValueEndIndex-minValueEndIndex) * sizeof(
 808:Core/Src/main.c **** 
 809:Core/Src/main.c ****     deviceList[dev_num].minValue = atof(minValueArr);
 810:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 811:Core/Src/main.c **** 
 812:Core/Src/main.c ****     deviceList[dev_num].symbol = rx_buff[maxValueEndIndex+2];
 813:Core/Src/main.c **** 
 814:Core/Src/main.c ****     deviceList[dev_num].tx_buff[0] = 71;
 815:Core/Src/main.c ****     // GET MIN, MAX VALUE & SYMBOL END
 816:Core/Src/main.c ****     if(state == STATE_INIT){
 817:Core/Src/main.c ****       deviceList[dev_num].initState = DEV_STATE_IN;
 818:Core/Src/main.c ****       dev_num++;
 819:Core/Src/main.c ****     }
 820:Core/Src/main.c ****   }
 821:Core/Src/main.c ****   // else if (rx_buff[0] == 83){
 822:Core/Src/main.c ****   //   if(atoi(rx_buff[1]) == 1){
 823:Core/Src/main.c ****   //     deviceList[dev_num].isDevOn = 1;
 824:Core/Src/main.c ****   //   }else{
 825:Core/Src/main.c ****   //     deviceList[dev_num].isDevOn = 0;
 826:Core/Src/main.c ****   //   }
 827:Core/Src/main.c ****   // }
 828:Core/Src/main.c ****   else if(rx_buff[0] == 79){
 384              		.loc 1 828 8 is_stmt 1 view .LVU97
 385              		.loc 1 828 10 is_stmt 0 view .LVU98
 386 0020 4F2B     		cmp	r3, #79
 387 0022 40F0AA80 		bne	.L25
 829:Core/Src/main.c ****     transmitMode = TRANSMIT_MODE_GET;
 388              		.loc 1 829 5 is_stmt 1 view .LVU99
 389              		.loc 1 829 18 is_stmt 0 view .LVU100
 390 0026 5E4B     		ldr	r3, .L29+4
 391 0028 0022     		movs	r2, #0
 392 002a 1A70     		strb	r2, [r3]
 393 002c 9CE0     		b	.L24
 394              	.L10:
 395              	.LBB10:
 766:Core/Src/main.c ****       deviceList[dev_num].paletteType = LIGHT_PALETTE;
 396              		.loc 1 766 5 is_stmt 1 view .LVU101
 766:Core/Src/main.c ****       deviceList[dev_num].paletteType = LIGHT_PALETTE;
 397              		.loc 1 766 8 is_stmt 0 view .LVU102
 398 002e 4C2B     		cmp	r3, #76
 399 0030 11D0     		beq	.L27
 769:Core/Src/main.c ****     }
 400              		.loc 1 769 7 is_stmt 1 view .LVU103
 769:Core/Src/main.c ****     }
 401              		.loc 1 769 26 is_stmt 0 view .LVU104
 402 0032 5C4B     		ldr	r3, .L29+8
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 23


 403 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 769:Core/Src/main.c ****     }
 404              		.loc 1 769 39 view .LVU105
 405 0036 03EB8303 		add	r3, r3, r3, lsl #2
 406 003a 5B4A     		ldr	r2, .L29+12
 407 003c 02EBC303 		add	r3, r2, r3, lsl #3
 408 0040 0022     		movs	r2, #0
 409 0042 1A74     		strb	r2, [r3, #16]
 410              	.L13:
 774:Core/Src/main.c ****     {
 411              		.loc 1 774 5 is_stmt 1 view .LVU106
 774:Core/Src/main.c ****     {
 412              		.loc 1 774 20 is_stmt 0 view .LVU107
 413 0044 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 774:Core/Src/main.c ****     {
 414              		.loc 1 774 5 view .LVU108
 415 0046 532B     		cmp	r3, #83
 416 0048 0FD0     		beq	.L14
 417 004a 542B     		cmp	r3, #84
 418 004c 17D0     		beq	.L15
 419 004e 422B     		cmp	r3, #66
 420 0050 1FD0     		beq	.L16
 421              	.L17:
 789:Core/Src/main.c ****     uint8_t maxValueEndIndex;
 422              		.loc 1 789 5 is_stmt 1 view .LVU109
 790:Core/Src/main.c **** 
 423              		.loc 1 790 5 view .LVU110
 792:Core/Src/main.c ****       if(rx_buff[i] == 88){
 424              		.loc 1 792 5 view .LVU111
 425              	.LBB11:
 792:Core/Src/main.c ****       if(rx_buff[i] == 88){
 426              		.loc 1 792 10 view .LVU112
 427              	.LVL21:
 792:Core/Src/main.c ****       if(rx_buff[i] == 88){
 428              		.loc 1 792 14 is_stmt 0 view .LVU113
 429 0052 0223     		movs	r3, #2
 792:Core/Src/main.c ****       if(rx_buff[i] == 88){
 430              		.loc 1 792 5 view .LVU114
 431 0054 2AE0     		b	.L18
 432              	.LVL22:
 433              	.L27:
 792:Core/Src/main.c ****       if(rx_buff[i] == 88){
 434              		.loc 1 792 5 view .LVU115
 435              	.LBE11:
 767:Core/Src/main.c ****     }else{
 436              		.loc 1 767 7 is_stmt 1 view .LVU116
 767:Core/Src/main.c ****     }else{
 437              		.loc 1 767 26 is_stmt 0 view .LVU117
 438 0056 534B     		ldr	r3, .L29+8
 439 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 767:Core/Src/main.c ****     }else{
 440              		.loc 1 767 39 view .LVU118
 441 005a 03EB8303 		add	r3, r3, r3, lsl #2
 442 005e 524A     		ldr	r2, .L29+12
 443 0060 02EBC303 		add	r3, r2, r3, lsl #3
 444 0064 0122     		movs	r2, #1
 445 0066 1A74     		strb	r2, [r3, #16]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 24


 446 0068 ECE7     		b	.L13
 447              	.L14:
 777:Core/Src/main.c ****       break;
 448              		.loc 1 777 7 is_stmt 1 view .LVU119
 777:Core/Src/main.c ****       break;
 449              		.loc 1 777 26 is_stmt 0 view .LVU120
 450 006a 4E4B     		ldr	r3, .L29+8
 451 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 777:Core/Src/main.c ****       break;
 452              		.loc 1 777 38 view .LVU121
 453 006e 03EB8303 		add	r3, r3, r3, lsl #2
 454 0072 4D4A     		ldr	r2, .L29+12
 455 0074 02EBC303 		add	r3, r2, r3, lsl #3
 456 0078 0122     		movs	r2, #1
 457 007a 5A71     		strb	r2, [r3, #5]
 778:Core/Src/main.c ****     case 84:
 458              		.loc 1 778 7 is_stmt 1 view .LVU122
 459 007c E9E7     		b	.L17
 460              	.L15:
 780:Core/Src/main.c ****       break;
 461              		.loc 1 780 7 view .LVU123
 780:Core/Src/main.c ****       break;
 462              		.loc 1 780 26 is_stmt 0 view .LVU124
 463 007e 494B     		ldr	r3, .L29+8
 464 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 780:Core/Src/main.c ****       break;
 465              		.loc 1 780 38 view .LVU125
 466 0082 03EB8303 		add	r3, r3, r3, lsl #2
 467 0086 484A     		ldr	r2, .L29+12
 468 0088 02EBC303 		add	r3, r2, r3, lsl #3
 469 008c 0222     		movs	r2, #2
 470 008e 5A71     		strb	r2, [r3, #5]
 781:Core/Src/main.c ****     case 66:
 471              		.loc 1 781 7 is_stmt 1 view .LVU126
 472 0090 DFE7     		b	.L17
 473              	.L16:
 783:Core/Src/main.c ****       break;
 474              		.loc 1 783 7 view .LVU127
 783:Core/Src/main.c ****       break;
 475              		.loc 1 783 26 is_stmt 0 view .LVU128
 476 0092 444B     		ldr	r3, .L29+8
 477 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 783:Core/Src/main.c ****       break;
 478              		.loc 1 783 38 view .LVU129
 479 0096 03EB8303 		add	r3, r3, r3, lsl #2
 480 009a 434A     		ldr	r2, .L29+12
 481 009c 02EBC303 		add	r3, r2, r3, lsl #3
 482 00a0 0022     		movs	r2, #0
 483 00a2 5A71     		strb	r2, [r3, #5]
 784:Core/Src/main.c ****     }
 484              		.loc 1 784 7 is_stmt 1 view .LVU130
 485 00a4 D5E7     		b	.L17
 486              	.LVL23:
 487              	.L19:
 488              	.LBB12:
 796:Core/Src/main.c ****         maxValueEndIndex = i-1;
 489              		.loc 1 796 7 view .LVU131
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 25


 796:Core/Src/main.c ****         maxValueEndIndex = i-1;
 490              		.loc 1 796 9 is_stmt 0 view .LVU132
 491 00a6 592A     		cmp	r2, #89
 492 00a8 0DD0     		beq	.L28
 792:Core/Src/main.c ****       if(rx_buff[i] == 88){
 493              		.loc 1 792 28 is_stmt 1 discriminator 2 view .LVU133
 494 00aa 0133     		adds	r3, r3, #1
 495              	.LVL24:
 496              	.L18:
 792:Core/Src/main.c ****       if(rx_buff[i] == 88){
 497              		.loc 1 792 22 discriminator 1 view .LVU134
 498 00ac 092B     		cmp	r3, #9
 499 00ae 0DDC     		bgt	.L21
 793:Core/Src/main.c ****         minValueEndIndex = i-1;
 500              		.loc 1 793 7 view .LVU135
 793:Core/Src/main.c ****         minValueEndIndex = i-1;
 501              		.loc 1 793 17 is_stmt 0 view .LVU136
 502 00b0 03F11002 		add	r2, r3, #16
 503 00b4 3A44     		add	r2, r2, r7
 504 00b6 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 793:Core/Src/main.c ****         minValueEndIndex = i-1;
 505              		.loc 1 793 9 view .LVU137
 506 00ba 582A     		cmp	r2, #88
 507 00bc F3D1     		bne	.L19
 794:Core/Src/main.c ****       }
 508              		.loc 1 794 9 is_stmt 1 view .LVU138
 794:Core/Src/main.c ****       }
 509              		.loc 1 794 29 is_stmt 0 view .LVU139
 510 00be DCB2     		uxtb	r4, r3
 511              	.LVL25:
 794:Core/Src/main.c ****       }
 512              		.loc 1 794 26 view .LVU140
 513 00c0 013C     		subs	r4, r4, #1
 514 00c2 E4B2     		uxtb	r4, r4
 515              	.LVL26:
 794:Core/Src/main.c ****       }
 516              		.loc 1 794 26 view .LVU141
 517 00c4 EFE7     		b	.L19
 518              	.L28:
 797:Core/Src/main.c ****         break;
 519              		.loc 1 797 9 is_stmt 1 view .LVU142
 797:Core/Src/main.c ****         break;
 520              		.loc 1 797 29 is_stmt 0 view .LVU143
 521 00c6 DBB2     		uxtb	r3, r3
 522              	.LVL27:
 797:Core/Src/main.c ****         break;
 523              		.loc 1 797 26 view .LVU144
 524 00c8 013B     		subs	r3, r3, #1
 525 00ca DDB2     		uxtb	r5, r3
 526              	.LVL28:
 798:Core/Src/main.c ****       }
 527              		.loc 1 798 9 is_stmt 1 view .LVU145
 528              	.L21:
 798:Core/Src/main.c ****       }
 529              		.loc 1 798 9 is_stmt 0 view .LVU146
 530              	.LBE12:
 802:Core/Src/main.c ****     char maxValueArr[maxValueEndIndex-minValueEndIndex-1];
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 26


 531              		.loc 1 802 5 is_stmt 1 view .LVU147
 532 00cc 6E46     		mov	r6, sp
 533              	.LVL29:
 802:Core/Src/main.c ****     char maxValueArr[maxValueEndIndex-minValueEndIndex-1];
 534              		.loc 1 802 10 is_stmt 0 discriminator 1 view .LVU148
 535 00ce A31D     		adds	r3, r4, #6
 536 00d0 23F00703 		bic	r3, r3, #7
 537 00d4 ADEB030D 		sub	sp, sp, r3
 538 00d8 E846     		mov	r8, sp
 539              	.LVL30:
 803:Core/Src/main.c **** 
 540              		.loc 1 803 5 is_stmt 1 view .LVU149
 803:Core/Src/main.c **** 
 541              		.loc 1 803 38 is_stmt 0 view .LVU150
 542 00da A5EB0409 		sub	r9, r5, r4
 543              	.LVL31:
 803:Core/Src/main.c **** 
 544              		.loc 1 803 10 view .LVU151
 545 00de 09F10603 		add	r3, r9, #6
 546 00e2 23F00703 		bic	r3, r3, #7
 547 00e6 ADEB030D 		sub	sp, sp, r3
 548              	.LVL32:
 805:Core/Src/main.c **** 
 549              		.loc 1 805 5 is_stmt 1 view .LVU152
 550 00ea 621E     		subs	r2, r4, #1
 551 00ec B91D     		adds	r1, r7, #6
 552 00ee 4046     		mov	r0, r8
 553 00f0 FFF7FEFF 		bl	memcpy
 554              	.LVL33:
 807:Core/Src/main.c **** 
 555              		.loc 1 807 5 view .LVU153
 807:Core/Src/main.c **** 
 556              		.loc 1 807 50 is_stmt 0 view .LVU154
 557 00f4 A11C     		adds	r1, r4, #2
 807:Core/Src/main.c **** 
 558              		.loc 1 807 5 view .LVU155
 559 00f6 4A46     		mov	r2, r9
 560 00f8 3B1D     		adds	r3, r7, #4
 561 00fa 1944     		add	r1, r1, r3
 562 00fc 6846     		mov	r0, sp
 563 00fe FFF7FEFF 		bl	memcpy
 564              	.LVL34:
 809:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 565              		.loc 1 809 5 is_stmt 1 view .LVU156
 809:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 566              		.loc 1 809 36 is_stmt 0 view .LVU157
 567 0102 4046     		mov	r0, r8
 568 0104 FFF7FEFF 		bl	atof
 569              	.LVL35:
 570 0108 51EC100B 		vmov	r0, r1, d0
 809:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 571              		.loc 1 809 24 discriminator 1 view .LVU158
 572 010c DFF89480 		ldr	r8, .L29+8
 573              	.LVL36:
 809:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 574              		.loc 1 809 24 discriminator 1 view .LVU159
 575 0110 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 27


 809:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 576              		.loc 1 809 34 discriminator 1 view .LVU160
 577 0114 DFF89090 		ldr	r9, .L29+12
 578              	.LVL37:
 809:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 579              		.loc 1 809 34 discriminator 1 view .LVU161
 580 0118 03EB8303 		add	r3, r3, r3, lsl #2
 581 011c 09EBC304 		add	r4, r9, r3, lsl #3
 582              	.LVL38:
 809:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 583              		.loc 1 809 34 discriminator 1 view .LVU162
 584 0120 FFF7FEFF 		bl	__aeabi_d2uiz
 585              	.LVL39:
 586 0124 6081     		strh	r0, [r4, #10]	@ movhi
 810:Core/Src/main.c **** 
 587              		.loc 1 810 5 is_stmt 1 view .LVU163
 810:Core/Src/main.c **** 
 588              		.loc 1 810 36 is_stmt 0 view .LVU164
 589 0126 6846     		mov	r0, sp
 590 0128 FFF7FEFF 		bl	atof
 591              	.LVL40:
 592 012c 51EC100B 		vmov	r0, r1, d0
 810:Core/Src/main.c **** 
 593              		.loc 1 810 24 discriminator 1 view .LVU165
 594 0130 98F80080 		ldrb	r8, [r8]	@ zero_extendqisi2
 810:Core/Src/main.c **** 
 595              		.loc 1 810 34 discriminator 1 view .LVU166
 596 0134 08EB8804 		add	r4, r8, r8, lsl #2
 597 0138 09EBC404 		add	r4, r9, r4, lsl #3
 598 013c FFF7FEFF 		bl	__aeabi_d2uiz
 599              	.LVL41:
 600 0140 A081     		strh	r0, [r4, #12]	@ movhi
 812:Core/Src/main.c **** 
 601              		.loc 1 812 5 is_stmt 1 view .LVU167
 812:Core/Src/main.c **** 
 602              		.loc 1 812 41 is_stmt 0 view .LVU168
 603 0142 05F11203 		add	r3, r5, #18
 604 0146 3B44     		add	r3, r3, r7
 605 0148 13F80C3C 		ldrb	r3, [r3, #-12]	@ zero_extendqisi2
 812:Core/Src/main.c **** 
 606              		.loc 1 812 32 view .LVU169
 607 014c 84F82530 		strb	r3, [r4, #37]
 814:Core/Src/main.c ****     // GET MIN, MAX VALUE & SYMBOL END
 608              		.loc 1 814 5 is_stmt 1 view .LVU170
 814:Core/Src/main.c ****     // GET MIN, MAX VALUE & SYMBOL END
 609              		.loc 1 814 36 is_stmt 0 view .LVU171
 610 0150 4723     		movs	r3, #71
 611 0152 E376     		strb	r3, [r4, #27]
 816:Core/Src/main.c ****       deviceList[dev_num].initState = DEV_STATE_IN;
 612              		.loc 1 816 5 is_stmt 1 view .LVU172
 816:Core/Src/main.c ****       deviceList[dev_num].initState = DEV_STATE_IN;
 613              		.loc 1 816 14 is_stmt 0 view .LVU173
 614 0154 154B     		ldr	r3, .L29+16
 615 0156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 816:Core/Src/main.c ****       deviceList[dev_num].initState = DEV_STATE_IN;
 616              		.loc 1 816 7 view .LVU174
 617 0158 2BB9     		cbnz	r3, .L23
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 28


 817:Core/Src/main.c ****       dev_num++;
 618              		.loc 1 817 7 is_stmt 1 view .LVU175
 817:Core/Src/main.c ****       dev_num++;
 619              		.loc 1 817 37 is_stmt 0 view .LVU176
 620 015a 0122     		movs	r2, #1
 621 015c 2271     		strb	r2, [r4, #4]
 818:Core/Src/main.c ****     }
 622              		.loc 1 818 7 is_stmt 1 view .LVU177
 818:Core/Src/main.c ****     }
 623              		.loc 1 818 14 is_stmt 0 view .LVU178
 624 015e 08EB0203 		add	r3, r8, r2
 625 0162 104A     		ldr	r2, .L29+8
 626 0164 1370     		strb	r3, [r2]
 627              	.L23:
 628 0166 B546     		mov	sp, r6
 629              	.LVL42:
 630              	.L24:
 818:Core/Src/main.c ****     }
 631              		.loc 1 818 14 view .LVU179
 632              	.LBE10:
 830:Core/Src/main.c ****   }else{// ISSUE START
 831:Core/Src/main.c ****     deviceList[dev_num].currentValue = atof(rx_buff);
 832:Core/Src/main.c ****     // deviceList[dev_num].currentValue /= 10;
 833:Core/Src/main.c ****   }// ISSUE END
 834:Core/Src/main.c ****   // NEW CODE END
 835:Core/Src/main.c **** 
 836:Core/Src/main.c **** 
 837:Core/Src/main.c **** 
 838:Core/Src/main.c ****   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 633              		.loc 1 838 3 is_stmt 1 view .LVU180
 634 0168 4FF40051 		mov	r1, #8192
 635 016c 1048     		ldr	r0, .L29+20
 636 016e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 637              	.LVL43:
 839:Core/Src/main.c **** }
 638              		.loc 1 839 1 is_stmt 0 view .LVU181
 639 0172 1437     		adds	r7, r7, #20
 640              		.cfi_remember_state
 641              		.cfi_def_cfa_offset 28
 642 0174 BD46     		mov	sp, r7
 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 0176 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 646              	.L25:
 647              		.cfi_restore_state
 831:Core/Src/main.c ****     // deviceList[dev_num].currentValue /= 10;
 648              		.loc 1 831 5 is_stmt 1 view .LVU182
 831:Core/Src/main.c ****     // deviceList[dev_num].currentValue /= 10;
 649              		.loc 1 831 40 is_stmt 0 view .LVU183
 650 017a 381D     		adds	r0, r7, #4
 651 017c FFF7FEFF 		bl	atof
 652              	.LVL44:
 653 0180 51EC100B 		vmov	r0, r1, d0
 831:Core/Src/main.c ****     // deviceList[dev_num].currentValue /= 10;
 654              		.loc 1 831 24 discriminator 1 view .LVU184
 655 0184 074B     		ldr	r3, .L29+8
 656 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 29


 831:Core/Src/main.c ****     // deviceList[dev_num].currentValue /= 10;
 657              		.loc 1 831 38 discriminator 1 view .LVU185
 658 0188 03EB8303 		add	r3, r3, r3, lsl #2
 659 018c 064C     		ldr	r4, .L29+12
 660 018e 04EBC304 		add	r4, r4, r3, lsl #3
 661 0192 FFF7FEFF 		bl	__aeabi_d2uiz
 662              	.LVL45:
 663 0196 E080     		strh	r0, [r4, #6]	@ movhi
 664 0198 E6E7     		b	.L24
 665              	.L30:
 666 019a 00BF     		.align	2
 667              	.L29:
 668 019c 00000000 		.word	huart5
 669 01a0 00000000 		.word	transmitMode
 670 01a4 00000000 		.word	dev_num
 671 01a8 00000000 		.word	deviceList
 672 01ac 00000000 		.word	state
 673 01b0 00080240 		.word	1073874944
 674              		.cfi_endproc
 675              	.LFE143:
 677              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 678              		.align	1
 679              		.global	HAL_GPIO_EXTI_Callback
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	HAL_GPIO_EXTI_Callback:
 685              	.LVL46:
 686              	.LFB144:
 840:Core/Src/main.c **** 
 841:Core/Src/main.c **** 
 842:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 843:Core/Src/main.c **** {
 687              		.loc 1 843 1 is_stmt 1 view -0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 844:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_9) {
 691              		.loc 1 844 3 view .LVU187
 692              		.loc 1 844 5 is_stmt 0 view .LVU188
 693 0000 B0F5007F 		cmp	r0, #512
 694 0004 01D0     		beq	.L38
 845:Core/Src/main.c ****     tickEnc(&enc);
 846:Core/Src/main.c ****   } else {
 847:Core/Src/main.c ****       __NOP();
 695              		.loc 1 847 7 is_stmt 1 view .LVU189
 696              		.syntax unified
 697              	@ 847 "Core/Src/main.c" 1
 698 0006 00BF     		nop
 699              	@ 0 "" 2
 700              		.thumb
 701              		.syntax unified
 702 0008 7047     		bx	lr
 703              	.L38:
 843:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_9) {
 704              		.loc 1 843 1 is_stmt 0 view .LVU190
 705 000a 08B5     		push	{r3, lr}
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 30


 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 3, -8
 708              		.cfi_offset 14, -4
 845:Core/Src/main.c ****     tickEnc(&enc);
 709              		.loc 1 845 5 is_stmt 1 view .LVU191
 710 000c 0148     		ldr	r0, .L39
 711              	.LVL47:
 845:Core/Src/main.c ****     tickEnc(&enc);
 712              		.loc 1 845 5 is_stmt 0 view .LVU192
 713 000e FFF7FEFF 		bl	tickEnc
 714              	.LVL48:
 848:Core/Src/main.c ****   }
 849:Core/Src/main.c **** }
 715              		.loc 1 849 1 view .LVU193
 716 0012 08BD     		pop	{r3, pc}
 717              	.L40:
 718              		.align	2
 719              	.L39:
 720 0014 00000000 		.word	enc
 721              		.cfi_endproc
 722              	.LFE144:
 724              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 725              		.align	2
 726              	.LC0:
 727 0000 50414E49 		.ascii	"PANIC!\000"
 727      432100
 728              		.section	.text.Error_Handler,"ax",%progbits
 729              		.align	1
 730              		.global	Error_Handler
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	Error_Handler:
 736              	.LFB145:
 850:Core/Src/main.c **** /* USER CODE END 4 */
 851:Core/Src/main.c **** 
 852:Core/Src/main.c **** /**
 853:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 854:Core/Src/main.c ****   * @retval None
 855:Core/Src/main.c ****   */
 856:Core/Src/main.c **** void Error_Handler(void)
 857:Core/Src/main.c **** {
 737              		.loc 1 857 1 is_stmt 1 view -0
 738              		.cfi_startproc
 739              		@ Volatile: function does not return.
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742 0000 08B5     		push	{r3, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 3, -8
 745              		.cfi_offset 14, -4
 858:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 859:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 860:Core/Src/main.c ****   __disable_irq();
 746              		.loc 1 860 3 view .LVU195
 747              	.LBB13:
 748              	.LBI13:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 31


 749              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 32


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 33


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 34


 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 35


 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 36


 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 37


 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 38


 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 39


 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 40


 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 41


 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 42


 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 43


 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 44


 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 45


 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 46


 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 47


 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 750              		.loc 2 960 27 view .LVU196
 751              	.LBB14:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 752              		.loc 2 962 3 view .LVU197
 753              		.syntax unified
 754              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 755 0002 72B6     		cpsid i
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 48


 756              	@ 0 "" 2
 757              		.thumb
 758              		.syntax unified
 759              	.L42:
 760              	.LBE14:
 761              	.LBE13:
 861:Core/Src/main.c ****   while (1)
 762              		.loc 1 861 3 view .LVU198
 862:Core/Src/main.c ****   {
 863:Core/Src/main.c ****     Show_Message("PANIC!", 60000);
 763              		.loc 1 863 5 discriminator 1 view .LVU199
 764 0004 4EF66021 		movw	r1, #60000
 765 0008 0148     		ldr	r0, .L44
 766 000a FFF7FEFF 		bl	Show_Message
 767              	.LVL49:
 861:Core/Src/main.c ****   while (1)
 768              		.loc 1 861 9 view .LVU200
 769 000e F9E7     		b	.L42
 770              	.L45:
 771              		.align	2
 772              	.L44:
 773 0010 00000000 		.word	.LC0
 774              		.cfi_endproc
 775              	.LFE145:
 777              		.section	.text.MX_SPI1_Init,"ax",%progbits
 778              		.align	1
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 783              	MX_SPI1_Init:
 784              	.LFB137:
 513:Core/Src/main.c **** 
 785              		.loc 1 513 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789 0000 08B5     		push	{r3, lr}
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 3, -8
 792              		.cfi_offset 14, -4
 523:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 793              		.loc 1 523 3 view .LVU202
 523:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 794              		.loc 1 523 18 is_stmt 0 view .LVU203
 795 0002 0E48     		ldr	r0, .L50
 796 0004 0E4B     		ldr	r3, .L50+4
 797 0006 0360     		str	r3, [r0]
 524:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 798              		.loc 1 524 3 is_stmt 1 view .LVU204
 524:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 799              		.loc 1 524 19 is_stmt 0 view .LVU205
 800 0008 4FF48273 		mov	r3, #260
 801 000c 4360     		str	r3, [r0, #4]
 525:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 802              		.loc 1 525 3 is_stmt 1 view .LVU206
 525:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 803              		.loc 1 525 24 is_stmt 0 view .LVU207
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 49


 804 000e 4FF40043 		mov	r3, #32768
 805 0012 8360     		str	r3, [r0, #8]
 526:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 806              		.loc 1 526 3 is_stmt 1 view .LVU208
 526:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 807              		.loc 1 526 23 is_stmt 0 view .LVU209
 808 0014 0023     		movs	r3, #0
 809 0016 C360     		str	r3, [r0, #12]
 527:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 810              		.loc 1 527 3 is_stmt 1 view .LVU210
 527:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 811              		.loc 1 527 26 is_stmt 0 view .LVU211
 812 0018 0361     		str	r3, [r0, #16]
 528:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 813              		.loc 1 528 3 is_stmt 1 view .LVU212
 528:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 814              		.loc 1 528 23 is_stmt 0 view .LVU213
 815 001a 4361     		str	r3, [r0, #20]
 529:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 816              		.loc 1 529 3 is_stmt 1 view .LVU214
 529:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 817              		.loc 1 529 18 is_stmt 0 view .LVU215
 818 001c 4FF48022 		mov	r2, #262144
 819 0020 8261     		str	r2, [r0, #24]
 530:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 820              		.loc 1 530 3 is_stmt 1 view .LVU216
 530:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 821              		.loc 1 530 32 is_stmt 0 view .LVU217
 822 0022 C361     		str	r3, [r0, #28]
 531:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 823              		.loc 1 531 3 is_stmt 1 view .LVU218
 531:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 824              		.loc 1 531 23 is_stmt 0 view .LVU219
 825 0024 0362     		str	r3, [r0, #32]
 532:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 826              		.loc 1 532 3 is_stmt 1 view .LVU220
 532:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 827              		.loc 1 532 21 is_stmt 0 view .LVU221
 828 0026 4362     		str	r3, [r0, #36]
 533:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 829              		.loc 1 533 3 is_stmt 1 view .LVU222
 533:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 830              		.loc 1 533 29 is_stmt 0 view .LVU223
 831 0028 8362     		str	r3, [r0, #40]
 534:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 832              		.loc 1 534 3 is_stmt 1 view .LVU224
 534:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 833              		.loc 1 534 28 is_stmt 0 view .LVU225
 834 002a 0A23     		movs	r3, #10
 835 002c C362     		str	r3, [r0, #44]
 535:Core/Src/main.c ****   {
 836              		.loc 1 535 3 is_stmt 1 view .LVU226
 535:Core/Src/main.c ****   {
 837              		.loc 1 535 7 is_stmt 0 view .LVU227
 838 002e FFF7FEFF 		bl	HAL_SPI_Init
 839              	.LVL50:
 535:Core/Src/main.c ****   {
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 50


 840              		.loc 1 535 6 discriminator 1 view .LVU228
 841 0032 00B9     		cbnz	r0, .L49
 543:Core/Src/main.c **** 
 842              		.loc 1 543 1 view .LVU229
 843 0034 08BD     		pop	{r3, pc}
 844              	.L49:
 537:Core/Src/main.c ****   }
 845              		.loc 1 537 5 is_stmt 1 view .LVU230
 846 0036 FFF7FEFF 		bl	Error_Handler
 847              	.LVL51:
 848              	.L51:
 849 003a 00BF     		.align	2
 850              	.L50:
 851 003c 00000000 		.word	hspi1
 852 0040 00300140 		.word	1073819648
 853              		.cfi_endproc
 854              	.LFE137:
 856              		.section	.text.MX_UART5_Init,"ax",%progbits
 857              		.align	1
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 862              	MX_UART5_Init:
 863              	.LFB139:
 589:Core/Src/main.c **** 
 864              		.loc 1 589 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868 0000 08B5     		push	{r3, lr}
 869              		.cfi_def_cfa_offset 8
 870              		.cfi_offset 3, -8
 871              		.cfi_offset 14, -4
 598:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 872              		.loc 1 598 3 view .LVU232
 598:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 873              		.loc 1 598 19 is_stmt 0 view .LVU233
 874 0002 0A48     		ldr	r0, .L56
 875 0004 0A4B     		ldr	r3, .L56+4
 876 0006 0360     		str	r3, [r0]
 599:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 877              		.loc 1 599 3 is_stmt 1 view .LVU234
 599:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 878              		.loc 1 599 24 is_stmt 0 view .LVU235
 879 0008 4FF4E133 		mov	r3, #115200
 880 000c 4360     		str	r3, [r0, #4]
 600:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
 881              		.loc 1 600 3 is_stmt 1 view .LVU236
 600:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
 882              		.loc 1 600 26 is_stmt 0 view .LVU237
 883 000e 0023     		movs	r3, #0
 884 0010 8360     		str	r3, [r0, #8]
 601:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 885              		.loc 1 601 3 is_stmt 1 view .LVU238
 601:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 886              		.loc 1 601 24 is_stmt 0 view .LVU239
 887 0012 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 51


 602:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 888              		.loc 1 602 3 is_stmt 1 view .LVU240
 602:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 889              		.loc 1 602 22 is_stmt 0 view .LVU241
 890 0014 0361     		str	r3, [r0, #16]
 603:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 891              		.loc 1 603 3 is_stmt 1 view .LVU242
 603:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 892              		.loc 1 603 20 is_stmt 0 view .LVU243
 893 0016 0C22     		movs	r2, #12
 894 0018 4261     		str	r2, [r0, #20]
 604:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 895              		.loc 1 604 3 is_stmt 1 view .LVU244
 604:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 896              		.loc 1 604 25 is_stmt 0 view .LVU245
 897 001a 8361     		str	r3, [r0, #24]
 605:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 898              		.loc 1 605 3 is_stmt 1 view .LVU246
 605:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 899              		.loc 1 605 28 is_stmt 0 view .LVU247
 900 001c C361     		str	r3, [r0, #28]
 606:Core/Src/main.c ****   {
 901              		.loc 1 606 3 is_stmt 1 view .LVU248
 606:Core/Src/main.c ****   {
 902              		.loc 1 606 7 is_stmt 0 view .LVU249
 903 001e FFF7FEFF 		bl	HAL_UART_Init
 904              	.LVL52:
 606:Core/Src/main.c ****   {
 905              		.loc 1 606 6 discriminator 1 view .LVU250
 906 0022 00B9     		cbnz	r0, .L55
 614:Core/Src/main.c **** 
 907              		.loc 1 614 1 view .LVU251
 908 0024 08BD     		pop	{r3, pc}
 909              	.L55:
 608:Core/Src/main.c ****   }
 910              		.loc 1 608 5 is_stmt 1 view .LVU252
 911 0026 FFF7FEFF 		bl	Error_Handler
 912              	.LVL53:
 913              	.L57:
 914 002a 00BF     		.align	2
 915              	.L56:
 916 002c 00000000 		.word	huart5
 917 0030 00500040 		.word	1073762304
 918              		.cfi_endproc
 919              	.LFE139:
 921              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 922              		.align	1
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 927              	MX_USART6_UART_Init:
 928              	.LFB140:
 622:Core/Src/main.c **** 
 929              		.loc 1 622 1 view -0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 52


 933 0000 08B5     		push	{r3, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 3, -8
 936              		.cfi_offset 14, -4
 631:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 937              		.loc 1 631 3 view .LVU254
 631:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 938              		.loc 1 631 19 is_stmt 0 view .LVU255
 939 0002 0A48     		ldr	r0, .L62
 940 0004 0A4B     		ldr	r3, .L62+4
 941 0006 0360     		str	r3, [r0]
 632:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 942              		.loc 1 632 3 is_stmt 1 view .LVU256
 632:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 943              		.loc 1 632 24 is_stmt 0 view .LVU257
 944 0008 4FF4E133 		mov	r3, #115200
 945 000c 4360     		str	r3, [r0, #4]
 633:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 946              		.loc 1 633 3 is_stmt 1 view .LVU258
 633:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 947              		.loc 1 633 26 is_stmt 0 view .LVU259
 948 000e 0023     		movs	r3, #0
 949 0010 8360     		str	r3, [r0, #8]
 634:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 950              		.loc 1 634 3 is_stmt 1 view .LVU260
 634:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 951              		.loc 1 634 24 is_stmt 0 view .LVU261
 952 0012 C360     		str	r3, [r0, #12]
 635:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 953              		.loc 1 635 3 is_stmt 1 view .LVU262
 635:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 954              		.loc 1 635 22 is_stmt 0 view .LVU263
 955 0014 0361     		str	r3, [r0, #16]
 636:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 956              		.loc 1 636 3 is_stmt 1 view .LVU264
 636:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 957              		.loc 1 636 20 is_stmt 0 view .LVU265
 958 0016 0C22     		movs	r2, #12
 959 0018 4261     		str	r2, [r0, #20]
 637:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 960              		.loc 1 637 3 is_stmt 1 view .LVU266
 637:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 961              		.loc 1 637 25 is_stmt 0 view .LVU267
 962 001a 8361     		str	r3, [r0, #24]
 638:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 963              		.loc 1 638 3 is_stmt 1 view .LVU268
 638:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 964              		.loc 1 638 28 is_stmt 0 view .LVU269
 965 001c C361     		str	r3, [r0, #28]
 639:Core/Src/main.c ****   {
 966              		.loc 1 639 3 is_stmt 1 view .LVU270
 639:Core/Src/main.c ****   {
 967              		.loc 1 639 7 is_stmt 0 view .LVU271
 968 001e FFF7FEFF 		bl	HAL_UART_Init
 969              	.LVL54:
 639:Core/Src/main.c ****   {
 970              		.loc 1 639 6 discriminator 1 view .LVU272
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 53


 971 0022 00B9     		cbnz	r0, .L61
 647:Core/Src/main.c **** 
 972              		.loc 1 647 1 view .LVU273
 973 0024 08BD     		pop	{r3, pc}
 974              	.L61:
 641:Core/Src/main.c ****   }
 975              		.loc 1 641 5 is_stmt 1 view .LVU274
 976 0026 FFF7FEFF 		bl	Error_Handler
 977              	.LVL55:
 978              	.L63:
 979 002a 00BF     		.align	2
 980              	.L62:
 981 002c 00000000 		.word	huart6
 982 0030 00140140 		.word	1073812480
 983              		.cfi_endproc
 984              	.LFE140:
 986              		.section	.text.MX_SPI2_Init,"ax",%progbits
 987              		.align	1
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 992              	MX_SPI2_Init:
 993              	.LFB138:
 551:Core/Src/main.c **** 
 994              		.loc 1 551 1 view -0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998 0000 08B5     		push	{r3, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 3, -8
 1001              		.cfi_offset 14, -4
 561:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1002              		.loc 1 561 3 view .LVU276
 561:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1003              		.loc 1 561 18 is_stmt 0 view .LVU277
 1004 0002 0D48     		ldr	r0, .L68
 1005 0004 0D4B     		ldr	r3, .L68+4
 1006 0006 0360     		str	r3, [r0]
 562:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1007              		.loc 1 562 3 is_stmt 1 view .LVU278
 562:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1008              		.loc 1 562 19 is_stmt 0 view .LVU279
 1009 0008 4FF48273 		mov	r3, #260
 1010 000c 4360     		str	r3, [r0, #4]
 563:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 1011              		.loc 1 563 3 is_stmt 1 view .LVU280
 563:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 1012              		.loc 1 563 24 is_stmt 0 view .LVU281
 1013 000e 0023     		movs	r3, #0
 1014 0010 8360     		str	r3, [r0, #8]
 564:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1015              		.loc 1 564 3 is_stmt 1 view .LVU282
 564:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1016              		.loc 1 564 23 is_stmt 0 view .LVU283
 1017 0012 C360     		str	r3, [r0, #12]
 565:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 54


 1018              		.loc 1 565 3 is_stmt 1 view .LVU284
 565:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1019              		.loc 1 565 26 is_stmt 0 view .LVU285
 1020 0014 0361     		str	r3, [r0, #16]
 566:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1021              		.loc 1 566 3 is_stmt 1 view .LVU286
 566:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1022              		.loc 1 566 23 is_stmt 0 view .LVU287
 1023 0016 4361     		str	r3, [r0, #20]
 567:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 1024              		.loc 1 567 3 is_stmt 1 view .LVU288
 567:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 1025              		.loc 1 567 18 is_stmt 0 view .LVU289
 1026 0018 4FF40072 		mov	r2, #512
 1027 001c 8261     		str	r2, [r0, #24]
 568:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1028              		.loc 1 568 3 is_stmt 1 view .LVU290
 568:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1029              		.loc 1 568 32 is_stmt 0 view .LVU291
 1030 001e 3822     		movs	r2, #56
 1031 0020 C261     		str	r2, [r0, #28]
 569:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1032              		.loc 1 569 3 is_stmt 1 view .LVU292
 569:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1033              		.loc 1 569 23 is_stmt 0 view .LVU293
 1034 0022 0362     		str	r3, [r0, #32]
 570:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1035              		.loc 1 570 3 is_stmt 1 view .LVU294
 570:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1036              		.loc 1 570 21 is_stmt 0 view .LVU295
 1037 0024 4362     		str	r3, [r0, #36]
 571:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 1038              		.loc 1 571 3 is_stmt 1 view .LVU296
 571:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 1039              		.loc 1 571 29 is_stmt 0 view .LVU297
 1040 0026 8362     		str	r3, [r0, #40]
 572:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1041              		.loc 1 572 3 is_stmt 1 view .LVU298
 572:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1042              		.loc 1 572 28 is_stmt 0 view .LVU299
 1043 0028 0A23     		movs	r3, #10
 1044 002a C362     		str	r3, [r0, #44]
 573:Core/Src/main.c ****   {
 1045              		.loc 1 573 3 is_stmt 1 view .LVU300
 573:Core/Src/main.c ****   {
 1046              		.loc 1 573 7 is_stmt 0 view .LVU301
 1047 002c FFF7FEFF 		bl	HAL_SPI_Init
 1048              	.LVL56:
 573:Core/Src/main.c ****   {
 1049              		.loc 1 573 6 discriminator 1 view .LVU302
 1050 0030 00B9     		cbnz	r0, .L67
 581:Core/Src/main.c **** 
 1051              		.loc 1 581 1 view .LVU303
 1052 0032 08BD     		pop	{r3, pc}
 1053              	.L67:
 575:Core/Src/main.c ****   }
 1054              		.loc 1 575 5 is_stmt 1 view .LVU304
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 55


 1055 0034 FFF7FEFF 		bl	Error_Handler
 1056              	.LVL57:
 1057              	.L69:
 1058              		.align	2
 1059              	.L68:
 1060 0038 00000000 		.word	hspi2
 1061 003c 00380040 		.word	1073756160
 1062              		.cfi_endproc
 1063              	.LFE138:
 1065              		.section	.text.MX_RTC_Init,"ax",%progbits
 1066              		.align	1
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1071              	MX_RTC_Init:
 1072              	.LFB136:
 450:Core/Src/main.c **** 
 1073              		.loc 1 450 1 view -0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 24
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 1077 0000 00B5     		push	{lr}
 1078              		.cfi_def_cfa_offset 4
 1079              		.cfi_offset 14, -4
 1080 0002 87B0     		sub	sp, sp, #28
 1081              		.cfi_def_cfa_offset 32
 456:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1082              		.loc 1 456 3 view .LVU306
 456:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1083              		.loc 1 456 19 is_stmt 0 view .LVU307
 1084 0004 0023     		movs	r3, #0
 1085 0006 0193     		str	r3, [sp, #4]
 1086 0008 0293     		str	r3, [sp, #8]
 1087 000a 0393     		str	r3, [sp, #12]
 1088 000c 0493     		str	r3, [sp, #16]
 1089 000e 0593     		str	r3, [sp, #20]
 457:Core/Src/main.c **** 
 1090              		.loc 1 457 3 is_stmt 1 view .LVU308
 457:Core/Src/main.c **** 
 1091              		.loc 1 457 19 is_stmt 0 view .LVU309
 1092 0010 0093     		str	r3, [sp]
 465:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1093              		.loc 1 465 3 is_stmt 1 view .LVU310
 465:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1094              		.loc 1 465 17 is_stmt 0 view .LVU311
 1095 0012 0948     		ldr	r0, .L74
 1096 0014 094A     		ldr	r2, .L74+4
 1097 0016 0260     		str	r2, [r0]
 466:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1098              		.loc 1 466 3 is_stmt 1 view .LVU312
 466:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1099              		.loc 1 466 24 is_stmt 0 view .LVU313
 1100 0018 4360     		str	r3, [r0, #4]
 467:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1101              		.loc 1 467 3 is_stmt 1 view .LVU314
 467:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1102              		.loc 1 467 26 is_stmt 0 view .LVU315
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 56


 1103 001a 7F22     		movs	r2, #127
 1104 001c 8260     		str	r2, [r0, #8]
 468:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1105              		.loc 1 468 3 is_stmt 1 view .LVU316
 468:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1106              		.loc 1 468 25 is_stmt 0 view .LVU317
 1107 001e FF22     		movs	r2, #255
 1108 0020 C260     		str	r2, [r0, #12]
 469:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1109              		.loc 1 469 3 is_stmt 1 view .LVU318
 469:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1110              		.loc 1 469 20 is_stmt 0 view .LVU319
 1111 0022 0361     		str	r3, [r0, #16]
 470:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1112              		.loc 1 470 3 is_stmt 1 view .LVU320
 470:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1113              		.loc 1 470 28 is_stmt 0 view .LVU321
 1114 0024 4361     		str	r3, [r0, #20]
 471:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1115              		.loc 1 471 3 is_stmt 1 view .LVU322
 471:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1116              		.loc 1 471 24 is_stmt 0 view .LVU323
 1117 0026 8361     		str	r3, [r0, #24]
 472:Core/Src/main.c ****   {
 1118              		.loc 1 472 3 is_stmt 1 view .LVU324
 472:Core/Src/main.c ****   {
 1119              		.loc 1 472 7 is_stmt 0 view .LVU325
 1120 0028 FFF7FEFF 		bl	HAL_RTC_Init
 1121              	.LVL58:
 472:Core/Src/main.c ****   {
 1122              		.loc 1 472 6 discriminator 1 view .LVU326
 1123 002c 10B9     		cbnz	r0, .L73
 505:Core/Src/main.c **** 
 1124              		.loc 1 505 1 view .LVU327
 1125 002e 07B0     		add	sp, sp, #28
 1126              		.cfi_remember_state
 1127              		.cfi_def_cfa_offset 4
 1128              		@ sp needed
 1129 0030 5DF804FB 		ldr	pc, [sp], #4
 1130              	.L73:
 1131              		.cfi_restore_state
 474:Core/Src/main.c ****   }
 1132              		.loc 1 474 5 is_stmt 1 view .LVU328
 1133 0034 FFF7FEFF 		bl	Error_Handler
 1134              	.LVL59:
 1135              	.L75:
 1136              		.align	2
 1137              	.L74:
 1138 0038 00000000 		.word	hrtc
 1139 003c 00280040 		.word	1073752064
 1140              		.cfi_endproc
 1141              	.LFE136:
 1143              		.section	.text.SystemClock_Config,"ax",%progbits
 1144              		.align	1
 1145              		.global	SystemClock_Config
 1146              		.syntax unified
 1147              		.thumb
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 57


 1148              		.thumb_func
 1150              	SystemClock_Config:
 1151              	.LFB135:
 402:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1152              		.loc 1 402 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 80
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156 0000 00B5     		push	{lr}
 1157              		.cfi_def_cfa_offset 4
 1158              		.cfi_offset 14, -4
 1159 0002 95B0     		sub	sp, sp, #84
 1160              		.cfi_def_cfa_offset 88
 403:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1161              		.loc 1 403 3 view .LVU330
 403:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1162              		.loc 1 403 22 is_stmt 0 view .LVU331
 1163 0004 3422     		movs	r2, #52
 1164 0006 0021     		movs	r1, #0
 1165 0008 07A8     		add	r0, sp, #28
 1166 000a FFF7FEFF 		bl	memset
 1167              	.LVL60:
 404:Core/Src/main.c **** 
 1168              		.loc 1 404 3 is_stmt 1 view .LVU332
 404:Core/Src/main.c **** 
 1169              		.loc 1 404 22 is_stmt 0 view .LVU333
 1170 000e 0023     		movs	r3, #0
 1171 0010 0293     		str	r3, [sp, #8]
 1172 0012 0393     		str	r3, [sp, #12]
 1173 0014 0493     		str	r3, [sp, #16]
 1174 0016 0593     		str	r3, [sp, #20]
 1175 0018 0693     		str	r3, [sp, #24]
 408:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1176              		.loc 1 408 3 is_stmt 1 view .LVU334
 1177              	.LBB15:
 408:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1178              		.loc 1 408 3 view .LVU335
 1179 001a 0093     		str	r3, [sp]
 408:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1180              		.loc 1 408 3 view .LVU336
 1181 001c 204A     		ldr	r2, .L82
 1182 001e 116C     		ldr	r1, [r2, #64]
 1183 0020 41F08051 		orr	r1, r1, #268435456
 1184 0024 1164     		str	r1, [r2, #64]
 408:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1185              		.loc 1 408 3 view .LVU337
 1186 0026 126C     		ldr	r2, [r2, #64]
 1187 0028 02F08052 		and	r2, r2, #268435456
 1188 002c 0092     		str	r2, [sp]
 408:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1189              		.loc 1 408 3 view .LVU338
 1190 002e 009A     		ldr	r2, [sp]
 1191              	.LBE15:
 408:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1192              		.loc 1 408 3 view .LVU339
 409:Core/Src/main.c **** 
 1193              		.loc 1 409 3 view .LVU340
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 58


 1194              	.LBB16:
 409:Core/Src/main.c **** 
 1195              		.loc 1 409 3 view .LVU341
 1196 0030 0193     		str	r3, [sp, #4]
 409:Core/Src/main.c **** 
 1197              		.loc 1 409 3 view .LVU342
 1198 0032 1C4B     		ldr	r3, .L82+4
 1199 0034 1A68     		ldr	r2, [r3]
 1200 0036 42F44042 		orr	r2, r2, #49152
 1201 003a 1A60     		str	r2, [r3]
 409:Core/Src/main.c **** 
 1202              		.loc 1 409 3 view .LVU343
 1203 003c 1B68     		ldr	r3, [r3]
 1204 003e 03F44043 		and	r3, r3, #49152
 1205 0042 0193     		str	r3, [sp, #4]
 409:Core/Src/main.c **** 
 1206              		.loc 1 409 3 view .LVU344
 1207 0044 019B     		ldr	r3, [sp, #4]
 1208              	.LBE16:
 409:Core/Src/main.c **** 
 1209              		.loc 1 409 3 view .LVU345
 414:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1210              		.loc 1 414 3 view .LVU346
 414:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1211              		.loc 1 414 36 is_stmt 0 view .LVU347
 1212 0046 0523     		movs	r3, #5
 1213 0048 0793     		str	r3, [sp, #28]
 415:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 1214              		.loc 1 415 3 is_stmt 1 view .LVU348
 415:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 1215              		.loc 1 415 30 is_stmt 0 view .LVU349
 1216 004a 4FF48033 		mov	r3, #65536
 1217 004e 0893     		str	r3, [sp, #32]
 416:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1218              		.loc 1 416 3 is_stmt 1 view .LVU350
 416:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1219              		.loc 1 416 30 is_stmt 0 view .LVU351
 1220 0050 0123     		movs	r3, #1
 1221 0052 0993     		str	r3, [sp, #36]
 417:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1222              		.loc 1 417 3 is_stmt 1 view .LVU352
 417:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1223              		.loc 1 417 34 is_stmt 0 view .LVU353
 1224 0054 0223     		movs	r3, #2
 1225 0056 0D93     		str	r3, [sp, #52]
 418:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1226              		.loc 1 418 3 is_stmt 1 view .LVU354
 418:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1227              		.loc 1 418 35 is_stmt 0 view .LVU355
 1228 0058 4FF48002 		mov	r2, #4194304
 1229 005c 0E92     		str	r2, [sp, #56]
 419:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1230              		.loc 1 419 3 is_stmt 1 view .LVU356
 419:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1231              		.loc 1 419 30 is_stmt 0 view .LVU357
 1232 005e 0422     		movs	r2, #4
 1233 0060 0F92     		str	r2, [sp, #60]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 59


 420:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1234              		.loc 1 420 3 is_stmt 1 view .LVU358
 420:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1235              		.loc 1 420 30 is_stmt 0 view .LVU359
 1236 0062 6022     		movs	r2, #96
 1237 0064 1092     		str	r2, [sp, #64]
 421:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1238              		.loc 1 421 3 is_stmt 1 view .LVU360
 421:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1239              		.loc 1 421 30 is_stmt 0 view .LVU361
 1240 0066 1193     		str	r3, [sp, #68]
 422:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1241              		.loc 1 422 3 is_stmt 1 view .LVU362
 422:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1242              		.loc 1 422 30 is_stmt 0 view .LVU363
 1243 0068 1293     		str	r3, [sp, #72]
 423:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1244              		.loc 1 423 3 is_stmt 1 view .LVU364
 423:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1245              		.loc 1 423 30 is_stmt 0 view .LVU365
 1246 006a 1393     		str	r3, [sp, #76]
 424:Core/Src/main.c ****   {
 1247              		.loc 1 424 3 is_stmt 1 view .LVU366
 424:Core/Src/main.c ****   {
 1248              		.loc 1 424 7 is_stmt 0 view .LVU367
 1249 006c 07A8     		add	r0, sp, #28
 1250 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1251              	.LVL61:
 424:Core/Src/main.c ****   {
 1252              		.loc 1 424 6 discriminator 1 view .LVU368
 1253 0072 88B9     		cbnz	r0, .L80
 431:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1254              		.loc 1 431 3 is_stmt 1 view .LVU369
 431:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1255              		.loc 1 431 31 is_stmt 0 view .LVU370
 1256 0074 0F23     		movs	r3, #15
 1257 0076 0293     		str	r3, [sp, #8]
 433:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1258              		.loc 1 433 3 is_stmt 1 view .LVU371
 433:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1259              		.loc 1 433 34 is_stmt 0 view .LVU372
 1260 0078 0223     		movs	r3, #2
 1261 007a 0393     		str	r3, [sp, #12]
 434:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1262              		.loc 1 434 3 is_stmt 1 view .LVU373
 434:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1263              		.loc 1 434 35 is_stmt 0 view .LVU374
 1264 007c 0023     		movs	r3, #0
 1265 007e 0493     		str	r3, [sp, #16]
 435:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1266              		.loc 1 435 3 is_stmt 1 view .LVU375
 435:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1267              		.loc 1 435 36 is_stmt 0 view .LVU376
 1268 0080 4FF48052 		mov	r2, #4096
 1269 0084 0592     		str	r2, [sp, #20]
 436:Core/Src/main.c **** 
 1270              		.loc 1 436 3 is_stmt 1 view .LVU377
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 60


 436:Core/Src/main.c **** 
 1271              		.loc 1 436 36 is_stmt 0 view .LVU378
 1272 0086 0693     		str	r3, [sp, #24]
 438:Core/Src/main.c ****   {
 1273              		.loc 1 438 3 is_stmt 1 view .LVU379
 438:Core/Src/main.c ****   {
 1274              		.loc 1 438 7 is_stmt 0 view .LVU380
 1275 0088 0321     		movs	r1, #3
 1276 008a 02A8     		add	r0, sp, #8
 1277 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1278              	.LVL62:
 438:Core/Src/main.c ****   {
 1279              		.loc 1 438 6 discriminator 1 view .LVU381
 1280 0090 20B9     		cbnz	r0, .L81
 442:Core/Src/main.c **** 
 1281              		.loc 1 442 1 view .LVU382
 1282 0092 15B0     		add	sp, sp, #84
 1283              		.cfi_remember_state
 1284              		.cfi_def_cfa_offset 4
 1285              		@ sp needed
 1286 0094 5DF804FB 		ldr	pc, [sp], #4
 1287              	.L80:
 1288              		.cfi_restore_state
 426:Core/Src/main.c ****   }
 1289              		.loc 1 426 5 is_stmt 1 view .LVU383
 1290 0098 FFF7FEFF 		bl	Error_Handler
 1291              	.LVL63:
 1292              	.L81:
 440:Core/Src/main.c ****   }
 1293              		.loc 1 440 5 view .LVU384
 1294 009c FFF7FEFF 		bl	Error_Handler
 1295              	.LVL64:
 1296              	.L83:
 1297              		.align	2
 1298              	.L82:
 1299 00a0 00380240 		.word	1073887232
 1300 00a4 00700040 		.word	1073770496
 1301              		.cfi_endproc
 1302              	.LFE135:
 1304              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1305              		.align	2
 1306              	.LC1:
 1307 0000 53455420 		.ascii	"SET UP RTC!\000"
 1307      55502052 
 1307      54432100 
 1308              		.align	2
 1309              	.LC2:
 1310 000c 00       		.ascii	"\000"
 1311 000d 000000   		.align	2
 1312              	.LC3:
 1313 0010 256400   		.ascii	"%d\000"
 1314 0013 00       		.align	2
 1315              	.LC4:
 1316 0014 696E6974 		.ascii	"init_%02d-%02d-%02d_%02d-%02d-%2d.txt\000"
 1316      5F253032 
 1316      642D2530 
 1316      32642D25 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 61


 1316      3032645F 
 1317 003a 0000     		.align	2
 1318              	.LC5:
 1319 003c 4445563A 		.ascii	"DEV: %d\012Min/Max: %d/%d\012Dev type: %d\012\012\000"
 1319      2025640A 
 1319      4D696E2F 
 1319      4D61783A 
 1319      2025642F 
 1320 0062 0000     		.align	2
 1321              	.LC6:
 1322 0064 4445563A 		.ascii	"DEV: empty\012\012\000"
 1322      20656D70 
 1322      74790A0A 
 1322      00
 1323              		.section	.text.main,"ax",%progbits
 1324              		.align	1
 1325              		.global	main
 1326              		.syntax unified
 1327              		.thumb
 1328              		.thumb_func
 1330              	main:
 1331              	.LFB134:
 135:Core/Src/main.c **** 
 1332              		.loc 1 135 1 view -0
 1333              		.cfi_startproc
 1334              		@ args = 0, pretend = 0, frame = 8416
 1335              		@ frame_needed = 0, uses_anonymous_args = 0
 1336 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1337              		.cfi_def_cfa_offset 28
 1338              		.cfi_offset 4, -28
 1339              		.cfi_offset 5, -24
 1340              		.cfi_offset 6, -20
 1341              		.cfi_offset 7, -16
 1342              		.cfi_offset 8, -12
 1343              		.cfi_offset 9, -8
 1344              		.cfi_offset 14, -4
 1345 0004 ADF5035D 		sub	sp, sp, #8384
 1346              		.cfi_def_cfa_offset 8412
 1347 0008 8DB0     		sub	sp, sp, #52
 1348              		.cfi_def_cfa_offset 8464
 144:Core/Src/main.c **** 
 1349              		.loc 1 144 3 view .LVU386
 1350 000a FFF7FEFF 		bl	HAL_Init
 1351              	.LVL65:
 148:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);
 1352              		.loc 1 148 3 view .LVU387
 1353 000e AF4C     		ldr	r4, .L115
 1354 0010 0421     		movs	r1, #4
 1355 0012 2046     		mov	r0, r4
 1356 0014 FFF7FEFF 		bl	gpio_SetGPIOmode_Out
 1357              	.LVL66:
 149:Core/Src/main.c **** 	HAL_Delay(100);
 1358              		.loc 1 149 3 view .LVU388
 1359 0018 0022     		movs	r2, #0
 1360 001a 0421     		movs	r1, #4
 1361 001c 2046     		mov	r0, r4
 1362 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 62


 1363              	.LVL67:
 150:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
 1364              		.loc 1 150 2 view .LVU389
 1365 0022 6420     		movs	r0, #100
 1366 0024 FFF7FEFF 		bl	HAL_Delay
 1367              	.LVL68:
 151:Core/Src/main.c **** 
 1368              		.loc 1 151 3 view .LVU390
 1369 0028 0122     		movs	r2, #1
 1370 002a 0421     		movs	r1, #4
 1371 002c 2046     		mov	r0, r4
 1372 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1373              	.LVL69:
 160:Core/Src/main.c **** 
 1374              		.loc 1 160 3 view .LVU391
 1375 0032 FFF7FEFF 		bl	SystemClock_Config
 1376              	.LVL70:
 167:Core/Src/main.c ****   MX_DMA_Init();
 1377              		.loc 1 167 3 view .LVU392
 1378 0036 FFF7FEFF 		bl	MX_GPIO_Init
 1379              	.LVL71:
 168:Core/Src/main.c ****   MX_SPI1_Init();
 1380              		.loc 1 168 3 view .LVU393
 1381 003a FFF7FEFF 		bl	MX_DMA_Init
 1382              	.LVL72:
 169:Core/Src/main.c ****   MX_UART5_Init();
 1383              		.loc 1 169 3 view .LVU394
 1384 003e FFF7FEFF 		bl	MX_SPI1_Init
 1385              	.LVL73:
 170:Core/Src/main.c ****   MX_USART6_UART_Init();
 1386              		.loc 1 170 3 view .LVU395
 1387 0042 FFF7FEFF 		bl	MX_UART5_Init
 1388              	.LVL74:
 171:Core/Src/main.c ****   MX_SPI2_Init();
 1389              		.loc 1 171 3 view .LVU396
 1390 0046 FFF7FEFF 		bl	MX_USART6_UART_Init
 1391              	.LVL75:
 172:Core/Src/main.c ****   MX_FATFS_Init();
 1392              		.loc 1 172 3 view .LVU397
 1393 004a FFF7FEFF 		bl	MX_SPI2_Init
 1394              	.LVL76:
 173:Core/Src/main.c ****   MX_RTC_Init();
 1395              		.loc 1 173 3 view .LVU398
 1396 004e FFF7FEFF 		bl	MX_FATFS_Init
 1397              	.LVL77:
 174:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1398              		.loc 1 174 3 view .LVU399
 1399 0052 FFF7FEFF 		bl	MX_RTC_Init
 1400              	.LVL78:
 179:Core/Src/main.c ****   HAL_Delay(200);
 1401              		.loc 1 179 3 view .LVU400
 1402 0056 A4F58064 		sub	r4, r4, #1024
 1403 005a 0122     		movs	r2, #1
 1404 005c 4FF40051 		mov	r1, #8192
 1405 0060 2046     		mov	r0, r4
 1406 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1407              	.LVL79:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 63


 180:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1408              		.loc 1 180 3 view .LVU401
 1409 0066 C820     		movs	r0, #200
 1410 0068 FFF7FEFF 		bl	HAL_Delay
 1411              	.LVL80:
 181:Core/Src/main.c **** 
 1412              		.loc 1 181 2 view .LVU402
 1413 006c 0022     		movs	r2, #0
 1414 006e 4FF40051 		mov	r1, #8192
 1415 0072 2046     		mov	r0, r4
 1416 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1417              	.LVL81:
 183:Core/Src/main.c **** 
 1418              		.loc 1 183 2 view .LVU403
 1419 0078 F021     		movs	r1, #240
 1420 007a 0846     		mov	r0, r1
 1421 007c FFF7FEFF 		bl	dispcolor_Init
 1422              	.LVL82:
 185:Core/Src/main.c ****   uint32_t screen_disp_time = HAL_GetTick();
 1423              		.loc 1 185 2 view .LVU404
 185:Core/Src/main.c ****   uint32_t screen_disp_time = HAL_GetTick();
 1424              		.loc 1 185 30 is_stmt 0 view .LVU405
 1425 0080 FFF7FEFF 		bl	HAL_GetTick
 1426              	.LVL83:
 1427 0084 0546     		mov	r5, r0
 1428              	.LVL84:
 186:Core/Src/main.c ****   uint32_t hold_timeout = HAL_GetTick();
 1429              		.loc 1 186 3 is_stmt 1 view .LVU406
 186:Core/Src/main.c ****   uint32_t hold_timeout = HAL_GetTick();
 1430              		.loc 1 186 31 is_stmt 0 view .LVU407
 1431 0086 FFF7FEFF 		bl	HAL_GetTick
 1432              	.LVL85:
 186:Core/Src/main.c ****   uint32_t hold_timeout = HAL_GetTick();
 1433              		.loc 1 186 31 view .LVU408
 1434 008a 0446     		mov	r4, r0
 1435              	.LVL86:
 187:Core/Src/main.c **** 
 1436              		.loc 1 187 3 is_stmt 1 view .LVU409
 187:Core/Src/main.c **** 
 1437              		.loc 1 187 27 is_stmt 0 view .LVU410
 1438 008c FFF7FEFF 		bl	HAL_GetTick
 1439              	.LVL87:
 187:Core/Src/main.c **** 
 1440              		.loc 1 187 27 view .LVU411
 1441 0090 0646     		mov	r6, r0
 1442              	.LVL88:
 189:Core/Src/main.c ****   uint32_t txtmr = HAL_GetTick();
 1443              		.loc 1 189 3 is_stmt 1 view .LVU412
 189:Core/Src/main.c ****   uint32_t txtmr = HAL_GetTick();
 1444              		.loc 1 189 21 is_stmt 0 view .LVU413
 1445 0092 FFF7FEFF 		bl	HAL_GetTick
 1446              	.LVL89:
 190:Core/Src/main.c ****   
 1447              		.loc 1 190 3 is_stmt 1 view .LVU414
 190:Core/Src/main.c ****   
 1448              		.loc 1 190 20 is_stmt 0 view .LVU415
 1449 0096 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 64


 1450              	.LVL90:
 192:Core/Src/main.c **** 
 1451              		.loc 1 192 3 is_stmt 1 view .LVU416
 196:Core/Src/main.c ****   RTC_TimeTypeDef gTime;
 1452              		.loc 1 196 3 view .LVU417
 197:Core/Src/main.c **** 
 1453              		.loc 1 197 3 view .LVU418
 200:Core/Src/main.c ****   /* Get the RTC current Date */
 1454              		.loc 1 200 3 view .LVU419
 1455 009a 8D4F     		ldr	r7, .L115+4
 1456 009c 0022     		movs	r2, #0
 1457 009e 0DF50351 		add	r1, sp, #8384
 1458 00a2 1831     		adds	r1, r1, #24
 1459 00a4 3846     		mov	r0, r7
 1460 00a6 FFF7FEFF 		bl	HAL_RTC_GetTime
 1461              	.LVL91:
 202:Core/Src/main.c ****   
 1462              		.loc 1 202 3 view .LVU420
 1463 00aa 0022     		movs	r2, #0
 1464 00ac 0DF50351 		add	r1, sp, #8384
 1465 00b0 2C31     		adds	r1, r1, #44
 1466 00b2 3846     		mov	r0, r7
 1467 00b4 FFF7FEFF 		bl	HAL_RTC_GetDate
 1468              	.LVL92:
 204:Core/Src/main.c ****     Show_Message("SET UP RTC!", 1000);
 1469              		.loc 1 204 3 view .LVU421
 204:Core/Src/main.c ****     Show_Message("SET UP RTC!", 1000);
 1470              		.loc 1 204 11 is_stmt 0 view .LVU422
 1471 00b8 0DF50353 		add	r3, sp, #8384
 1472 00bc 2F33     		adds	r3, r3, #47
 1473 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 204:Core/Src/main.c ****     Show_Message("SET UP RTC!", 1000);
 1474              		.loc 1 204 5 view .LVU423
 1475 00c0 73B1     		cbz	r3, .L110
 1476              	.L85:
 211:Core/Src/main.c ****   FRESULT FR_Status;
 1477              		.loc 1 211 3 is_stmt 1 view .LVU424
 212:Core/Src/main.c ****   FIL Fil;
 1478              		.loc 1 212 3 view .LVU425
 213:Core/Src/main.c ****   UINT bytesWrote;
 1479              		.loc 1 213 3 view .LVU426
 214:Core/Src/main.c **** 
 1480              		.loc 1 214 3 view .LVU427
 216:Core/Src/main.c ****   if (FR_Status == FR_OK){
 1481              		.loc 1 216 3 view .LVU428
 216:Core/Src/main.c ****   if (FR_Status == FR_OK){
 1482              		.loc 1 216 15 is_stmt 0 view .LVU429
 1483 00c2 0122     		movs	r2, #1
 1484 00c4 8349     		ldr	r1, .L115+8
 1485 00c6 0DF58550 		add	r0, sp, #4256
 1486 00ca FFF7FEFF 		bl	f_mount
 1487              	.LVL93:
 217:Core/Src/main.c ****     isSDInitialised = true;
 1488              		.loc 1 217 3 is_stmt 1 view .LVU430
 217:Core/Src/main.c ****     isSDInitialised = true;
 1489              		.loc 1 217 6 is_stmt 0 view .LVU431
 1490 00ce 10B9     		cbnz	r0, .L86
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 65


 218:Core/Src/main.c ****   }
 1491              		.loc 1 218 5 is_stmt 1 view .LVU432
 218:Core/Src/main.c ****   }
 1492              		.loc 1 218 21 is_stmt 0 view .LVU433
 1493 00d0 814B     		ldr	r3, .L115+12
 1494 00d2 0122     		movs	r2, #1
 1495 00d4 1A70     		strb	r2, [r3]
 1496              	.L86:
 222:Core/Src/main.c ****   /* USER CODE END 2 */
 1497              		.loc 1 222 3 is_stmt 1 view .LVU434
 222:Core/Src/main.c ****   /* USER CODE END 2 */
 1498              		.loc 1 222 28 is_stmt 0 view .LVU435
 1499 00d6 814B     		ldr	r3, .L115+16
 1500 00d8 5422     		movs	r2, #84
 1501 00da DA76     		strb	r2, [r3, #27]
 192:Core/Src/main.c **** 
 1502              		.loc 1 192 11 view .LVU436
 1503 00dc 0027     		movs	r7, #0
 1504 00de 16E1     		b	.L87
 1505              	.LVL94:
 1506              	.L110:
 205:Core/Src/main.c ****   }
 1507              		.loc 1 205 5 is_stmt 1 view .LVU437
 1508 00e0 4FF47A71 		mov	r1, #1000
 1509 00e4 7E48     		ldr	r0, .L115+20
 1510 00e6 FFF7FEFF 		bl	Show_Message
 1511              	.LVL95:
 1512 00ea EAE7     		b	.L85
 1513              	.LVL96:
 1514              	.L88:
 242:Core/Src/main.c ****       if(!transmitMode){
 1515              		.loc 1 242 7 view .LVU438
 242:Core/Src/main.c ****       if(!transmitMode){
 1516              		.loc 1 242 31 is_stmt 0 view .LVU439
 1517 00ec 7D4B     		ldr	r3, .L115+24
 1518 00ee 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242:Core/Src/main.c ****       if(!transmitMode){
 1519              		.loc 1 242 7 view .LVU440
 1520 00f0 00EB8000 		add	r0, r0, r0, lsl #2
 1521 00f4 794B     		ldr	r3, .L115+16
 1522 00f6 03EBC000 		add	r0, r3, r0, lsl #3
 1523 00fa FFF7FEFF 		bl	Dispaly_Data
 1524              	.LVL97:
 243:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 1525              		.loc 1 243 7 is_stmt 1 view .LVU441
 243:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 1526              		.loc 1 243 10 is_stmt 0 view .LVU442
 1527 00fe 7A4B     		ldr	r3, .L115+28
 1528 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 243:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 1529              		.loc 1 243 9 view .LVU443
 1530 0102 83B9     		cbnz	r3, .L90
 244:Core/Src/main.c ****       }else{
 1531              		.loc 1 244 9 is_stmt 1 view .LVU444
 1532 0104 774B     		ldr	r3, .L115+24
 1533 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244:Core/Src/main.c ****       }else{
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 66


 1534              		.loc 1 244 76 is_stmt 0 view .LVU445
 1535 0108 03EB8301 		add	r1, r3, r3, lsl #2
 1536 010c C900     		lsls	r1, r1, #3
 1537 010e 1831     		adds	r1, r1, #24
 1538 0110 7248     		ldr	r0, .L115+16
 1539 0112 0144     		add	r1, r1, r0
 244:Core/Src/main.c ****       }else{
 1540              		.loc 1 244 9 view .LVU446
 1541 0114 03EB8303 		add	r3, r3, r3, lsl #2
 1542 0118 0A22     		movs	r2, #10
 1543 011a 0331     		adds	r1, r1, #3
 1544 011c 50F83300 		ldr	r0, [r0, r3, lsl #3]
 1545 0120 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 1546              	.LVL98:
 1547 0124 1FE1     		b	.L89
 1548              	.L90:
 1549              	.LBB17:
 246:Core/Src/main.c ****         sprintf(setValueTx, "%d", deviceList[dev_num].setValue);
 1550              		.loc 1 246 9 is_stmt 1 view .LVU447
 247:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, setValueTx, 10);
 1551              		.loc 1 247 9 view .LVU448
 247:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, setValueTx, 10);
 1552              		.loc 1 247 54 is_stmt 0 view .LVU449
 1553 0126 DFF8B481 		ldr	r8, .L115+16
 1554 012a DFF8B891 		ldr	r9, .L115+24
 1555 012e 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 1556 0132 03EB8303 		add	r3, r3, r3, lsl #2
 1557 0136 08EBC303 		add	r3, r8, r3, lsl #3
 247:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, setValueTx, 10);
 1558              		.loc 1 247 9 view .LVU450
 1559 013a 1A89     		ldrh	r2, [r3, #8]
 1560 013c 6B49     		ldr	r1, .L115+32
 1561 013e 0EA8     		add	r0, sp, #56
 1562 0140 FFF7FEFF 		bl	sprintf
 1563              	.LVL99:
 248:Core/Src/main.c ****       }
 1564              		.loc 1 248 9 is_stmt 1 view .LVU451
 1565 0144 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 1566 0148 03EB8303 		add	r3, r3, r3, lsl #2
 1567 014c 0A22     		movs	r2, #10
 1568 014e 0EA9     		add	r1, sp, #56
 1569 0150 58F83300 		ldr	r0, [r8, r3, lsl #3]
 1570 0154 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 1571              	.LVL100:
 1572 0158 05E1     		b	.L89
 1573              	.L111:
 248:Core/Src/main.c ****       }
 1574              		.loc 1 248 9 is_stmt 0 view .LVU452
 1575              	.LBE17:
 256:Core/Src/main.c ****       }else{
 1576              		.loc 1 256 9 is_stmt 1 view .LVU453
 256:Core/Src/main.c ****       }else{
 1577              		.loc 1 256 16 is_stmt 0 view .LVU454
 1578 015a 08F10103 		add	r3, r8, #1
 1579 015e 614A     		ldr	r2, .L115+24
 1580 0160 1370     		strb	r3, [r2]
 1581 0162 0FE1     		b	.L92
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 67


 1582              	.L112:
 276:Core/Src/main.c ****       // state = STATE_800INIT;
 1583              		.loc 1 276 38 discriminator 1 view .LVU455
 1584 0164 624B     		ldr	r3, .L115+36
 1585 0166 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 276:Core/Src/main.c ****       // state = STATE_800INIT;
 1586              		.loc 1 276 29 discriminator 1 view .LVU456
 1587 016a B8F1000F 		cmp	r8, #0
 1588 016e 40F01581 		bne	.L93
 1589              	.LBB18:
 278:Core/Src/main.c ****       simtmr = HAL_GetTick();
 1590              		.loc 1 278 7 is_stmt 1 view .LVU457
 278:Core/Src/main.c ****       simtmr = HAL_GetTick();
 1591              		.loc 1 278 13 is_stmt 0 view .LVU458
 1592 0172 0122     		movs	r2, #1
 1593 0174 1A70     		strb	r2, [r3]
 279:Core/Src/main.c ****       dev_num = 0;
 1594              		.loc 1 279 7 is_stmt 1 view .LVU459
 279:Core/Src/main.c ****       dev_num = 0;
 1595              		.loc 1 279 16 is_stmt 0 view .LVU460
 1596 0176 FFF7FEFF 		bl	HAL_GetTick
 1597              	.LVL101:
 280:Core/Src/main.c ****       
 1598              		.loc 1 280 7 is_stmt 1 view .LVU461
 280:Core/Src/main.c ****       
 1599              		.loc 1 280 15 is_stmt 0 view .LVU462
 1600 017a 5A4B     		ldr	r3, .L115+24
 1601 017c 0022     		movs	r2, #0
 1602 017e 1A70     		strb	r2, [r3]
 283:Core/Src/main.c ****       uint8_t buf_len;
 1603              		.loc 1 283 7 is_stmt 1 view .LVU463
 284:Core/Src/main.c ****       sprintf(filename_buff, "init_%02d-%02d-%02d_%02d-%02d-%2d.txt", gTime.Hours, gTime.Minutes, g
 1604              		.loc 1 284 7 view .LVU464
 285:Core/Src/main.c ****       FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1605              		.loc 1 285 7 view .LVU465
 285:Core/Src/main.c ****       FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1606              		.loc 1 285 104 is_stmt 0 view .LVU466
 1607 0180 0DF50353 		add	r3, sp, #8384
 1608 0184 1A33     		adds	r3, r3, #26
 1609 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 285:Core/Src/main.c ****       FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1610              		.loc 1 285 119 view .LVU467
 1611 0188 0DF50352 		add	r2, sp, #8384
 1612 018c 2E32     		adds	r2, r2, #46
 1613 018e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 285:Core/Src/main.c ****       FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1614              		.loc 1 285 131 view .LVU468
 1615 0190 0DF50351 		add	r1, sp, #8384
 1616 0194 2D31     		adds	r1, r1, #45
 1617 0196 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 285:Core/Src/main.c ****       FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1618              		.loc 1 285 144 view .LVU469
 1619 0198 0DF50350 		add	r0, sp, #8384
 1620 019c 2F30     		adds	r0, r0, #47
 1621 019e 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 285:Core/Src/main.c ****       FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1622              		.loc 1 285 7 view .LVU470
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 68


 1623 01a0 0390     		str	r0, [sp, #12]
 1624 01a2 0291     		str	r1, [sp, #8]
 1625 01a4 0192     		str	r2, [sp, #4]
 1626 01a6 0093     		str	r3, [sp]
 1627 01a8 0DF50353 		add	r3, sp, #8384
 1628 01ac 1933     		adds	r3, r3, #25
 1629 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1630 01b0 0DF50352 		add	r2, sp, #8384
 1631 01b4 1832     		adds	r2, r2, #24
 1632 01b6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1633 01b8 4E49     		ldr	r1, .L115+40
 1634 01ba 05A8     		add	r0, sp, #20
 1635 01bc FFF7FEFF 		bl	sprintf
 1636              	.LVL102:
 286:Core/Src/main.c ****       for (uint8_t i = 0; i < DEV_COUNT; i++){
 1637              		.loc 1 286 7 is_stmt 1 view .LVU471
 286:Core/Src/main.c ****       for (uint8_t i = 0; i < DEV_COUNT; i++){
 1638              		.loc 1 286 19 is_stmt 0 view .LVU472
 1639 01c0 1A22     		movs	r2, #26
 1640 01c2 05A9     		add	r1, sp, #20
 1641 01c4 1CA8     		add	r0, sp, #112
 1642 01c6 FFF7FEFF 		bl	f_open
 1643              	.LVL103:
 287:Core/Src/main.c ****         char init_file_buf[50];
 1644              		.loc 1 287 7 is_stmt 1 view .LVU473
 1645              	.LBB19:
 287:Core/Src/main.c ****         char init_file_buf[50];
 1646              		.loc 1 287 12 view .LVU474
 1647              	.L94:
 287:Core/Src/main.c ****         char init_file_buf[50];
 1648              		.loc 1 287 29 discriminator 1 view .LVU475
 1649 01ca B8F1000F 		cmp	r8, #0
 1650 01ce 03D0     		beq	.L97
 1651              	.LBE19:
 296:Core/Src/main.c ****       // SAVE CONFIG
 1652              		.loc 1 296 7 view .LVU476
 1653 01d0 1CA8     		add	r0, sp, #112
 1654 01d2 FFF7FEFF 		bl	f_close
 1655              	.LVL104:
 1656 01d6 E1E0     		b	.L93
 1657              	.L97:
 1658              	.LBB22:
 1659              	.LBB20:
 288:Core/Src/main.c ****         if(deviceList[i].initState == DEV_STATE_IN){
 1660              		.loc 1 288 9 view .LVU477
 289:Core/Src/main.c ****           buf_len = sprintf(init_file_buf, "DEV: %d\nMin/Max: %d/%d\nDev type: %d\n\n", i, deviceLi
 1661              		.loc 1 289 9 view .LVU478
 289:Core/Src/main.c ****           buf_len = sprintf(init_file_buf, "DEV: %d\nMin/Max: %d/%d\nDev type: %d\n\n", i, deviceLi
 1662              		.loc 1 289 25 is_stmt 0 view .LVU479
 1663 01d8 08EB8802 		add	r2, r8, r8, lsl #2
 1664 01dc 3F4B     		ldr	r3, .L115+16
 1665 01de 03EBC203 		add	r3, r3, r2, lsl #3
 1666 01e2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 289:Core/Src/main.c ****           buf_len = sprintf(init_file_buf, "DEV: %d\nMin/Max: %d/%d\nDev type: %d\n\n", i, deviceLi
 1667              		.loc 1 289 11 view .LVU480
 1668 01e4 BBB1     		cbz	r3, .L95
 290:Core/Src/main.c ****         }else{
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 69


 1669              		.loc 1 290 11 is_stmt 1 view .LVU481
 290:Core/Src/main.c ****         }else{
 1670              		.loc 1 290 105 is_stmt 0 view .LVU482
 1671 01e6 3D4B     		ldr	r3, .L115+16
 1672 01e8 03EBC203 		add	r3, r3, r2, lsl #3
 290:Core/Src/main.c ****         }else{
 1673              		.loc 1 290 129 view .LVU483
 1674 01ec 9A89     		ldrh	r2, [r3, #12]
 290:Core/Src/main.c ****         }else{
 1675              		.loc 1 290 153 view .LVU484
 1676 01ee 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
 290:Core/Src/main.c ****         }else{
 1677              		.loc 1 290 21 view .LVU485
 1678 01f0 0191     		str	r1, [sp, #4]
 1679 01f2 0092     		str	r2, [sp]
 1680 01f4 5B89     		ldrh	r3, [r3, #10]
 1681 01f6 4246     		mov	r2, r8
 1682 01f8 3F49     		ldr	r1, .L115+44
 1683 01fa 0EA8     		add	r0, sp, #56
 1684 01fc FFF7FEFF 		bl	sprintf
 1685              	.LVL105:
 290:Core/Src/main.c ****         }else{
 1686              		.loc 1 290 19 discriminator 1 view .LVU486
 1687 0200 C2B2     		uxtb	r2, r0
 1688              	.LVL106:
 1689              	.L96:
 294:Core/Src/main.c ****       }
 1690              		.loc 1 294 9 is_stmt 1 view .LVU487
 294:Core/Src/main.c ****       }
 1691              		.loc 1 294 21 is_stmt 0 view .LVU488
 1692 0202 1BAB     		add	r3, sp, #108
 1693 0204 0EA9     		add	r1, sp, #56
 1694 0206 1CA8     		add	r0, sp, #112
 1695 0208 FFF7FEFF 		bl	f_write
 1696              	.LVL107:
 294:Core/Src/main.c ****       }
 1697              		.loc 1 294 21 view .LVU489
 1698              	.LBE20:
 287:Core/Src/main.c ****         char init_file_buf[50];
 1699              		.loc 1 287 43 is_stmt 1 discriminator 2 view .LVU490
 1700 020c 08F10108 		add	r8, r8, #1
 1701              	.LVL108:
 287:Core/Src/main.c ****         char init_file_buf[50];
 1702              		.loc 1 287 43 is_stmt 0 discriminator 2 view .LVU491
 1703 0210 5FFA88F8 		uxtb	r8, r8
 1704              	.LVL109:
 287:Core/Src/main.c ****         char init_file_buf[50];
 1705              		.loc 1 287 43 discriminator 2 view .LVU492
 1706 0214 D9E7     		b	.L94
 1707              	.LVL110:
 1708              	.L95:
 1709              	.LBB21:
 292:Core/Src/main.c ****         }
 1710              		.loc 1 292 11 is_stmt 1 view .LVU493
 292:Core/Src/main.c ****         }
 1711              		.loc 1 292 21 is_stmt 0 view .LVU494
 1712 0216 394B     		ldr	r3, .L115+48
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 70


 1713 0218 0DF1380C 		add	ip, sp, #56
 1714 021c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1715 021e ACE80700 		stmia	ip!, {r0, r1, r2}
 1716 0222 8CF80030 		strb	r3, [ip]
 1717              	.LVL111:
 292:Core/Src/main.c ****         }
 1718              		.loc 1 292 19 discriminator 1 view .LVU495
 1719 0226 0C22     		movs	r2, #12
 1720 0228 EBE7     		b	.L96
 1721              	.LVL112:
 1722              	.L100:
 292:Core/Src/main.c ****         }
 1723              		.loc 1 292 19 discriminator 1 view .LVU496
 1724              	.LBE21:
 1725              	.LBE22:
 1726              	.LBE18:
 304:Core/Src/main.c ****           if(dev_num < DEV_COUNT-1){
 1727              		.loc 1 304 9 is_stmt 1 view .LVU497
 305:Core/Src/main.c ****             dev_num++;
 1728              		.loc 1 305 11 view .LVU498
 308:Core/Src/main.c ****           }
 1729              		.loc 1 308 13 view .LVU499
 308:Core/Src/main.c ****           }
 1730              		.loc 1 308 20 is_stmt 0 view .LVU500
 1731 022a 2E4B     		ldr	r3, .L115+24
 1732 022c 0022     		movs	r2, #0
 1733 022e 1A70     		strb	r2, [r3]
 310:Core/Src/main.c ****       }
 1734              		.loc 1 310 17 is_stmt 1 view .LVU501
 310:Core/Src/main.c ****       }
 1735              		.loc 1 310 37 is_stmt 0 view .LVU502
 1736 0230 2A4B     		ldr	r3, .L115+16
 1737 0232 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 310:Core/Src/main.c ****       }
 1738              		.loc 1 310 17 view .LVU503
 1739 0234 002B     		cmp	r3, #0
 1740 0236 F8D0     		beq	.L100
 1741 0238 BFE0     		b	.L99
 1742              	.L113:
 323:Core/Src/main.c ****       if(screen_scroll_mode == SCROLL_MODE_AUTO){
 1743              		.loc 1 323 7 is_stmt 1 view .LVU504
 323:Core/Src/main.c ****       if(screen_scroll_mode == SCROLL_MODE_AUTO){
 1744              		.loc 1 323 26 is_stmt 0 view .LVU505
 1745 023a FFF7FEFF 		bl	HAL_GetTick
 1746              	.LVL113:
 1747 023e 0446     		mov	r4, r0
 1748              	.LVL114:
 324:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 1749              		.loc 1 324 7 is_stmt 1 view .LVU506
 324:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 1750              		.loc 1 324 29 is_stmt 0 view .LVU507
 1751 0240 2F4B     		ldr	r3, .L115+52
 1752 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 324:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 1753              		.loc 1 324 9 view .LVU508
 1754 0244 1BB9     		cbnz	r3, .L102
 325:Core/Src/main.c ****       }else{
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 71


 1755              		.loc 1 325 9 is_stmt 1 view .LVU509
 325:Core/Src/main.c ****       }else{
 1756              		.loc 1 325 28 is_stmt 0 view .LVU510
 1757 0246 2E4B     		ldr	r3, .L115+52
 1758 0248 0122     		movs	r2, #1
 1759 024a 1A70     		strb	r2, [r3]
 1760 024c C3E0     		b	.L101
 1761              	.L102:
 327:Core/Src/main.c ****       }
 1762              		.loc 1 327 9 is_stmt 1 view .LVU511
 327:Core/Src/main.c ****       }
 1763              		.loc 1 327 28 is_stmt 0 view .LVU512
 1764 024e 2C4B     		ldr	r3, .L115+52
 1765 0250 0022     		movs	r2, #0
 1766 0252 1A70     		strb	r2, [r3]
 1767 0254 BFE0     		b	.L101
 1768              	.LVL115:
 1769              	.L114:
 357:Core/Src/main.c ****         if(deviceList[dev_num].setValue+5<deviceList[dev_num].maxValue){
 1770              		.loc 1 357 7 is_stmt 1 view .LVU513
 357:Core/Src/main.c ****         if(deviceList[dev_num].setValue+5<deviceList[dev_num].maxValue){
 1771              		.loc 1 357 10 is_stmt 0 view .LVU514
 1772 0256 2B48     		ldr	r0, .L115+56
 1773 0258 FFF7FEFF 		bl	isRight
 1774              	.LVL116:
 357:Core/Src/main.c ****         if(deviceList[dev_num].setValue+5<deviceList[dev_num].maxValue){
 1775              		.loc 1 357 9 discriminator 1 view .LVU515
 1776 025c 88B1     		cbz	r0, .L104
 358:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 1777              		.loc 1 358 9 is_stmt 1 view .LVU516
 358:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 1778              		.loc 1 358 31 is_stmt 0 view .LVU517
 1779 025e 214B     		ldr	r3, .L115+24
 1780 0260 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1781 0262 02EB8201 		add	r1, r2, r2, lsl #2
 1782 0266 1D4B     		ldr	r3, .L115+16
 1783 0268 03EBC103 		add	r3, r3, r1, lsl #3
 1784 026c 1989     		ldrh	r1, [r3, #8]
 358:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 1785              		.loc 1 358 40 view .LVU518
 1786 026e 481D     		adds	r0, r1, #5
 358:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 1787              		.loc 1 358 62 view .LVU519
 1788 0270 9B89     		ldrh	r3, [r3, #12]
 358:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 1789              		.loc 1 358 11 view .LVU520
 1790 0272 9842     		cmp	r0, r3
 1791 0274 05DA     		bge	.L104
 359:Core/Src/main.c ****         }
 1792              		.loc 1 359 11 is_stmt 1 view .LVU521
 359:Core/Src/main.c ****         }
 1793              		.loc 1 359 40 is_stmt 0 view .LVU522
 1794 0276 02EB8202 		add	r2, r2, r2, lsl #2
 1795 027a 184B     		ldr	r3, .L115+16
 1796 027c 03EBC203 		add	r3, r3, r2, lsl #3
 1797 0280 1881     		strh	r0, [r3, #8]	@ movhi
 1798              	.L104:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 72


 362:Core/Src/main.c ****         if(deviceList[dev_num].setValue-5>deviceList[dev_num].minValue){
 1799              		.loc 1 362 7 is_stmt 1 view .LVU523
 362:Core/Src/main.c ****         if(deviceList[dev_num].setValue-5>deviceList[dev_num].minValue){
 1800              		.loc 1 362 10 is_stmt 0 view .LVU524
 1801 0282 2048     		ldr	r0, .L115+56
 1802 0284 FFF7FEFF 		bl	isLeft
 1803              	.LVL117:
 362:Core/Src/main.c ****         if(deviceList[dev_num].setValue-5>deviceList[dev_num].minValue){
 1804              		.loc 1 362 9 discriminator 1 view .LVU525
 1805 0288 0028     		cmp	r0, #0
 1806 028a 00F0AF80 		beq	.L103
 363:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 1807              		.loc 1 363 9 is_stmt 1 view .LVU526
 363:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 1808              		.loc 1 363 31 is_stmt 0 view .LVU527
 1809 028e 154B     		ldr	r3, .L115+24
 1810 0290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1811 0292 02EB8201 		add	r1, r2, r2, lsl #2
 1812 0296 114B     		ldr	r3, .L115+16
 1813 0298 03EBC103 		add	r3, r3, r1, lsl #3
 1814 029c 1989     		ldrh	r1, [r3, #8]
 363:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 1815              		.loc 1 363 40 view .LVU528
 1816 029e 481F     		subs	r0, r1, #5
 363:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 1817              		.loc 1 363 62 view .LVU529
 1818 02a0 5B89     		ldrh	r3, [r3, #10]
 363:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 1819              		.loc 1 363 11 view .LVU530
 1820 02a2 9842     		cmp	r0, r3
 1821 02a4 40F3A280 		ble	.L103
 364:Core/Src/main.c ****         }
 1822              		.loc 1 364 11 is_stmt 1 view .LVU531
 364:Core/Src/main.c ****         }
 1823              		.loc 1 364 40 is_stmt 0 view .LVU532
 1824 02a8 02EB8202 		add	r2, r2, r2, lsl #2
 1825 02ac 0B4B     		ldr	r3, .L115+16
 1826 02ae 03EBC203 		add	r3, r3, r2, lsl #3
 1827 02b2 1881     		strh	r0, [r3, #8]	@ movhi
 1828 02b4 9AE0     		b	.L103
 1829              	.LVL118:
 1830              	.L106:
 379:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_NORMAL;
 1831              		.loc 1 379 9 is_stmt 1 view .LVU533
 379:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_NORMAL;
 1832              		.loc 1 379 22 is_stmt 0 view .LVU534
 1833 02b6 0C4A     		ldr	r2, .L115+28
 1834 02b8 0121     		movs	r1, #1
 1835 02ba 1170     		strb	r1, [r2]
 380:Core/Src/main.c ****       }
 1836              		.loc 1 380 9 is_stmt 1 view .LVU535
 380:Core/Src/main.c ****       }
 1837              		.loc 1 380 47 is_stmt 0 view .LVU536
 1838 02bc 03EB8303 		add	r3, r3, r3, lsl #2
 1839 02c0 064A     		ldr	r2, .L115+16
 1840 02c2 02EBC303 		add	r3, r2, r3, lsl #3
 1841 02c6 0022     		movs	r2, #0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 73


 1842 02c8 DA73     		strb	r2, [r3, #15]
 1843 02ca B3E0     		b	.L107
 1844              	.L116:
 1845              		.align	2
 1846              	.L115:
 1847 02cc 000C0240 		.word	1073875968
 1848 02d0 00000000 		.word	hrtc
 1849 02d4 0C000000 		.word	.LC2
 1850 02d8 00000000 		.word	isSDInitialised
 1851 02dc 00000000 		.word	deviceList
 1852 02e0 00000000 		.word	.LC1
 1853 02e4 00000000 		.word	dev_num
 1854 02e8 00000000 		.word	transmitMode
 1855 02ec 10000000 		.word	.LC3
 1856 02f0 00000000 		.word	state
 1857 02f4 14000000 		.word	.LC4
 1858 02f8 3C000000 		.word	.LC5
 1859 02fc 64000000 		.word	.LC6
 1860 0300 00000000 		.word	screen_scroll_mode
 1861 0304 00000000 		.word	enc
 1862              	.LVL119:
 1863              	.L108:
 386:Core/Src/main.c ****       }
 1864              		.loc 1 386 9 is_stmt 1 view .LVU537
 386:Core/Src/main.c ****       }
 1865              		.loc 1 386 28 is_stmt 0 view .LVU538
 1866 0308 4F4B     		ldr	r3, .L117
 1867 030a 0022     		movs	r2, #0
 1868 030c 1A70     		strb	r2, [r3]
 1869              	.LVL120:
 1870              	.L87:
 227:Core/Src/main.c ****   { // NEW CODE START
 1871              		.loc 1 227 3 is_stmt 1 view .LVU539
 229:Core/Src/main.c ****       Display_Init(dev_num, DEV_COUNT);
 1872              		.loc 1 229 5 view .LVU540
 229:Core/Src/main.c ****       Display_Init(dev_num, DEV_COUNT);
 1873              		.loc 1 229 14 is_stmt 0 view .LVU541
 1874 030e 4F4B     		ldr	r3, .L117+4
 1875 0310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 229:Core/Src/main.c ****       Display_Init(dev_num, DEV_COUNT);
 1876              		.loc 1 229 7 view .LVU542
 1877 0312 002B     		cmp	r3, #0
 1878 0314 7FF4EAAE 		bne	.L88
 230:Core/Src/main.c ****       HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 1879              		.loc 1 230 7 is_stmt 1 view .LVU543
 1880 0318 DFF83491 		ldr	r9, .L117+8
 1881 031c 0121     		movs	r1, #1
 1882 031e 99F80000 		ldrb	r0, [r9]	@ zero_extendqisi2
 1883 0322 FFF7FEFF 		bl	Display_Init
 1884              	.LVL121:
 231:Core/Src/main.c ****       HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 1885              		.loc 1 231 7 view .LVU544
 1886 0326 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 231:Core/Src/main.c ****       HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 1887              		.loc 1 231 74 is_stmt 0 view .LVU545
 1888 032a 03EB8301 		add	r1, r3, r3, lsl #2
 1889 032e C900     		lsls	r1, r1, #3
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 74


 1890 0330 1831     		adds	r1, r1, #24
 1891 0332 DFF82081 		ldr	r8, .L117+12
 1892 0336 4144     		add	r1, r1, r8
 231:Core/Src/main.c ****       HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 1893              		.loc 1 231 7 view .LVU546
 1894 0338 03EB8303 		add	r3, r3, r3, lsl #2
 1895 033c 0A22     		movs	r2, #10
 1896 033e 0331     		adds	r1, r1, #3
 1897 0340 58F83300 		ldr	r0, [r8, r3, lsl #3]
 1898 0344 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 1899              	.LVL122:
 232:Core/Src/main.c ****     }
 1900              		.loc 1 232 7 is_stmt 1 view .LVU547
 1901 0348 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 232:Core/Src/main.c ****     }
 1902              		.loc 1 232 73 is_stmt 0 view .LVU548
 1903 034c 03EB8301 		add	r1, r3, r3, lsl #2
 1904 0350 C900     		lsls	r1, r1, #3
 1905 0352 1031     		adds	r1, r1, #16
 1906 0354 4144     		add	r1, r1, r8
 232:Core/Src/main.c ****     }
 1907              		.loc 1 232 7 view .LVU549
 1908 0356 03EB8303 		add	r3, r3, r3, lsl #2
 1909 035a 0A22     		movs	r2, #10
 1910 035c 0131     		adds	r1, r1, #1
 1911 035e 58F83300 		ldr	r0, [r8, r3, lsl #3]
 1912 0362 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1913              	.LVL123:
 1914              	.L89:
 254:Core/Src/main.c ****       if(dev_num == old_dev_num){
 1915              		.loc 1 254 5 is_stmt 1 view .LVU550
 254:Core/Src/main.c ****       if(dev_num == old_dev_num){
 1916              		.loc 1 254 9 is_stmt 0 view .LVU551
 1917 0366 FFF7FEFF 		bl	HAL_GetTick
 1918              	.LVL124:
 254:Core/Src/main.c ****       if(dev_num == old_dev_num){
 1919              		.loc 1 254 22 discriminator 1 view .LVU552
 1920 036a 401B     		subs	r0, r0, r5
 254:Core/Src/main.c ****       if(dev_num == old_dev_num){
 1921              		.loc 1 254 8 discriminator 1 view .LVU553
 1922 036c B0F57A7F 		cmp	r0, #1000
 1923 0370 0FD9     		bls	.L91
 254:Core/Src/main.c ****       if(dev_num == old_dev_num){
 1924              		.loc 1 254 54 discriminator 1 view .LVU554
 1925 0372 364B     		ldr	r3, .L117+4
 1926 0374 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 254:Core/Src/main.c ****       if(dev_num == old_dev_num){
 1927              		.loc 1 254 45 discriminator 1 view .LVU555
 1928 0376 63B9     		cbnz	r3, .L91
 255:Core/Src/main.c ****         dev_num++;
 1929              		.loc 1 255 7 is_stmt 1 view .LVU556
 255:Core/Src/main.c ****         dev_num++;
 1930              		.loc 1 255 18 is_stmt 0 view .LVU557
 1931 0378 354B     		ldr	r3, .L117+8
 1932 037a 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 255:Core/Src/main.c ****         dev_num++;
 1933              		.loc 1 255 9 view .LVU558
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 75


 1934 037e B845     		cmp	r8, r7
 1935 0380 3FF4EBAE 		beq	.L111
 1936              	.L92:
 1937              	.LVL125:
 260:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 1938              		.loc 1 260 7 is_stmt 1 view .LVU559
 260:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 1939              		.loc 1 260 26 is_stmt 0 view .LVU560
 1940 0384 FFF7FEFF 		bl	HAL_GetTick
 1941              	.LVL126:
 1942 0388 0546     		mov	r5, r0
 1943              	.LVL127:
 261:Core/Src/main.c ****     }
 1944              		.loc 1 261 7 is_stmt 1 view .LVU561
 261:Core/Src/main.c ****     }
 1945              		.loc 1 261 26 is_stmt 0 view .LVU562
 1946 038a FFF7FEFF 		bl	HAL_GetTick
 1947              	.LVL128:
 261:Core/Src/main.c ****     }
 1948              		.loc 1 261 26 view .LVU563
 1949 038e 0446     		mov	r4, r0
 1950              	.LVL129:
 261:Core/Src/main.c ****     }
 1951              		.loc 1 261 26 view .LVU564
 1952 0390 4746     		mov	r7, r8
 1953              	.LVL130:
 1954              	.L91:
 276:Core/Src/main.c ****       // state = STATE_800INIT;
 1955              		.loc 1 276 5 is_stmt 1 view .LVU565
 276:Core/Src/main.c ****       // state = STATE_800INIT;
 1956              		.loc 1 276 16 is_stmt 0 view .LVU566
 1957 0392 2F4B     		ldr	r3, .L117+8
 1958 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 276:Core/Src/main.c ****       // state = STATE_800INIT;
 1959              		.loc 1 276 7 view .LVU567
 1960 0396 012B     		cmp	r3, #1
 1961 0398 3FF4E4AE 		beq	.L112
 1962              	.L93:
 302:Core/Src/main.c ****       if(state != STATE_INIT){
 1963              		.loc 1 302 5 is_stmt 1 view .LVU568
 302:Core/Src/main.c ****       if(state != STATE_INIT){
 1964              		.loc 1 302 9 is_stmt 0 view .LVU569
 1965 039c FFF7FEFF 		bl	HAL_GetTick
 1966              	.LVL131:
 302:Core/Src/main.c ****       if(state != STATE_INIT){
 1967              		.loc 1 302 22 discriminator 1 view .LVU570
 1968 03a0 001B     		subs	r0, r0, r4
 302:Core/Src/main.c ****       if(state != STATE_INIT){
 1969              		.loc 1 302 8 discriminator 1 view .LVU571
 1970 03a2 41F28833 		movw	r3, #5000
 1971 03a6 9842     		cmp	r0, r3
 1972 03a8 0AD9     		bls	.L98
 302:Core/Src/main.c ****       if(state != STATE_INIT){
 1973              		.loc 1 302 67 discriminator 1 view .LVU572
 1974 03aa 274B     		ldr	r3, .L117
 1975 03ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302:Core/Src/main.c ****       if(state != STATE_INIT){
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 76


 1976              		.loc 1 302 45 discriminator 1 view .LVU573
 1977 03ae 3BB9     		cbnz	r3, .L98
 303:Core/Src/main.c ****         do{
 1978              		.loc 1 303 7 is_stmt 1 view .LVU574
 303:Core/Src/main.c ****         do{
 1979              		.loc 1 303 16 is_stmt 0 view .LVU575
 1980 03b0 264B     		ldr	r3, .L117+4
 1981 03b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 303:Core/Src/main.c ****         do{
 1982              		.loc 1 303 9 view .LVU576
 1983 03b4 002B     		cmp	r3, #0
 1984 03b6 7FF438AF 		bne	.L100
 1985              	.L99:
 312:Core/Src/main.c ****     }
 1986              		.loc 1 312 7 is_stmt 1 view .LVU577
 312:Core/Src/main.c ****     }
 1987              		.loc 1 312 26 is_stmt 0 view .LVU578
 1988 03ba FFF7FEFF 		bl	HAL_GetTick
 1989              	.LVL132:
 1990 03be 0446     		mov	r4, r0
 1991              	.LVL133:
 1992              	.L98:
 317:Core/Src/main.c ****     
 1993              		.loc 1 317 5 is_stmt 1 view .LVU579
 1994 03c0 DFF89480 		ldr	r8, .L117+16
 1995 03c4 4046     		mov	r0, r8
 1996 03c6 FFF7FEFF 		bl	tick
 1997              	.LVL134:
 322:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 1998              		.loc 1 322 5 view .LVU580
 322:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 1999              		.loc 1 322 8 is_stmt 0 view .LVU581
 2000 03ca 4046     		mov	r0, r8
 2001 03cc FFF7FEFF 		bl	isClicked
 2002              	.LVL135:
 322:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2003              		.loc 1 322 7 discriminator 1 view .LVU582
 2004 03d0 0028     		cmp	r0, #0
 2005 03d2 7FF432AF 		bne	.L113
 2006              	.L101:
 334:Core/Src/main.c ****     // TEST CODE
 2007              		.loc 1 334 5 is_stmt 1 view .LVU583
 334:Core/Src/main.c ****     // TEST CODE
 2008              		.loc 1 334 28 is_stmt 0 view .LVU584
 2009 03d6 1E4B     		ldr	r3, .L117+8
 2010 03d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2011 03da 03EB8303 		add	r3, r3, r3, lsl #2
 2012 03de 1D4A     		ldr	r2, .L117+12
 2013 03e0 02EBC303 		add	r3, r2, r3, lsl #3
 2014 03e4 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 334:Core/Src/main.c ****     // TEST CODE
 2015              		.loc 1 334 8 view .LVU585
 2016 03e6 002B     		cmp	r3, #0
 2017 03e8 7FF435AF 		bne	.L114
 2018              	.L103:
 372:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2019              		.loc 1 372 5 is_stmt 1 view .LVU586
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 77


 372:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2020              		.loc 1 372 8 is_stmt 0 view .LVU587
 2021 03ec 1A48     		ldr	r0, .L117+16
 2022 03ee FFF7FEFF 		bl	isHold
 2023              	.LVL136:
 372:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2024              		.loc 1 372 7 discriminator 1 view .LVU588
 2025 03f2 0028     		cmp	r0, #0
 2026 03f4 8BD0     		beq	.L87
 372:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2027              		.loc 1 372 27 discriminator 1 view .LVU589
 2028 03f6 FFF7FEFF 		bl	HAL_GetTick
 2029              	.LVL137:
 372:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2030              		.loc 1 372 41 discriminator 1 view .LVU590
 2031 03fa 801B     		subs	r0, r0, r6
 372:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2032              		.loc 1 372 24 discriminator 1 view .LVU591
 2033 03fc 40F2EE23 		movw	r3, #750
 2034 0400 9842     		cmp	r0, r3
 2035 0402 84D9     		bls	.L87
 373:Core/Src/main.c ****       hold_timeout = HAL_GetTick();
 2036              		.loc 1 373 7 is_stmt 1 view .LVU592
 373:Core/Src/main.c ****       hold_timeout = HAL_GetTick();
 2037              		.loc 1 373 26 is_stmt 0 view .LVU593
 2038 0404 FFF7FEFF 		bl	HAL_GetTick
 2039              	.LVL138:
 2040 0408 0446     		mov	r4, r0
 2041              	.LVL139:
 374:Core/Src/main.c ****       if(deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 2042              		.loc 1 374 7 is_stmt 1 view .LVU594
 374:Core/Src/main.c ****       if(deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 2043              		.loc 1 374 22 is_stmt 0 view .LVU595
 2044 040a FFF7FEFF 		bl	HAL_GetTick
 2045              	.LVL140:
 374:Core/Src/main.c ****       if(deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 2046              		.loc 1 374 22 view .LVU596
 2047 040e 0646     		mov	r6, r0
 2048              	.LVL141:
 375:Core/Src/main.c ****         deviceList[dev_num].setValue = deviceList[dev_num].currentValue;
 2049              		.loc 1 375 7 is_stmt 1 view .LVU597
 375:Core/Src/main.c ****         deviceList[dev_num].setValue = deviceList[dev_num].currentValue;
 2050              		.loc 1 375 29 is_stmt 0 view .LVU598
 2051 0410 0F4B     		ldr	r3, .L117+8
 2052 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2053 0414 03EB8301 		add	r1, r3, r3, lsl #2
 2054 0418 0E4A     		ldr	r2, .L117+12
 2055 041a 02EBC102 		add	r2, r2, r1, lsl #3
 2056 041e D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 375:Core/Src/main.c ****         deviceList[dev_num].setValue = deviceList[dev_num].currentValue;
 2057              		.loc 1 375 9 view .LVU599
 2058 0420 002A     		cmp	r2, #0
 2059 0422 7FF448AF 		bne	.L106
 376:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_EDIT;
 2060              		.loc 1 376 9 is_stmt 1 view .LVU600
 376:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_EDIT;
 2061              		.loc 1 376 59 is_stmt 0 view .LVU601
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 78


 2062 0426 0B4A     		ldr	r2, .L117+12
 2063 0428 02EBC101 		add	r1, r2, r1, lsl #3
 2064 042c C888     		ldrh	r0, [r1, #6]
 2065              	.LVL142:
 376:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_EDIT;
 2066              		.loc 1 376 38 view .LVU602
 2067 042e 0881     		strh	r0, [r1, #8]	@ movhi
 377:Core/Src/main.c ****       }else{
 2068              		.loc 1 377 9 is_stmt 1 view .LVU603
 377:Core/Src/main.c ****       }else{
 2069              		.loc 1 377 47 is_stmt 0 view .LVU604
 2070 0430 0123     		movs	r3, #1
 2071 0432 CB73     		strb	r3, [r1, #15]
 2072              	.L107:
 383:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2073              		.loc 1 383 7 is_stmt 1 view .LVU605
 383:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2074              		.loc 1 383 29 is_stmt 0 view .LVU606
 2075 0434 044B     		ldr	r3, .L117
 2076 0436 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 383:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2077              		.loc 1 383 9 view .LVU607
 2078 0438 002B     		cmp	r3, #0
 2079 043a 7FF465AF 		bne	.L108
 384:Core/Src/main.c ****       }else{
 2080              		.loc 1 384 9 is_stmt 1 view .LVU608
 384:Core/Src/main.c ****       }else{
 2081              		.loc 1 384 28 is_stmt 0 view .LVU609
 2082 043e 024B     		ldr	r3, .L117
 2083 0440 0122     		movs	r2, #1
 2084 0442 1A70     		strb	r2, [r3]
 2085 0444 63E7     		b	.L87
 2086              	.L118:
 2087 0446 00BF     		.align	2
 2088              	.L117:
 2089 0448 00000000 		.word	screen_scroll_mode
 2090 044c 00000000 		.word	state
 2091 0450 00000000 		.word	dev_num
 2092 0454 00000000 		.word	deviceList
 2093 0458 00000000 		.word	button
 2094              		.cfi_endproc
 2095              	.LFE134:
 2097              		.global	isSDInitialised
 2098              		.section	.bss.isSDInitialised,"aw",%nobits
 2101              	isSDInitialised:
 2102 0000 00       		.space	1
 2103              		.global	transmitMode
 2104              		.section	.bss.transmitMode,"aw",%nobits
 2107              	transmitMode:
 2108 0000 00       		.space	1
 2109              		.global	rx_buff
 2110              		.section	.bss.rx_buff,"aw",%nobits
 2111              		.align	2
 2114              	rx_buff:
 2115 0000 00000000 		.space	10
 2115      00000000 
 2115      0000
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 79


 2116              		.global	sim
 2117              		.section	.data.sim,"aw"
 2118              		.align	2
 2121              	sim:
 2122 0000 00000000 		.word	huart6
 2123 0004 00000000 		.space	4
 2124              		.global	deviceList
 2125              		.section	.data.deviceList,"aw"
 2126              		.align	2
 2129              	deviceList:
 2130 0000 00000000 		.word	huart5
 2131 0004 00       		.byte	0
 2132 0005 01       		.byte	1
 2133 0006 00000000 		.space	34
 2133      00000000 
 2133      00000000 
 2133      00000000 
 2133      00000000 
 2134              		.global	enc
 2135              		.section	.data.enc,"aw"
 2136              		.align	2
 2139              	enc:
 2140 0000 00040240 		.word	1073873920
 2141 0004 0002     		.short	512
 2142 0006 0000     		.space	2
 2143 0008 00040240 		.word	1073873920
 2144 000c 0001     		.short	256
 2145 000e 00000000 		.space	6
 2145      0000
 2146              		.global	button
 2147              		.section	.data.button,"aw"
 2148              		.align	2
 2151              	button:
 2152 0000 00040240 		.word	1073873920
 2153 0004 8000     		.short	128
 2154 0006 01       		.byte	1
 2155 0007 00000000 		.space	13
 2155      00000000 
 2155      00000000 
 2155      00
 2156              		.global	screen_scroll_mode
 2157              		.section	.bss.screen_scroll_mode,"aw",%nobits
 2160              	screen_scroll_mode:
 2161 0000 00       		.space	1
 2162              		.global	trySIMInit
 2163              		.section	.bss.trySIMInit,"aw",%nobits
 2166              	trySIMInit:
 2167 0000 00       		.space	1
 2168              		.global	dev_num
 2169              		.section	.bss.dev_num,"aw",%nobits
 2172              	dev_num:
 2173 0000 00       		.space	1
 2174              		.global	state
 2175              		.section	.bss.state,"aw",%nobits
 2178              	state:
 2179 0000 00       		.space	1
 2180              		.global	device_type
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 80


 2181              		.section	.bss.device_type,"aw",%nobits
 2184              	device_type:
 2185 0000 00       		.space	1
 2186              		.global	palette
 2187              		.section	.bss.palette,"aw",%nobits
 2190              	palette:
 2191 0000 00       		.space	1
 2192              		.global	tx_buff
 2193              		.section	.data.tx_buff,"aw"
 2194              		.align	2
 2197              	tx_buff:
 2198 0000 54424344 		.ascii	"TBCDEFGHIJ"
 2198      45464748 
 2198      494A
 2199              		.global	val
 2200              		.section	.data.val,"aw"
 2201              		.align	3
 2204              	val:
 2205 0000 00000000 		.word	0
 2206 0004 00002440 		.word	1076101120
 2207              		.global	hdma_usart6_tx
 2208              		.section	.bss.hdma_usart6_tx,"aw",%nobits
 2209              		.align	2
 2212              	hdma_usart6_tx:
 2213 0000 00000000 		.space	96
 2213      00000000 
 2213      00000000 
 2213      00000000 
 2213      00000000 
 2214              		.global	hdma_usart6_rx
 2215              		.section	.bss.hdma_usart6_rx,"aw",%nobits
 2216              		.align	2
 2219              	hdma_usart6_rx:
 2220 0000 00000000 		.space	96
 2220      00000000 
 2220      00000000 
 2220      00000000 
 2220      00000000 
 2221              		.global	hdma_uart5_tx
 2222              		.section	.bss.hdma_uart5_tx,"aw",%nobits
 2223              		.align	2
 2226              	hdma_uart5_tx:
 2227 0000 00000000 		.space	96
 2227      00000000 
 2227      00000000 
 2227      00000000 
 2227      00000000 
 2228              		.global	hdma_uart5_rx
 2229              		.section	.bss.hdma_uart5_rx,"aw",%nobits
 2230              		.align	2
 2233              	hdma_uart5_rx:
 2234 0000 00000000 		.space	96
 2234      00000000 
 2234      00000000 
 2234      00000000 
 2234      00000000 
 2235              		.global	huart6
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 81


 2236              		.section	.bss.huart6,"aw",%nobits
 2237              		.align	2
 2240              	huart6:
 2241 0000 00000000 		.space	72
 2241      00000000 
 2241      00000000 
 2241      00000000 
 2241      00000000 
 2242              		.global	huart5
 2243              		.section	.bss.huart5,"aw",%nobits
 2244              		.align	2
 2247              	huart5:
 2248 0000 00000000 		.space	72
 2248      00000000 
 2248      00000000 
 2248      00000000 
 2248      00000000 
 2249              		.global	hspi2
 2250              		.section	.bss.hspi2,"aw",%nobits
 2251              		.align	2
 2254              	hspi2:
 2255 0000 00000000 		.space	88
 2255      00000000 
 2255      00000000 
 2255      00000000 
 2255      00000000 
 2256              		.global	hspi1
 2257              		.section	.bss.hspi1,"aw",%nobits
 2258              		.align	2
 2261              	hspi1:
 2262 0000 00000000 		.space	88
 2262      00000000 
 2262      00000000 
 2262      00000000 
 2262      00000000 
 2263              		.global	hrtc
 2264              		.section	.bss.hrtc,"aw",%nobits
 2265              		.align	2
 2268              	hrtc:
 2269 0000 00000000 		.space	32
 2269      00000000 
 2269      00000000 
 2269      00000000 
 2269      00000000 
 2270              		.text
 2271              	.Letext0:
 2272              		.file 3 "Core/Inc/stm32f4xx_hal_conf.h"
 2273              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 2274              		.file 5 "C:/Users/kroko/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 2275              		.file 6 "C:/Users/kroko/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 2276              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2277              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2278              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2279              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2280              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 2281              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2282              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 82


 2283              		.file 14 "Core/Inc/main.h"
 2284              		.file 15 "Middlewares/Third_Party/FatFs/src/integer.h"
 2285              		.file 16 "Middlewares/Third_Party/FatFs/src/ff.h"
 2286              		.file 17 "Core/Inc/buttons.h"
 2287              		.file 18 "Core/Inc/enc.h"
 2288              		.file 19 "C:/Users/kroko/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 2289              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2290              		.file 21 "Core/Inc/info_disp.h"
 2291              		.file 22 "Core/Inc/dispcolor.h"
 2292              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2293              		.file 24 "Core/Inc/gpio.h"
 2294              		.file 25 "<built-in>"
 2295              		.file 26 "FATFS/App/fatfs.h"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 83


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:215    .text.MX_GPIO_Init:000000e4 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:222    .text.MX_DMA_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:227    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:331    .text.MX_DMA_Init:00000084 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:337    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:343    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:668    .text.HAL_UART_RxCpltCallback:0000019c $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2247   .bss.huart5:00000000 huart5
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2107   .bss.transmitMode:00000000 transmitMode
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2172   .bss.dev_num:00000000 dev_num
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2129   .data.deviceList:00000000 deviceList
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2178   .bss.state:00000000 state
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:678    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:684    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:720    .text.HAL_GPIO_EXTI_Callback:00000014 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2139   .data.enc:00000000 enc
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:725    .rodata.Error_Handler.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:729    .text.Error_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:735    .text.Error_Handler:00000000 Error_Handler
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:773    .text.Error_Handler:00000010 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:778    .text.MX_SPI1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:783    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:851    .text.MX_SPI1_Init:0000003c $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2261   .bss.hspi1:00000000 hspi1
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:857    .text.MX_UART5_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:862    .text.MX_UART5_Init:00000000 MX_UART5_Init
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:916    .text.MX_UART5_Init:0000002c $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:922    .text.MX_USART6_UART_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:927    .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:981    .text.MX_USART6_UART_Init:0000002c $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2240   .bss.huart6:00000000 huart6
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:987    .text.MX_SPI2_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:992    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1060   .text.MX_SPI2_Init:00000038 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2254   .bss.hspi2:00000000 hspi2
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1066   .text.MX_RTC_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1071   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1138   .text.MX_RTC_Init:00000038 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2268   .bss.hrtc:00000000 hrtc
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1144   .text.SystemClock_Config:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1150   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1299   .text.SystemClock_Config:000000a0 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1305   .rodata.main.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1324   .text.main:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1330   .text.main:00000000 main
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1847   .text.main:000002cc $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2101   .bss.isSDInitialised:00000000 isSDInitialised
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2160   .bss.screen_scroll_mode:00000000 screen_scroll_mode
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:1866   .text.main:00000308 $t
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2089   .text.main:00000448 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2151   .data.button:00000000 button
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2102   .bss.isSDInitialised:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2108   .bss.transmitMode:00000000 $d
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 84


C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2114   .bss.rx_buff:00000000 rx_buff
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2111   .bss.rx_buff:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2121   .data.sim:00000000 sim
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2118   .data.sim:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2126   .data.deviceList:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2136   .data.enc:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2148   .data.button:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2161   .bss.screen_scroll_mode:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2166   .bss.trySIMInit:00000000 trySIMInit
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2167   .bss.trySIMInit:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2173   .bss.dev_num:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2179   .bss.state:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2184   .bss.device_type:00000000 device_type
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2185   .bss.device_type:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2190   .bss.palette:00000000 palette
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2191   .bss.palette:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2197   .data.tx_buff:00000000 tx_buff
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2194   .data.tx_buff:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2204   .data.val:00000000 val
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2201   .data.val:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2212   .bss.hdma_usart6_tx:00000000 hdma_usart6_tx
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2209   .bss.hdma_usart6_tx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2219   .bss.hdma_usart6_rx:00000000 hdma_usart6_rx
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2216   .bss.hdma_usart6_rx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2226   .bss.hdma_uart5_tx:00000000 hdma_uart5_tx
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2223   .bss.hdma_uart5_tx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2233   .bss.hdma_uart5_rx:00000000 hdma_uart5_rx
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2230   .bss.hdma_uart5_rx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2237   .bss.huart6:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2244   .bss.huart5:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2251   .bss.hspi2:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2258   .bss.hspi1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s:2265   .bss.hrtc:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_d2uiz
HAL_UART_Receive_DMA
memcpy
atof
HAL_GPIO_TogglePin
tickEnc
Show_Message
HAL_SPI_Init
HAL_UART_Init
HAL_RTC_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
gpio_SetGPIOmode_Out
HAL_Delay
MX_FATFS_Init
dispcolor_Init
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccpneNSN.s 			page 85


HAL_GetTick
HAL_RTC_GetTime
HAL_RTC_GetDate
f_mount
Dispaly_Data
HAL_UART_Transmit_DMA
sprintf
f_open
f_close
f_write
isRight
isLeft
Display_Init
tick
isClicked
isHold
