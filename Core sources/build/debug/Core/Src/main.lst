ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB143:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fatfs.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <stdlib.h>
  26:Core/Src/main.c **** #include <dispcolor.h>
  27:Core/Src/main.c **** #include <gpio.h>
  28:Core/Src/main.c **** #include "info_disp.h"
  29:Core/Src/main.c **** #include "buttons.h"
  30:Core/Src/main.c **** #include "enc.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** #define STATE_INIT    0
  41:Core/Src/main.c **** #define STATE_DISPLAY 1
  42:Core/Src/main.c **** #define STATE_800INIT 2
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** #define SCROLL_MODE_AUTO  0
  45:Core/Src/main.c **** #define SCROLL_MODE_HALT  1
  46:Core/Src/main.c **** #define SCROLL_MODE_CLICK 2
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** #define TRANSMIT_MODE_GET 0
  49:Core/Src/main.c **** #define TRANSMIT_MODE_SET 1
  50:Core/Src/main.c **** /* USER CODE END PD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  61:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  62:Core/Src/main.c **** //DMA_HandleTypeDef hdma_spi1_tx;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** UART_HandleTypeDef huart5;
  65:Core/Src/main.c **** UART_HandleTypeDef huart2;
  66:Core/Src/main.c **** UART_HandleTypeDef huart6;
  67:Core/Src/main.c **** DMA_HandleTypeDef hdma_uart5_rx;
  68:Core/Src/main.c **** DMA_HandleTypeDef hdma_uart5_tx;
  69:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_rx;
  70:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart2_tx;
  71:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart6_rx;
  72:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart6_tx;
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE BEGIN PV */
  75:Core/Src/main.c **** #define DEV0_UART &huart4
  76:Core/Src/main.c **** #define DEV3_UART &huart5
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** #define DEV_STATE_IN    1
  79:Core/Src/main.c **** #define DEV_STATE_UNIN  0
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** #define SIM800_UART &huart6
  83:Core/Src/main.c **** /* USER CODE END PV */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  86:Core/Src/main.c **** void SystemClock_Config(void);
  87:Core/Src/main.c **** static void MX_GPIO_Init(void);
  88:Core/Src/main.c **** static void MX_DMA_Init(void);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 3


  89:Core/Src/main.c **** static void MX_SPI1_Init(void);
  90:Core/Src/main.c **** static void MX_UART5_Init(void);
  91:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  92:Core/Src/main.c **** static void MX_SPI2_Init(void);
  93:Core/Src/main.c **** static void MX_RTC_Init(void);
  94:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  95:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* USER CODE END PFP */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 100:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 101:Core/Src/main.c **** double val = 10;
 102:Core/Src/main.c **** uint8_t tx_buff[]={84,66,67,68,69,70,71,72,73,74};
 103:Core/Src/main.c **** uint8_t palette = TEMP_PALETTE;
 104:Core/Src/main.c **** uint8_t device_type = TYPE_SET_TEL;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** uint8_t state = STATE_INIT;
 107:Core/Src/main.c **** uint8_t dev_num = 0;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** bool trySIMInit = 0;
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** uint8_t screen_scroll_mode = SCROLL_MODE_AUTO;
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** Button button = {ENC_KEY_GPIO_Port, ENC_KEY_Pin, TYPE_HIGH_PULL};
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** Encoder enc = {ENC_S1_GPIO_Port, ENC_S1_Pin, ENC_S2_GPIO_Port, ENC_S2_Pin};
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** //Device device_0 = {&huart4, DEV_STATE_UNIN, TYPE_SET_ONLY};
 118:Core/Src/main.c **** // Device device_2 = {&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY};
 119:Core/Src/main.c **** //Device device_3 = {&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY};
 120:Core/Src/main.c **** // Device device_4 = {&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY};
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** Device deviceList[] = {{&huart5, DEV_STATE_UNIN, TYPE_SET_ONLY}, {&huart2, DEV_STATE_UNIN, TYPE_SET
 123:Core/Src/main.c **** //Device deviceList[] = {device_0, dev};
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** SIM sim = {SIM800_UART};
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** uint8_t rx_buff[10];
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** #define DEV_COUNT sizeof(deviceList)/sizeof(deviceList[0])
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** bool transmitMode = TRANSMIT_MODE_GET;
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** bool isSDInitialised = false;
 135:Core/Src/main.c **** /* USER CODE END 0 */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /**
 138:Core/Src/main.c ****   * @brief  The application entry point.
 139:Core/Src/main.c ****   * @retval int
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c **** int main(void)
 142:Core/Src/main.c **** {
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 4


 146:Core/Src/main.c ****   /* USER CODE END 1 */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 151:Core/Src/main.c ****   HAL_Init();
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 154:Core/Src/main.c **** 	// gpio_SetGPIOmode_Out(GPIOB, GPIO_PIN_14);
 155:Core/Src/main.c ****   // gpio_SetGPIOmode_Out(GPIOD, GPIO_PIN_2);
 156:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);
 157:Core/Src/main.c **** 	// HAL_Delay(100);
 158:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 162:Core/Src/main.c **** 	// HAL_Delay(1000);
 163:Core/Src/main.c **** 	// HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 164:Core/Src/main.c ****   /* USER CODE END Init */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* Configure the system clock */
 167:Core/Src/main.c ****   SystemClock_Config();
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END SysInit */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* Initialize all configured peripherals */
 174:Core/Src/main.c ****   MX_GPIO_Init();
 175:Core/Src/main.c ****   MX_DMA_Init();
 176:Core/Src/main.c ****   MX_SPI1_Init();
 177:Core/Src/main.c ****   MX_UART5_Init();
 178:Core/Src/main.c ****   MX_USART6_UART_Init();
 179:Core/Src/main.c ****   MX_SPI2_Init();
 180:Core/Src/main.c ****   MX_FATFS_Init();
 181:Core/Src/main.c ****   MX_RTC_Init();
 182:Core/Src/main.c ****   MX_USART2_UART_Init();
 183:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 184:Core/Src/main.c ****   // init(&button);
 185:Core/Src/main.c ****   // initEnc(&enc);
 186:Core/Src/main.c ****   
 187:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 188:Core/Src/main.c ****   HAL_Delay(200);
 189:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 	dispcolor_Init(240, 240);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 	uint32_t dev_init_timeout = HAL_GetTick();
 194:Core/Src/main.c ****   uint32_t screen_disp_time = HAL_GetTick();
 195:Core/Src/main.c ****   uint32_t hold_timeout = HAL_GetTick();
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   uint32_t simtmr = HAL_GetTick();
 198:Core/Src/main.c ****   uint32_t txtmr = HAL_GetTick();
 199:Core/Src/main.c ****   
 200:Core/Src/main.c ****   uint8_t old_dev_num = 0;
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* RTC */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 5


 203:Core/Src/main.c ****   // GET RTC DATETIME
 204:Core/Src/main.c ****   RTC_DateTypeDef gDate;
 205:Core/Src/main.c ****   RTC_TimeTypeDef gTime;
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* Get the RTC current Time */
 208:Core/Src/main.c ****   HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 209:Core/Src/main.c ****   /* Get the RTC current Date */
 210:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
 211:Core/Src/main.c ****   
 212:Core/Src/main.c ****   if(gDate.Year == 0){
 213:Core/Src/main.c ****     Show_Message("SET UP RTC!", 1000);
 214:Core/Src/main.c ****     // RTC SETUP MENU
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* SD CARD */
 218:Core/Src/main.c ****   FATFS FatFs;
 219:Core/Src/main.c ****   FRESULT FR_Status;
 220:Core/Src/main.c ****   FIL Fil;
 221:Core/Src/main.c ****   UINT bytesWrote;
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   FR_Status = f_mount(&FatFs, "", 1);
 224:Core/Src/main.c ****   if (FR_Status == FR_OK){
 225:Core/Src/main.c ****     isSDInitialised = true;
 226:Core/Src/main.c ****   }else{
 227:Core/Src/main.c ****     Show_Message("Problem with SD card!", 1000);
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   deviceList[0].tx_buff[0] = 84;
 232:Core/Src/main.c ****   deviceList[1].tx_buff[0] = 84;
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_RESET);
 236:Core/Src/main.c ****   HAL_GPIO_WritePin(DEV1_RST_GPIO_Port, DEV1_RST_Pin, GPIO_PIN_RESET);
 237:Core/Src/main.c **** 	HAL_Delay(100);
 238:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
 239:Core/Src/main.c ****   HAL_GPIO_WritePin(DEV1_RST_GPIO_Port, DEV1_RST_Pin, GPIO_PIN_SET);
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   dev_init_timeout = HAL_GetTick();
 242:Core/Src/main.c ****   /* USER CODE END 2 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* Infinite loop */
 245:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 246:Core/Src/main.c ****   while (1)
 247:Core/Src/main.c ****   { // NEW CODE START
 248:Core/Src/main.c ****     if(state == STATE_INIT){
 249:Core/Src/main.c ****       Display_Init(dev_num, DEV_COUNT);
 250:Core/Src/main.c ****       HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 251:Core/Src/main.c ****        HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 252:Core/Src/main.c ****     }
 253:Core/Src/main.c ****     // else if (state == STATE_800INIT){
 254:Core/Src/main.c ****     //   trySIMInit = 1;
 255:Core/Src/main.c ****     //   state = STATE_DISPLAY;
 256:Core/Src/main.c ****     //   //SIM_Init("TRY TO", "INIT SIM");
 257:Core/Src/main.c ****     //   HAL_UART_Transmit(sim.uart, "AT\r\n", 5, 1000); //UART8 NO DMA TX
 258:Core/Src/main.c ****     //   HAL_UART_Receive_DMA(sim.uart, rx_buff, 5);
 259:Core/Src/main.c ****     // }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 6


 260:Core/Src/main.c ****     else{
 261:Core/Src/main.c ****       Dispaly_Data(&deviceList[dev_num]);
 262:Core/Src/main.c ****       if(transmitMode == TRANSMIT_MODE_GET){
 263:Core/Src/main.c ****         if(deviceList[dev_num].deviceMode != TYPE_SET_ONLY){
 264:Core/Src/main.c ****           HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 265:Core/Src/main.c ****           HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 266:Core/Src/main.c ****         }
 267:Core/Src/main.c ****       }else{
 268:Core/Src/main.c ****         char setValueTx[10];
 269:Core/Src/main.c ****         //sprintf(setValueTx, "%d", deviceList[dev_num].setValue);
 270:Core/Src/main.c ****         itoa(deviceList[dev_num].setValue, setValueTx, 10);
 271:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, setValueTx, 10);
 272:Core/Src/main.c ****         transmitMode = TRANSMIT_MODE_GET;
 273:Core/Src/main.c ****       }
 274:Core/Src/main.c ****     }
 275:Core/Src/main.c ****     // NEW CODE END
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****     // DEVICE INITIALIZATION START
 278:Core/Src/main.c ****     if (HAL_GetTick()-dev_init_timeout>1000 && state == STATE_INIT){
 279:Core/Src/main.c ****       if(dev_num == old_dev_num){
 280:Core/Src/main.c ****         dev_num++;
 281:Core/Src/main.c ****       }else{
 282:Core/Src/main.c ****         old_dev_num = dev_num;
 283:Core/Src/main.c ****       }
 284:Core/Src/main.c ****       dev_init_timeout = HAL_GetTick();
 285:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 286:Core/Src/main.c ****     }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****     // SIM INIT START
 289:Core/Src/main.c ****     // if(state == STATE_800INIT && HAL_GetTick() - simtmr > 1000){
 290:Core/Src/main.c ****     //   trySIMInit = 0;
 291:Core/Src/main.c ****     //   sim.initState = 0;
 292:Core/Src/main.c ****     //   state = STATE_DISPLAY;
 293:Core/Src/main.c ****     //   Show_Message("SIM INIT FAIL", 1000);
 294:Core/Src/main.c ****     // }
 295:Core/Src/main.c ****     // if(sim.initState = 1 && state == STATE_800INIT){
 296:Core/Src/main.c ****     //   state = STATE_DISPLAY;
 297:Core/Src/main.c ****     // }
 298:Core/Src/main.c ****     // SIM INIT END
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****     if(dev_num == DEV_COUNT && state == STATE_INIT){
 301:Core/Src/main.c ****       // state = STATE_800INIT;
 302:Core/Src/main.c ****       state = STATE_DISPLAY;
 303:Core/Src/main.c ****       simtmr = HAL_GetTick();
 304:Core/Src/main.c ****       dev_num = 0;
 305:Core/Src/main.c ****       screen_scroll_mode = SCROLL_MODE_AUTO;
 306:Core/Src/main.c ****       if(isSDInitialised){
 307:Core/Src/main.c ****         // CREATE FILE "init_time_date.txt"
 308:Core/Src/main.c ****         char filename_buff[35];
 309:Core/Src/main.c ****         uint8_t buf_len;
 310:Core/Src/main.c ****         sprintf(filename_buff, "init_%02d-%02d-%02d_%02d-%02d-%2d.txt", gTime.Hours, gTime.Minutes,
 311:Core/Src/main.c ****         FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 312:Core/Src/main.c ****         for (uint8_t i = 0; i < DEV_COUNT; i++){
 313:Core/Src/main.c ****           char init_file_buf[75];
 314:Core/Src/main.c ****           if(deviceList[i].initState == DEV_STATE_IN){
 315:Core/Src/main.c ****             char dev_type_buf[15];
 316:Core/Src/main.c ****             switch (deviceList[i].deviceMode)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 7


 317:Core/Src/main.c ****             {
 318:Core/Src/main.c ****             case TYPE_SET_ONLY:
 319:Core/Src/main.c ****               sprintf(dev_type_buf, "TYPE_SET_ONLY");
 320:Core/Src/main.c ****               break;
 321:Core/Src/main.c ****             case TYPE_SET_TEL:
 322:Core/Src/main.c ****               sprintf(dev_type_buf, "TYPE_SET_TEL");
 323:Core/Src/main.c ****               break;
 324:Core/Src/main.c ****             case TYPE_TEL_ONLY:
 325:Core/Src/main.c ****               sprintf(dev_type_buf, "TYPE_TEL_ONLY");
 326:Core/Src/main.c ****               break;
 327:Core/Src/main.c ****             }
 328:Core/Src/main.c ****             uint8_t max[5];
 329:Core/Src/main.c ****             uint8_t min[5];
 330:Core/Src/main.c ****             gcvt(deviceList[i].minValue, 5, min);
 331:Core/Src/main.c ****             gcvt(deviceList[i].maxValue, 5, max);
 332:Core/Src/main.c ****             buf_len = sprintf(init_file_buf, "DEV: %d\nMin/Max: %s/%s\nDev type: %s\n\n", i, min, m
 333:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 334:Core/Src/main.c ****           }else{
 335:Core/Src/main.c ****             buf_len = sprintf(init_file_buf, "DEV: empty\n\n");
 336:Core/Src/main.c ****           }
 337:Core/Src/main.c ****           FR_Status = f_write(&Fil, init_file_buf, buf_len, &bytesWrote);
 338:Core/Src/main.c ****         }
 339:Core/Src/main.c ****         f_close(&Fil);
 340:Core/Src/main.c ****         // SAVE CONFIG
 341:Core/Src/main.c ****       }
 342:Core/Src/main.c ****     }
 343:Core/Src/main.c ****     // DEVICE INITIALIZATION END
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****     // AUTO SCREEN SCROLL START
 346:Core/Src/main.c ****     if (HAL_GetTick()-screen_disp_time>5000 && screen_scroll_mode == SCROLL_MODE_AUTO){
 347:Core/Src/main.c ****       if(state != STATE_INIT){
 348:Core/Src/main.c ****         do{
 349:Core/Src/main.c ****           if(dev_num < DEV_COUNT-1){
 350:Core/Src/main.c ****             dev_num++;
 351:Core/Src/main.c ****           }else{
 352:Core/Src/main.c ****             dev_num=0;
 353:Core/Src/main.c ****           }
 354:Core/Src/main.c ****         }while (!deviceList[dev_num].initState);  
 355:Core/Src/main.c ****       }
 356:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 357:Core/Src/main.c ****     }
 358:Core/Src/main.c ****     // AUTO SCREEN SCROLL END
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****     // GPIO READING START
 361:Core/Src/main.c ****     tick(&button);
 362:Core/Src/main.c ****     
 363:Core/Src/main.c ****     // GPIO READING END
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****     // SCROLL MODE CHANGE START
 366:Core/Src/main.c ****     if(isClicked(&button)){
 367:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 368:Core/Src/main.c ****       if(screen_scroll_mode == SCROLL_MODE_AUTO){
 369:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 370:Core/Src/main.c ****       }else{
 371:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_AUTO;
 372:Core/Src/main.c ****       }
 373:Core/Src/main.c ****     }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 8


 374:Core/Src/main.c ****     // SCROLL MODE CHANGE END
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****     // ENCODER START
 377:Core/Src/main.c ****     // TEST CODE START
 378:Core/Src/main.c ****     if (deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 379:Core/Src/main.c ****     // TEST CODE
 380:Core/Src/main.c ****       // MANUAL SCREEN SROLL START
 381:Core/Src/main.c ****       // if(isRight(&enc)){
 382:Core/Src/main.c ****       //   if(dev_num < DEV_COUNT){
 383:Core/Src/main.c ****       //     dev_num++;
 384:Core/Src/main.c ****       //   }else{
 385:Core/Src/main.c ****       //     dev_num = 0;
 386:Core/Src/main.c ****       //   }
 387:Core/Src/main.c ****       //   screen_disp_time = HAL_GetTick();
 388:Core/Src/main.c ****       // }
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****       // if(isLeft(&enc)){
 391:Core/Src/main.c ****       //   if(dev_num > 0){
 392:Core/Src/main.c ****       //     dev_num--;
 393:Core/Src/main.c ****       //   }else{
 394:Core/Src/main.c ****       //     dev_num = DEV_COUNT;
 395:Core/Src/main.c ****       //   }
 396:Core/Src/main.c ****       //   screen_disp_time = HAL_GetTick();
 397:Core/Src/main.c ****       // }
 398:Core/Src/main.c ****       // MANUAL SCREEN SCROLL START
 399:Core/Src/main.c ****     }else{
 400:Core/Src/main.c ****       // VALUE EDIT START
 401:Core/Src/main.c ****       if(isRight(&enc)){
 402:Core/Src/main.c ****         if(deviceList[dev_num].setValue+5<=deviceList[dev_num].maxValue){
 403:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 404:Core/Src/main.c ****         }
 405:Core/Src/main.c ****       }
 406:Core/Src/main.c ****       if(isLeft(&enc)){
 407:Core/Src/main.c ****         if(deviceList[dev_num].setValue-5>=deviceList[dev_num].minValue){
 408:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 409:Core/Src/main.c ****         }
 410:Core/Src/main.c ****         // else{
 411:Core/Src/main.c ****         //   for (uint8_t i = 0; i < 30; i++){
 412:Core/Src/main.c ****         //     Draw_Easter();
 413:Core/Src/main.c ****         //   }
 414:Core/Src/main.c ****         // }
 415:Core/Src/main.c ****       }
 416:Core/Src/main.c ****       // VALUE EDIT END
 417:Core/Src/main.c ****     }
 418:Core/Src/main.c ****     // ENCODER END
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****     // EDIT VALUE START
 421:Core/Src/main.c ****     if(isHold(&button) && HAL_GetTick() - hold_timeout > 750 && deviceList[dev_num].deviceMode != T
 422:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 423:Core/Src/main.c ****       hold_timeout = HAL_GetTick();
 424:Core/Src/main.c ****       if(deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 425:Core/Src/main.c ****         if (deviceList[dev_num].deviceMode != TYPE_SET_ONLY){
 426:Core/Src/main.c ****           deviceList[dev_num].setValue = deviceList[dev_num].currentValue;
 427:Core/Src/main.c ****         }
 428:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_EDIT;
 429:Core/Src/main.c ****       }else{
 430:Core/Src/main.c ****         transmitMode = TRANSMIT_MODE_SET;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 9


 431:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_NORMAL;
 432:Core/Src/main.c ****       }
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****       if(screen_scroll_mode == SCROLL_MODE_AUTO){
 435:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 436:Core/Src/main.c ****       }else{
 437:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_AUTO;
 438:Core/Src/main.c ****       }
 439:Core/Src/main.c ****     }
 440:Core/Src/main.c ****     // EDIT VALUE END
 441:Core/Src/main.c ****     /* USER CODE END WHILE */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 444:Core/Src/main.c ****   }
 445:Core/Src/main.c ****   /* USER CODE END 3 */
 446:Core/Src/main.c **** }
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** /**
 449:Core/Src/main.c ****   * @brief System Clock Configuration
 450:Core/Src/main.c ****   * @retval None
 451:Core/Src/main.c ****   */
 452:Core/Src/main.c **** void SystemClock_Config(void)
 453:Core/Src/main.c **** {
 454:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 455:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 458:Core/Src/main.c ****   */
 459:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 460:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 463:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 464:Core/Src/main.c ****   */
 465:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 466:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 467:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 468:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 469:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 470:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 471:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 472:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 473:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 474:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 475:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 476:Core/Src/main.c ****   {
 477:Core/Src/main.c ****     Error_Handler();
 478:Core/Src/main.c ****   }
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 481:Core/Src/main.c ****   */
 482:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 483:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 484:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 485:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 486:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 487:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 10


 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 490:Core/Src/main.c ****   {
 491:Core/Src/main.c ****     Error_Handler();
 492:Core/Src/main.c ****   }
 493:Core/Src/main.c **** }
 494:Core/Src/main.c **** 
 495:Core/Src/main.c **** /**
 496:Core/Src/main.c ****   * @brief RTC Initialization Function
 497:Core/Src/main.c ****   * @param None
 498:Core/Src/main.c ****   * @retval None
 499:Core/Src/main.c ****   */
 500:Core/Src/main.c **** static void MX_RTC_Init(void)
 501:Core/Src/main.c **** {
 502:Core/Src/main.c **** 
 503:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 508:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c ****   /** Initialize RTC Only
 515:Core/Src/main.c ****   */
 516:Core/Src/main.c ****   hrtc.Instance = RTC;
 517:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 518:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 519:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 520:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 521:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 522:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 523:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 524:Core/Src/main.c ****   {
 525:Core/Src/main.c ****     Error_Handler();
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 529:Core/Src/main.c ****   // GET RTC DATETIME
 530:Core/Src/main.c ****   RTC_DateTypeDef gDate;
 531:Core/Src/main.c ****   RTC_TimeTypeDef gTime;
 532:Core/Src/main.c ****   bool rtcBackup = false;
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****   /* Get the RTC current Time */
 535:Core/Src/main.c ****   HAL_RTC_GetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 536:Core/Src/main.c ****   /* Get the RTC current Date */
 537:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
 538:Core/Src/main.c ****   
 539:Core/Src/main.c ****   if(gDate.Year != 0){
 540:Core/Src/main.c ****       rtcBackup = true;
 541:Core/Src/main.c ****   }
 542:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 543:Core/Src/main.c **** 
 544:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 11


 545:Core/Src/main.c ****   */
 546:Core/Src/main.c ****   sTime.Hours = 0x0;
 547:Core/Src/main.c ****   sTime.Minutes = 0x0;
 548:Core/Src/main.c ****   sTime.Seconds = 0x0;
 549:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 550:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 551:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 552:Core/Src/main.c ****   {
 553:Core/Src/main.c ****     Error_Handler();
 554:Core/Src/main.c ****   }
 555:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 556:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 557:Core/Src/main.c ****   sDate.Date = 0x1;
 558:Core/Src/main.c ****   sDate.Year = 0x0;
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 561:Core/Src/main.c ****   {
 562:Core/Src/main.c ****     Error_Handler();
 563:Core/Src/main.c ****   }
 564:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 565:Core/Src/main.c ****   if(rtcBackup){
 566:Core/Src/main.c ****     HAL_RTC_SetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 567:Core/Src/main.c ****     HAL_RTC_SetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
 568:Core/Src/main.c ****   }
 569:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** }
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** /**
 574:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 575:Core/Src/main.c ****   * @param None
 576:Core/Src/main.c ****   * @retval None
 577:Core/Src/main.c ****   */
 578:Core/Src/main.c **** static void MX_SPI1_Init(void)
 579:Core/Src/main.c **** {
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 586:Core/Src/main.c **** 
 587:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 588:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 589:Core/Src/main.c ****   hspi1.Instance = SPI1;
 590:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 591:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 592:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 593:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 594:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 595:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 596:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 597:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 598:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 599:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 600:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 601:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 12


 602:Core/Src/main.c ****   {
 603:Core/Src/main.c ****     Error_Handler();
 604:Core/Src/main.c ****   }
 605:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 608:Core/Src/main.c **** 
 609:Core/Src/main.c **** }
 610:Core/Src/main.c **** 
 611:Core/Src/main.c **** /**
 612:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 613:Core/Src/main.c ****   * @param None
 614:Core/Src/main.c ****   * @retval None
 615:Core/Src/main.c ****   */
 616:Core/Src/main.c **** static void MX_SPI2_Init(void)
 617:Core/Src/main.c **** {
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 622:Core/Src/main.c **** 
 623:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 624:Core/Src/main.c **** 
 625:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 626:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 627:Core/Src/main.c ****   hspi2.Instance = SPI2;
 628:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 629:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 630:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 631:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 632:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 633:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 634:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 635:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 636:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 637:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 638:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 639:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 640:Core/Src/main.c ****   {
 641:Core/Src/main.c ****     Error_Handler();
 642:Core/Src/main.c ****   }
 643:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 646:Core/Src/main.c **** 
 647:Core/Src/main.c **** }
 648:Core/Src/main.c **** 
 649:Core/Src/main.c **** /**
 650:Core/Src/main.c ****   * @brief UART5 Initialization Function
 651:Core/Src/main.c ****   * @param None
 652:Core/Src/main.c ****   * @retval None
 653:Core/Src/main.c ****   */
 654:Core/Src/main.c **** static void MX_UART5_Init(void)
 655:Core/Src/main.c **** {
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 0 */
 658:Core/Src/main.c **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 13


 659:Core/Src/main.c ****   /* USER CODE END UART5_Init 0 */
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 1 */
 662:Core/Src/main.c **** 
 663:Core/Src/main.c ****   /* USER CODE END UART5_Init 1 */
 664:Core/Src/main.c ****   huart5.Instance = UART5;
 665:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 666:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 667:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
 668:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 669:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 670:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 671:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 672:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 673:Core/Src/main.c ****   {
 674:Core/Src/main.c ****     Error_Handler();
 675:Core/Src/main.c ****   }
 676:Core/Src/main.c ****   /* USER CODE BEGIN UART5_Init 2 */
 677:Core/Src/main.c **** 
 678:Core/Src/main.c ****   /* USER CODE END UART5_Init 2 */
 679:Core/Src/main.c **** 
 680:Core/Src/main.c **** }
 681:Core/Src/main.c **** 
 682:Core/Src/main.c **** /**
 683:Core/Src/main.c ****   * @brief USART2 Initialization Function
 684:Core/Src/main.c ****   * @param None
 685:Core/Src/main.c ****   * @retval None
 686:Core/Src/main.c ****   */
 687:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 688:Core/Src/main.c **** {
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 691:Core/Src/main.c **** 
 692:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 693:Core/Src/main.c **** 
 694:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 695:Core/Src/main.c **** 
 696:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 697:Core/Src/main.c ****   huart2.Instance = USART2;
 698:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 699:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 700:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 701:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 702:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 703:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 704:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 705:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 706:Core/Src/main.c ****   {
 707:Core/Src/main.c ****     Error_Handler();
 708:Core/Src/main.c ****   }
 709:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 710:Core/Src/main.c **** 
 711:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 712:Core/Src/main.c **** 
 713:Core/Src/main.c **** }
 714:Core/Src/main.c **** 
 715:Core/Src/main.c **** /**
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 14


 716:Core/Src/main.c ****   * @brief USART6 Initialization Function
 717:Core/Src/main.c ****   * @param None
 718:Core/Src/main.c ****   * @retval None
 719:Core/Src/main.c ****   */
 720:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
 721:Core/Src/main.c **** {
 722:Core/Src/main.c **** 
 723:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
 724:Core/Src/main.c **** 
 725:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
 726:Core/Src/main.c **** 
 727:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
 728:Core/Src/main.c **** 
 729:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
 730:Core/Src/main.c ****   huart6.Instance = USART6;
 731:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 732:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 733:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 734:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 735:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 736:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 737:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 738:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 739:Core/Src/main.c ****   {
 740:Core/Src/main.c ****     Error_Handler();
 741:Core/Src/main.c ****   }
 742:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
 743:Core/Src/main.c **** 
 744:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
 745:Core/Src/main.c **** 
 746:Core/Src/main.c **** }
 747:Core/Src/main.c **** 
 748:Core/Src/main.c **** /**
 749:Core/Src/main.c ****   * Enable DMA controller clock
 750:Core/Src/main.c ****   */
 751:Core/Src/main.c **** static void MX_DMA_Init(void)
 752:Core/Src/main.c **** {
 753:Core/Src/main.c **** 
 754:Core/Src/main.c ****   /* DMA controller clock enable */
 755:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 756:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 757:Core/Src/main.c **** 
 758:Core/Src/main.c ****   /* DMA interrupt init */
 759:Core/Src/main.c ****   /* DMA1_Stream0_IRQn interrupt configuration */
 760:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 761:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 762:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 763:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 764:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 765:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 766:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 767:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 768:Core/Src/main.c ****   /* DMA1_Stream7_IRQn interrupt configuration */
 769:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 770:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 771:Core/Src/main.c ****   /* DMA2_Stream1_IRQn interrupt configuration */
 772:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 0, 0);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 15


 773:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 774:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 775:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 776:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 777:Core/Src/main.c ****   /* DMA2_Stream6_IRQn interrupt configuration */
 778:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 0, 0);
 779:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 780:Core/Src/main.c **** 
 781:Core/Src/main.c **** }
 782:Core/Src/main.c **** 
 783:Core/Src/main.c **** /**
 784:Core/Src/main.c ****   * @brief GPIO Initialization Function
 785:Core/Src/main.c ****   * @param None
 786:Core/Src/main.c ****   * @retval None
 787:Core/Src/main.c ****   */
 788:Core/Src/main.c **** static void MX_GPIO_Init(void)
 789:Core/Src/main.c **** {
  28              		.loc 1 789 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              		.cfi_def_cfa_offset 28
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 14, -4
  41 0004 8BB0     		sub	sp, sp, #44
  42              		.cfi_def_cfa_offset 72
 790:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 790 3 view .LVU1
  44              		.loc 1 790 20 is_stmt 0 view .LVU2
  45 0006 0024     		movs	r4, #0
  46 0008 0594     		str	r4, [sp, #20]
  47 000a 0694     		str	r4, [sp, #24]
  48 000c 0794     		str	r4, [sp, #28]
  49 000e 0894     		str	r4, [sp, #32]
  50 0010 0994     		str	r4, [sp, #36]
 791:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 792:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 793:Core/Src/main.c **** 
 794:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 795:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 795 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 795 3 view .LVU4
  54 0012 0094     		str	r4, [sp]
  55              		.loc 1 795 3 view .LVU5
  56 0014 484B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60              		.loc 1 795 3 view .LVU6
  61 001e 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 16


  62 0020 02F00402 		and	r2, r2, #4
  63 0024 0092     		str	r2, [sp]
  64              		.loc 1 795 3 view .LVU7
  65 0026 009A     		ldr	r2, [sp]
  66              	.LBE4:
  67              		.loc 1 795 3 view .LVU8
 796:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  68              		.loc 1 796 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 796 3 view .LVU10
  71 0028 0194     		str	r4, [sp, #4]
  72              		.loc 1 796 3 view .LVU11
  73 002a 1A6B     		ldr	r2, [r3, #48]
  74 002c 42F08002 		orr	r2, r2, #128
  75 0030 1A63     		str	r2, [r3, #48]
  76              		.loc 1 796 3 view .LVU12
  77 0032 1A6B     		ldr	r2, [r3, #48]
  78 0034 02F08002 		and	r2, r2, #128
  79 0038 0192     		str	r2, [sp, #4]
  80              		.loc 1 796 3 view .LVU13
  81 003a 019A     		ldr	r2, [sp, #4]
  82              	.LBE5:
  83              		.loc 1 796 3 view .LVU14
 797:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  84              		.loc 1 797 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 797 3 view .LVU16
  87 003c 0294     		str	r4, [sp, #8]
  88              		.loc 1 797 3 view .LVU17
  89 003e 1A6B     		ldr	r2, [r3, #48]
  90 0040 42F00102 		orr	r2, r2, #1
  91 0044 1A63     		str	r2, [r3, #48]
  92              		.loc 1 797 3 view .LVU18
  93 0046 1A6B     		ldr	r2, [r3, #48]
  94 0048 02F00102 		and	r2, r2, #1
  95 004c 0292     		str	r2, [sp, #8]
  96              		.loc 1 797 3 view .LVU19
  97 004e 029A     		ldr	r2, [sp, #8]
  98              	.LBE6:
  99              		.loc 1 797 3 view .LVU20
 798:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 100              		.loc 1 798 3 view .LVU21
 101              	.LBB7:
 102              		.loc 1 798 3 view .LVU22
 103 0050 0394     		str	r4, [sp, #12]
 104              		.loc 1 798 3 view .LVU23
 105 0052 1A6B     		ldr	r2, [r3, #48]
 106 0054 42F00202 		orr	r2, r2, #2
 107 0058 1A63     		str	r2, [r3, #48]
 108              		.loc 1 798 3 view .LVU24
 109 005a 1A6B     		ldr	r2, [r3, #48]
 110 005c 02F00202 		and	r2, r2, #2
 111 0060 0392     		str	r2, [sp, #12]
 112              		.loc 1 798 3 view .LVU25
 113 0062 039A     		ldr	r2, [sp, #12]
 114              	.LBE7:
 115              		.loc 1 798 3 view .LVU26
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 17


 799:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 116              		.loc 1 799 3 view .LVU27
 117              	.LBB8:
 118              		.loc 1 799 3 view .LVU28
 119 0064 0494     		str	r4, [sp, #16]
 120              		.loc 1 799 3 view .LVU29
 121 0066 1A6B     		ldr	r2, [r3, #48]
 122 0068 42F00802 		orr	r2, r2, #8
 123 006c 1A63     		str	r2, [r3, #48]
 124              		.loc 1 799 3 view .LVU30
 125 006e 1B6B     		ldr	r3, [r3, #48]
 126 0070 03F00803 		and	r3, r3, #8
 127 0074 0493     		str	r3, [sp, #16]
 128              		.loc 1 799 3 view .LVU31
 129 0076 049B     		ldr	r3, [sp, #16]
 130              	.LBE8:
 131              		.loc 1 799 3 view .LVU32
 800:Core/Src/main.c **** 
 801:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 802:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED_Pin|DEV0_RST_Pin|SPI2_CS_Pin|DC_Pin, GPIO_PIN_RESET);
 132              		.loc 1 802 3 view .LVU33
 133 0078 DFF8C890 		ldr	r9, .L3+12
 134 007c 2246     		mov	r2, r4
 135 007e 42F21301 		movw	r1, #8211
 136 0082 4846     		mov	r0, r9
 137 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 138              	.LVL0:
 803:Core/Src/main.c **** 
 804:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 805:Core/Src/main.c ****   HAL_GPIO_WritePin(RST_GPIO_Port, RST_Pin, GPIO_PIN_RESET);
 139              		.loc 1 805 3 view .LVU34
 140 0088 DFF8BC80 		ldr	r8, .L3+16
 141 008c 2246     		mov	r2, r4
 142 008e 4021     		movs	r1, #64
 143 0090 4046     		mov	r0, r8
 144 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 145              	.LVL1:
 806:Core/Src/main.c **** 
 807:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 808:Core/Src/main.c ****   HAL_GPIO_WritePin(DEV1_RST_GPIO_Port, DEV1_RST_Pin, GPIO_PIN_RESET);
 146              		.loc 1 808 3 view .LVU35
 147 0096 294E     		ldr	r6, .L3+4
 148 0098 2246     		mov	r2, r4
 149 009a 0121     		movs	r1, #1
 150 009c 3046     		mov	r0, r6
 151 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL2:
 809:Core/Src/main.c **** 
 810:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 811:Core/Src/main.c ****   HAL_GPIO_WritePin(DEV3_RST_GPIO_Port, DEV3_RST_Pin, GPIO_PIN_RESET);
 153              		.loc 1 811 3 view .LVU36
 154 00a2 274F     		ldr	r7, .L3+8
 155 00a4 2246     		mov	r2, r4
 156 00a6 0421     		movs	r1, #4
 157 00a8 3846     		mov	r0, r7
 158 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 159              	.LVL3:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 18


 812:Core/Src/main.c **** 
 813:Core/Src/main.c ****   /*Configure GPIO pins : LED_Pin DEV0_RST_Pin SPI2_CS_Pin DC_Pin */
 814:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin|DEV0_RST_Pin|SPI2_CS_Pin|DC_Pin;
 160              		.loc 1 814 3 view .LVU37
 161              		.loc 1 814 23 is_stmt 0 view .LVU38
 162 00ae 42F21303 		movw	r3, #8211
 163 00b2 0593     		str	r3, [sp, #20]
 815:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 815 3 is_stmt 1 view .LVU39
 165              		.loc 1 815 24 is_stmt 0 view .LVU40
 166 00b4 0125     		movs	r5, #1
 167 00b6 0695     		str	r5, [sp, #24]
 816:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 168              		.loc 1 816 3 is_stmt 1 view .LVU41
 169              		.loc 1 816 24 is_stmt 0 view .LVU42
 170 00b8 0794     		str	r4, [sp, #28]
 817:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 171              		.loc 1 817 3 is_stmt 1 view .LVU43
 172              		.loc 1 817 25 is_stmt 0 view .LVU44
 173 00ba 0894     		str	r4, [sp, #32]
 818:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 174              		.loc 1 818 3 is_stmt 1 view .LVU45
 175 00bc 05A9     		add	r1, sp, #20
 176 00be 4846     		mov	r0, r9
 177 00c0 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL4:
 819:Core/Src/main.c **** 
 820:Core/Src/main.c ****   /*Configure GPIO pin : RST_Pin */
 821:Core/Src/main.c ****   GPIO_InitStruct.Pin = RST_Pin;
 179              		.loc 1 821 3 view .LVU46
 180              		.loc 1 821 23 is_stmt 0 view .LVU47
 181 00c4 4023     		movs	r3, #64
 182 00c6 0593     		str	r3, [sp, #20]
 822:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 822 3 is_stmt 1 view .LVU48
 184              		.loc 1 822 24 is_stmt 0 view .LVU49
 185 00c8 0695     		str	r5, [sp, #24]
 823:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 823 3 is_stmt 1 view .LVU50
 187              		.loc 1 823 24 is_stmt 0 view .LVU51
 188 00ca 0794     		str	r4, [sp, #28]
 824:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 824 3 is_stmt 1 view .LVU52
 190              		.loc 1 824 25 is_stmt 0 view .LVU53
 191 00cc 0894     		str	r4, [sp, #32]
 825:Core/Src/main.c ****   HAL_GPIO_Init(RST_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 825 3 is_stmt 1 view .LVU54
 193 00ce 05A9     		add	r1, sp, #20
 194 00d0 4046     		mov	r0, r8
 195 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL5:
 826:Core/Src/main.c **** 
 827:Core/Src/main.c ****   /*Configure GPIO pin : DEV1_RST_Pin */
 828:Core/Src/main.c ****   GPIO_InitStruct.Pin = DEV1_RST_Pin;
 197              		.loc 1 828 3 view .LVU55
 198              		.loc 1 828 23 is_stmt 0 view .LVU56
 199 00d6 0595     		str	r5, [sp, #20]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 19


 829:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 200              		.loc 1 829 3 is_stmt 1 view .LVU57
 201              		.loc 1 829 24 is_stmt 0 view .LVU58
 202 00d8 0695     		str	r5, [sp, #24]
 830:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 203              		.loc 1 830 3 is_stmt 1 view .LVU59
 204              		.loc 1 830 24 is_stmt 0 view .LVU60
 205 00da 0794     		str	r4, [sp, #28]
 831:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 206              		.loc 1 831 3 is_stmt 1 view .LVU61
 207              		.loc 1 831 25 is_stmt 0 view .LVU62
 208 00dc 0894     		str	r4, [sp, #32]
 832:Core/Src/main.c ****   HAL_GPIO_Init(DEV1_RST_GPIO_Port, &GPIO_InitStruct);
 209              		.loc 1 832 3 is_stmt 1 view .LVU63
 210 00de 05A9     		add	r1, sp, #20
 211 00e0 3046     		mov	r0, r6
 212 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL6:
 833:Core/Src/main.c **** 
 834:Core/Src/main.c ****   /*Configure GPIO pin : DEV3_RST_Pin */
 835:Core/Src/main.c ****   GPIO_InitStruct.Pin = DEV3_RST_Pin;
 214              		.loc 1 835 3 view .LVU64
 215              		.loc 1 835 23 is_stmt 0 view .LVU65
 216 00e6 0423     		movs	r3, #4
 217 00e8 0593     		str	r3, [sp, #20]
 836:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 218              		.loc 1 836 3 is_stmt 1 view .LVU66
 219              		.loc 1 836 24 is_stmt 0 view .LVU67
 220 00ea 0695     		str	r5, [sp, #24]
 837:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 221              		.loc 1 837 3 is_stmt 1 view .LVU68
 222              		.loc 1 837 24 is_stmt 0 view .LVU69
 223 00ec 0794     		str	r4, [sp, #28]
 838:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 224              		.loc 1 838 3 is_stmt 1 view .LVU70
 225              		.loc 1 838 25 is_stmt 0 view .LVU71
 226 00ee 0894     		str	r4, [sp, #32]
 839:Core/Src/main.c ****   HAL_GPIO_Init(DEV3_RST_GPIO_Port, &GPIO_InitStruct);
 227              		.loc 1 839 3 is_stmt 1 view .LVU72
 228 00f0 05A9     		add	r1, sp, #20
 229 00f2 3846     		mov	r0, r7
 230 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 231              	.LVL7:
 840:Core/Src/main.c **** 
 841:Core/Src/main.c ****   /*Configure GPIO pins : ENC_KEY_Pin ENC_S2_Pin */
 842:Core/Src/main.c ****   GPIO_InitStruct.Pin = ENC_KEY_Pin|ENC_S2_Pin;
 232              		.loc 1 842 3 view .LVU73
 233              		.loc 1 842 23 is_stmt 0 view .LVU74
 234 00f8 4FF4C073 		mov	r3, #384
 235 00fc 0593     		str	r3, [sp, #20]
 843:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 236              		.loc 1 843 3 is_stmt 1 view .LVU75
 237              		.loc 1 843 24 is_stmt 0 view .LVU76
 238 00fe 0694     		str	r4, [sp, #24]
 844:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 1 844 3 is_stmt 1 view .LVU77
 240              		.loc 1 844 24 is_stmt 0 view .LVU78
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 20


 241 0100 0794     		str	r4, [sp, #28]
 845:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 242              		.loc 1 845 3 is_stmt 1 view .LVU79
 243 0102 05A9     		add	r1, sp, #20
 244 0104 3046     		mov	r0, r6
 245 0106 FFF7FEFF 		bl	HAL_GPIO_Init
 246              	.LVL8:
 846:Core/Src/main.c **** 
 847:Core/Src/main.c ****   /*Configure GPIO pin : ENC_S1_Pin */
 848:Core/Src/main.c ****   GPIO_InitStruct.Pin = ENC_S1_Pin;
 247              		.loc 1 848 3 view .LVU80
 248              		.loc 1 848 23 is_stmt 0 view .LVU81
 249 010a 4FF40073 		mov	r3, #512
 250 010e 0593     		str	r3, [sp, #20]
 849:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 251              		.loc 1 849 3 is_stmt 1 view .LVU82
 252              		.loc 1 849 24 is_stmt 0 view .LVU83
 253 0110 4FF44413 		mov	r3, #3211264
 254 0114 0693     		str	r3, [sp, #24]
 850:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 255              		.loc 1 850 3 is_stmt 1 view .LVU84
 256              		.loc 1 850 24 is_stmt 0 view .LVU85
 257 0116 0794     		str	r4, [sp, #28]
 851:Core/Src/main.c ****   HAL_GPIO_Init(ENC_S1_GPIO_Port, &GPIO_InitStruct);
 258              		.loc 1 851 3 is_stmt 1 view .LVU86
 259 0118 05A9     		add	r1, sp, #20
 260 011a 3046     		mov	r0, r6
 261 011c FFF7FEFF 		bl	HAL_GPIO_Init
 262              	.LVL9:
 852:Core/Src/main.c **** 
 853:Core/Src/main.c ****   /* EXTI interrupt init*/
 854:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 263              		.loc 1 854 3 view .LVU87
 264 0120 2246     		mov	r2, r4
 265 0122 2146     		mov	r1, r4
 266 0124 1720     		movs	r0, #23
 267 0126 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 268              	.LVL10:
 855:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 269              		.loc 1 855 3 view .LVU88
 270 012a 1720     		movs	r0, #23
 271 012c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 272              	.LVL11:
 856:Core/Src/main.c **** 
 857:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 858:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 859:Core/Src/main.c **** }
 273              		.loc 1 859 1 is_stmt 0 view .LVU89
 274 0130 0BB0     		add	sp, sp, #44
 275              		.cfi_def_cfa_offset 28
 276              		@ sp needed
 277 0132 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 278              	.L4:
 279 0136 00BF     		.align	2
 280              	.L3:
 281 0138 00380240 		.word	1073887232
 282 013c 00040240 		.word	1073873920
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 21


 283 0140 000C0240 		.word	1073875968
 284 0144 00080240 		.word	1073874944
 285 0148 00000240 		.word	1073872896
 286              		.cfi_endproc
 287              	.LFE143:
 289              		.section	.text.MX_DMA_Init,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	MX_DMA_Init:
 296              	.LFB142:
 752:Core/Src/main.c **** 
 297              		.loc 1 752 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 10B5     		push	{r4, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 4, -8
 304              		.cfi_offset 14, -4
 305 0002 82B0     		sub	sp, sp, #8
 306              		.cfi_def_cfa_offset 16
 755:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 307              		.loc 1 755 3 view .LVU91
 308              	.LBB9:
 755:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 309              		.loc 1 755 3 view .LVU92
 310 0004 0024     		movs	r4, #0
 311 0006 0094     		str	r4, [sp]
 755:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 312              		.loc 1 755 3 view .LVU93
 313 0008 264B     		ldr	r3, .L7
 314 000a 1A6B     		ldr	r2, [r3, #48]
 315 000c 42F48002 		orr	r2, r2, #4194304
 316 0010 1A63     		str	r2, [r3, #48]
 755:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 317              		.loc 1 755 3 view .LVU94
 318 0012 1A6B     		ldr	r2, [r3, #48]
 319 0014 02F48002 		and	r2, r2, #4194304
 320 0018 0092     		str	r2, [sp]
 755:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 321              		.loc 1 755 3 view .LVU95
 322 001a 009A     		ldr	r2, [sp]
 323              	.LBE9:
 755:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 324              		.loc 1 755 3 view .LVU96
 756:Core/Src/main.c **** 
 325              		.loc 1 756 3 view .LVU97
 326              	.LBB10:
 756:Core/Src/main.c **** 
 327              		.loc 1 756 3 view .LVU98
 328 001c 0194     		str	r4, [sp, #4]
 756:Core/Src/main.c **** 
 329              		.loc 1 756 3 view .LVU99
 330 001e 1A6B     		ldr	r2, [r3, #48]
 331 0020 42F40012 		orr	r2, r2, #2097152
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 22


 332 0024 1A63     		str	r2, [r3, #48]
 756:Core/Src/main.c **** 
 333              		.loc 1 756 3 view .LVU100
 334 0026 1B6B     		ldr	r3, [r3, #48]
 335 0028 03F40013 		and	r3, r3, #2097152
 336 002c 0193     		str	r3, [sp, #4]
 756:Core/Src/main.c **** 
 337              		.loc 1 756 3 view .LVU101
 338 002e 019B     		ldr	r3, [sp, #4]
 339              	.LBE10:
 756:Core/Src/main.c **** 
 340              		.loc 1 756 3 view .LVU102
 760:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 341              		.loc 1 760 3 view .LVU103
 342 0030 2246     		mov	r2, r4
 343 0032 2146     		mov	r1, r4
 344 0034 0B20     		movs	r0, #11
 345 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 346              	.LVL12:
 761:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 347              		.loc 1 761 3 view .LVU104
 348 003a 0B20     		movs	r0, #11
 349 003c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 350              	.LVL13:
 763:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 351              		.loc 1 763 3 view .LVU105
 352 0040 2246     		mov	r2, r4
 353 0042 2146     		mov	r1, r4
 354 0044 1020     		movs	r0, #16
 355 0046 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 356              	.LVL14:
 764:Core/Src/main.c ****   /* DMA1_Stream6_IRQn interrupt configuration */
 357              		.loc 1 764 3 view .LVU106
 358 004a 1020     		movs	r0, #16
 359 004c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 360              	.LVL15:
 766:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 361              		.loc 1 766 3 view .LVU107
 362 0050 2246     		mov	r2, r4
 363 0052 2146     		mov	r1, r4
 364 0054 1120     		movs	r0, #17
 365 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 366              	.LVL16:
 767:Core/Src/main.c ****   /* DMA1_Stream7_IRQn interrupt configuration */
 367              		.loc 1 767 3 view .LVU108
 368 005a 1120     		movs	r0, #17
 369 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 370              	.LVL17:
 769:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 371              		.loc 1 769 3 view .LVU109
 372 0060 2246     		mov	r2, r4
 373 0062 2146     		mov	r1, r4
 374 0064 2F20     		movs	r0, #47
 375 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 376              	.LVL18:
 770:Core/Src/main.c ****   /* DMA2_Stream1_IRQn interrupt configuration */
 377              		.loc 1 770 3 view .LVU110
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 23


 378 006a 2F20     		movs	r0, #47
 379 006c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 380              	.LVL19:
 772:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
 381              		.loc 1 772 3 view .LVU111
 382 0070 2246     		mov	r2, r4
 383 0072 2146     		mov	r1, r4
 384 0074 3920     		movs	r0, #57
 385 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 386              	.LVL20:
 773:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 387              		.loc 1 773 3 view .LVU112
 388 007a 3920     		movs	r0, #57
 389 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 390              	.LVL21:
 775:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 391              		.loc 1 775 3 view .LVU113
 392 0080 2246     		mov	r2, r4
 393 0082 2146     		mov	r1, r4
 394 0084 3A20     		movs	r0, #58
 395 0086 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 396              	.LVL22:
 776:Core/Src/main.c ****   /* DMA2_Stream6_IRQn interrupt configuration */
 397              		.loc 1 776 3 view .LVU114
 398 008a 3A20     		movs	r0, #58
 399 008c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 400              	.LVL23:
 778:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
 401              		.loc 1 778 3 view .LVU115
 402 0090 2246     		mov	r2, r4
 403 0092 2146     		mov	r1, r4
 404 0094 4520     		movs	r0, #69
 405 0096 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 406              	.LVL24:
 779:Core/Src/main.c **** 
 407              		.loc 1 779 3 view .LVU116
 408 009a 4520     		movs	r0, #69
 409 009c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 410              	.LVL25:
 781:Core/Src/main.c **** 
 411              		.loc 1 781 1 is_stmt 0 view .LVU117
 412 00a0 02B0     		add	sp, sp, #8
 413              		.cfi_def_cfa_offset 8
 414              		@ sp needed
 415 00a2 10BD     		pop	{r4, pc}
 416              	.L8:
 417              		.align	2
 418              	.L7:
 419 00a4 00380240 		.word	1073887232
 420              		.cfi_endproc
 421              	.LFE142:
 423              		.global	__aeabi_ddiv
 424              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 425              		.align	1
 426              		.global	HAL_UART_RxCpltCallback
 427              		.syntax unified
 428              		.thumb
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 24


 429              		.thumb_func
 431              	HAL_UART_RxCpltCallback:
 432              	.LVL26:
 433              	.LFB144:
 860:Core/Src/main.c **** 
 861:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 862:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 863:Core/Src/main.c **** {
 434              		.loc 1 863 1 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 16
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438              		.loc 1 863 1 is_stmt 0 view .LVU119
 439 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 440              		.cfi_def_cfa_offset 32
 441              		.cfi_offset 4, -32
 442              		.cfi_offset 5, -28
 443              		.cfi_offset 6, -24
 444              		.cfi_offset 7, -20
 445              		.cfi_offset 8, -16
 446              		.cfi_offset 9, -12
 447              		.cfi_offset 10, -8
 448              		.cfi_offset 14, -4
 449 0004 84B0     		sub	sp, sp, #16
 450              		.cfi_def_cfa_offset 48
 451 0006 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 453 0008 0024     		movs	r4, #0
 454 000a 2546     		mov	r5, r4
 864:Core/Src/main.c ****   /*
 865:Core/Src/main.c ****   COMMUNICATION PROTOCOL
 866:Core/Src/main.c ****   Master    Slave
 867:Core/Src/main.c ****   T      -> palette(L/T), type(S/T/B), (value), X(value), (symbol) ... LB0X250Y%
 868:Core/Src/main.c ****   G      -> value ... 754
 869:Core/Src/main.c ****   val    -> OK
 870:Core/Src/main.c ****   ON     -> OK
 871:Core/Src/main.c ****   OFF    -> OK
 872:Core/Src/main.c ****   S      -> S(state(0/1)) ... S1
 873:Core/Src/main.c ****   */
 874:Core/Src/main.c ****   //uint8_t rx_buff[10];
 875:Core/Src/main.c ****  //(rx_buff, ""); 
 876:Core/Src/main.c ****   // HAL_UART_Receive_DMA(deviceList[dev_num].uart, rx_buff, 9);
 877:Core/Src/main.c ****   uint8_t rx_buff[10];
 455              		.loc 1 877 3 is_stmt 1 view .LVU120
 878:Core/Src/main.c ****   HAL_UART_Receive_DMA(deviceList[dev_num].uart, rx_buff, 10);
 456              		.loc 1 878 3 view .LVU121
 457 000c 604B     		ldr	r3, .L29
 458 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 459 0010 9B01     		lsls	r3, r3, #6
 460 0012 0A22     		movs	r2, #10
 461 0014 391D     		adds	r1, r7, #4
 462 0016 5F48     		ldr	r0, .L29+4
 463              	.LVL27:
 464              		.loc 1 878 3 is_stmt 0 view .LVU122
 465 0018 C058     		ldr	r0, [r0, r3]
 466 001a FFF7FEFF 		bl	HAL_UART_Receive_DMA
 467              	.LVL28:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 25


 879:Core/Src/main.c ****   //HAL_UART_Receive_DMA(&huart5, rx_buff, 10);
 880:Core/Src/main.c **** //HAL_Delay(10);
 881:Core/Src/main.c ****   // if(trySIMInit == 1){
 882:Core/Src/main.c ****   //   if(rx_buff[0] == 79){
 883:Core/Src/main.c ****   //     sim.initState = 1;
 884:Core/Src/main.c ****   //     trySIMInit = 0;
 885:Core/Src/main.c ****   //   }
 886:Core/Src/main.c ****   //   return;
 887:Core/Src/main.c ****   // }
 888:Core/Src/main.c **** 
 889:Core/Src/main.c ****     // NEW CODE START
 890:Core/Src/main.c ****     // IF FIRST LETTER IS L OR T
 891:Core/Src/main.c ****   if(rx_buff[0] == 76 || rx_buff[0] == 84){
 468              		.loc 1 891 3 is_stmt 1 view .LVU123
 469              		.loc 1 891 13 is_stmt 0 view .LVU124
 470 001e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 471              		.loc 1 891 5 view .LVU125
 472 0020 4C2B     		cmp	r3, #76
 473 0022 08D0     		beq	.L10
 474              		.loc 1 891 23 discriminator 1 view .LVU126
 475 0024 542B     		cmp	r3, #84
 476 0026 06D0     		beq	.L10
 892:Core/Src/main.c ****     // IF L
 893:Core/Src/main.c ****     if (rx_buff[0] == 76){
 894:Core/Src/main.c ****       deviceList[dev_num].paletteType = LIGHT_PALETTE;
 895:Core/Src/main.c ****     }else{
 896:Core/Src/main.c ****       deviceList[dev_num].paletteType = TEMP_PALETTE;
 897:Core/Src/main.c ****     }
 898:Core/Src/main.c ****     // ENDIF
 899:Core/Src/main.c **** 
 900:Core/Src/main.c ****     // DEVICE MODE
 901:Core/Src/main.c ****     switch (rx_buff[1])
 902:Core/Src/main.c ****     {
 903:Core/Src/main.c ****     case 83:
 904:Core/Src/main.c ****       deviceList[dev_num].deviceMode = TYPE_SET_ONLY;
 905:Core/Src/main.c ****       break;
 906:Core/Src/main.c ****     case 84:
 907:Core/Src/main.c ****       deviceList[dev_num].deviceMode = TYPE_TEL_ONLY;
 908:Core/Src/main.c ****       break;
 909:Core/Src/main.c ****     case 66:
 910:Core/Src/main.c ****       deviceList[dev_num].deviceMode = TYPE_SET_TEL;
 911:Core/Src/main.c ****       break;
 912:Core/Src/main.c ****     }
 913:Core/Src/main.c ****     // ENDIF
 914:Core/Src/main.c **** 
 915:Core/Src/main.c ****     //GET MIN, MAX VALUE & SYMBOL START
 916:Core/Src/main.c ****     uint8_t minValueEndIndex;
 917:Core/Src/main.c ****     uint8_t maxValueEndIndex;
 918:Core/Src/main.c **** 
 919:Core/Src/main.c ****     for (int i = 2; i<10; i++){
 920:Core/Src/main.c ****       if(rx_buff[i] == 88){
 921:Core/Src/main.c ****         minValueEndIndex = i-1;
 922:Core/Src/main.c ****       }
 923:Core/Src/main.c ****       if(rx_buff[i] == 89){
 924:Core/Src/main.c ****         maxValueEndIndex = i-1;
 925:Core/Src/main.c ****         break;
 926:Core/Src/main.c ****       }
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 26


 927:Core/Src/main.c ****     }
 928:Core/Src/main.c **** 
 929:Core/Src/main.c ****     char minValueArr[minValueEndIndex-1];
 930:Core/Src/main.c ****     char maxValueArr[maxValueEndIndex-minValueEndIndex-1];
 931:Core/Src/main.c **** 
 932:Core/Src/main.c ****     memcpy(minValueArr, &rx_buff[2], (minValueEndIndex-1) * sizeof(char));
 933:Core/Src/main.c **** 
 934:Core/Src/main.c ****     memcpy(maxValueArr, &rx_buff[minValueEndIndex+2], (maxValueEndIndex-minValueEndIndex) * sizeof(
 935:Core/Src/main.c **** 
 936:Core/Src/main.c ****     deviceList[dev_num].minValue = atof(minValueArr);
 937:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 938:Core/Src/main.c **** 
 939:Core/Src/main.c ****     deviceList[dev_num].symbol = rx_buff[maxValueEndIndex+2];
 940:Core/Src/main.c **** 
 941:Core/Src/main.c ****     deviceList[dev_num].tx_buff[0] = 71;
 942:Core/Src/main.c ****     // GET MIN, MAX VALUE & SYMBOL END
 943:Core/Src/main.c ****     if(state == STATE_INIT){
 944:Core/Src/main.c ****       deviceList[dev_num].initState = DEV_STATE_IN;
 945:Core/Src/main.c ****       dev_num++;
 946:Core/Src/main.c ****     }
 947:Core/Src/main.c ****   }
 948:Core/Src/main.c ****   // else if (rx_buff[0] == 83){
 949:Core/Src/main.c ****   //   if(atoi(rx_buff[1]) == 1){
 950:Core/Src/main.c ****   //     deviceList[dev_num].isDevOn = 1;
 951:Core/Src/main.c ****   //   }else{
 952:Core/Src/main.c ****   //     deviceList[dev_num].isDevOn = 0;
 953:Core/Src/main.c ****   //   }
 954:Core/Src/main.c ****   // }
 955:Core/Src/main.c ****   else if(rx_buff[0] == 79){
 477              		.loc 1 955 8 is_stmt 1 view .LVU127
 478              		.loc 1 955 10 is_stmt 0 view .LVU128
 479 0028 4F2B     		cmp	r3, #79
 480 002a 40F09B80 		bne	.L25
 956:Core/Src/main.c ****     transmitMode = TRANSMIT_MODE_GET;
 481              		.loc 1 956 5 is_stmt 1 view .LVU129
 482              		.loc 1 956 18 is_stmt 0 view .LVU130
 483 002e 5A4B     		ldr	r3, .L29+8
 484 0030 0022     		movs	r2, #0
 485 0032 1A70     		strb	r2, [r3]
 486 0034 8DE0     		b	.L24
 487              	.L10:
 488              	.LBB11:
 893:Core/Src/main.c ****       deviceList[dev_num].paletteType = LIGHT_PALETTE;
 489              		.loc 1 893 5 is_stmt 1 view .LVU131
 893:Core/Src/main.c ****       deviceList[dev_num].paletteType = LIGHT_PALETTE;
 490              		.loc 1 893 8 is_stmt 0 view .LVU132
 491 0036 4C2B     		cmp	r3, #76
 492 0038 10D0     		beq	.L27
 896:Core/Src/main.c ****     }
 493              		.loc 1 896 7 is_stmt 1 view .LVU133
 896:Core/Src/main.c ****     }
 494              		.loc 1 896 26 is_stmt 0 view .LVU134
 495 003a 554B     		ldr	r3, .L29
 496 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 896:Core/Src/main.c ****     }
 497              		.loc 1 896 39 view .LVU135
 498 003e 554B     		ldr	r3, .L29+4
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 27


 499 0040 03EB8213 		add	r3, r3, r2, lsl #6
 500 0044 0022     		movs	r2, #0
 501 0046 83F82A20 		strb	r2, [r3, #42]
 502              	.L13:
 901:Core/Src/main.c ****     {
 503              		.loc 1 901 5 is_stmt 1 view .LVU136
 901:Core/Src/main.c ****     {
 504              		.loc 1 901 20 is_stmt 0 view .LVU137
 505 004a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 901:Core/Src/main.c ****     {
 506              		.loc 1 901 5 view .LVU138
 507 004c 532B     		cmp	r3, #83
 508 004e 0ED0     		beq	.L14
 509 0050 542B     		cmp	r3, #84
 510 0052 14D0     		beq	.L15
 511 0054 422B     		cmp	r3, #66
 512 0056 1AD0     		beq	.L16
 513              	.L17:
 916:Core/Src/main.c ****     uint8_t maxValueEndIndex;
 514              		.loc 1 916 5 is_stmt 1 view .LVU139
 917:Core/Src/main.c **** 
 515              		.loc 1 917 5 view .LVU140
 919:Core/Src/main.c ****       if(rx_buff[i] == 88){
 516              		.loc 1 919 5 view .LVU141
 517              	.LBB12:
 919:Core/Src/main.c ****       if(rx_buff[i] == 88){
 518              		.loc 1 919 10 view .LVU142
 519              	.LVL29:
 919:Core/Src/main.c ****       if(rx_buff[i] == 88){
 520              		.loc 1 919 14 is_stmt 0 view .LVU143
 521 0058 0223     		movs	r3, #2
 919:Core/Src/main.c ****       if(rx_buff[i] == 88){
 522              		.loc 1 919 5 view .LVU144
 523 005a 23E0     		b	.L18
 524              	.LVL30:
 525              	.L27:
 919:Core/Src/main.c ****       if(rx_buff[i] == 88){
 526              		.loc 1 919 5 view .LVU145
 527              	.LBE12:
 894:Core/Src/main.c ****     }else{
 528              		.loc 1 894 7 is_stmt 1 view .LVU146
 894:Core/Src/main.c ****     }else{
 529              		.loc 1 894 26 is_stmt 0 view .LVU147
 530 005c 4C4B     		ldr	r3, .L29
 531 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 894:Core/Src/main.c ****     }else{
 532              		.loc 1 894 39 view .LVU148
 533 0060 4C4B     		ldr	r3, .L29+4
 534 0062 03EB8213 		add	r3, r3, r2, lsl #6
 535 0066 0122     		movs	r2, #1
 536 0068 83F82A20 		strb	r2, [r3, #42]
 537 006c EDE7     		b	.L13
 538              	.L14:
 904:Core/Src/main.c ****       break;
 539              		.loc 1 904 7 is_stmt 1 view .LVU149
 904:Core/Src/main.c ****       break;
 540              		.loc 1 904 26 is_stmt 0 view .LVU150
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 28


 541 006e 484B     		ldr	r3, .L29
 542 0070 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 904:Core/Src/main.c ****       break;
 543              		.loc 1 904 38 view .LVU151
 544 0072 484B     		ldr	r3, .L29+4
 545 0074 03EB8213 		add	r3, r3, r2, lsl #6
 546 0078 0122     		movs	r2, #1
 547 007a 5A71     		strb	r2, [r3, #5]
 905:Core/Src/main.c ****     case 84:
 548              		.loc 1 905 7 is_stmt 1 view .LVU152
 549 007c ECE7     		b	.L17
 550              	.L15:
 907:Core/Src/main.c ****       break;
 551              		.loc 1 907 7 view .LVU153
 907:Core/Src/main.c ****       break;
 552              		.loc 1 907 26 is_stmt 0 view .LVU154
 553 007e 444B     		ldr	r3, .L29
 554 0080 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 907:Core/Src/main.c ****       break;
 555              		.loc 1 907 38 view .LVU155
 556 0082 444B     		ldr	r3, .L29+4
 557 0084 03EB8213 		add	r3, r3, r2, lsl #6
 558 0088 0222     		movs	r2, #2
 559 008a 5A71     		strb	r2, [r3, #5]
 908:Core/Src/main.c ****     case 66:
 560              		.loc 1 908 7 is_stmt 1 view .LVU156
 561 008c E4E7     		b	.L17
 562              	.L16:
 910:Core/Src/main.c ****       break;
 563              		.loc 1 910 7 view .LVU157
 910:Core/Src/main.c ****       break;
 564              		.loc 1 910 26 is_stmt 0 view .LVU158
 565 008e 404B     		ldr	r3, .L29
 566 0090 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 910:Core/Src/main.c ****       break;
 567              		.loc 1 910 38 view .LVU159
 568 0092 404B     		ldr	r3, .L29+4
 569 0094 03EB8213 		add	r3, r3, r2, lsl #6
 570 0098 0022     		movs	r2, #0
 571 009a 5A71     		strb	r2, [r3, #5]
 911:Core/Src/main.c ****     }
 572              		.loc 1 911 7 is_stmt 1 view .LVU160
 573 009c DCE7     		b	.L17
 574              	.LVL31:
 575              	.L19:
 576              	.LBB13:
 923:Core/Src/main.c ****         maxValueEndIndex = i-1;
 577              		.loc 1 923 7 view .LVU161
 923:Core/Src/main.c ****         maxValueEndIndex = i-1;
 578              		.loc 1 923 9 is_stmt 0 view .LVU162
 579 009e 592A     		cmp	r2, #89
 580 00a0 0DD0     		beq	.L28
 919:Core/Src/main.c ****       if(rx_buff[i] == 88){
 581              		.loc 1 919 28 is_stmt 1 discriminator 2 view .LVU163
 582 00a2 0133     		adds	r3, r3, #1
 583              	.LVL32:
 584              	.L18:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 29


 919:Core/Src/main.c ****       if(rx_buff[i] == 88){
 585              		.loc 1 919 22 discriminator 1 view .LVU164
 586 00a4 092B     		cmp	r3, #9
 587 00a6 0DDC     		bgt	.L21
 920:Core/Src/main.c ****         minValueEndIndex = i-1;
 588              		.loc 1 920 7 view .LVU165
 920:Core/Src/main.c ****         minValueEndIndex = i-1;
 589              		.loc 1 920 17 is_stmt 0 view .LVU166
 590 00a8 03F11002 		add	r2, r3, #16
 591 00ac 3A44     		add	r2, r2, r7
 592 00ae 12F80C2C 		ldrb	r2, [r2, #-12]	@ zero_extendqisi2
 920:Core/Src/main.c ****         minValueEndIndex = i-1;
 593              		.loc 1 920 9 view .LVU167
 594 00b2 582A     		cmp	r2, #88
 595 00b4 F3D1     		bne	.L19
 921:Core/Src/main.c ****       }
 596              		.loc 1 921 9 is_stmt 1 view .LVU168
 921:Core/Src/main.c ****       }
 597              		.loc 1 921 29 is_stmt 0 view .LVU169
 598 00b6 DCB2     		uxtb	r4, r3
 599              	.LVL33:
 921:Core/Src/main.c ****       }
 600              		.loc 1 921 26 view .LVU170
 601 00b8 013C     		subs	r4, r4, #1
 602 00ba E4B2     		uxtb	r4, r4
 603              	.LVL34:
 921:Core/Src/main.c ****       }
 604              		.loc 1 921 26 view .LVU171
 605 00bc EFE7     		b	.L19
 606              	.L28:
 924:Core/Src/main.c ****         break;
 607              		.loc 1 924 9 is_stmt 1 view .LVU172
 924:Core/Src/main.c ****         break;
 608              		.loc 1 924 29 is_stmt 0 view .LVU173
 609 00be DBB2     		uxtb	r3, r3
 610              	.LVL35:
 924:Core/Src/main.c ****         break;
 611              		.loc 1 924 26 view .LVU174
 612 00c0 013B     		subs	r3, r3, #1
 613 00c2 DDB2     		uxtb	r5, r3
 614              	.LVL36:
 925:Core/Src/main.c ****       }
 615              		.loc 1 925 9 is_stmt 1 view .LVU175
 616              	.L21:
 925:Core/Src/main.c ****       }
 617              		.loc 1 925 9 is_stmt 0 view .LVU176
 618              	.LBE13:
 929:Core/Src/main.c ****     char maxValueArr[maxValueEndIndex-minValueEndIndex-1];
 619              		.loc 1 929 5 is_stmt 1 view .LVU177
 620 00c4 6E46     		mov	r6, sp
 621              	.LVL37:
 929:Core/Src/main.c ****     char maxValueArr[maxValueEndIndex-minValueEndIndex-1];
 622              		.loc 1 929 10 is_stmt 0 discriminator 1 view .LVU178
 623 00c6 A31D     		adds	r3, r4, #6
 624 00c8 23F00703 		bic	r3, r3, #7
 625 00cc ADEB030D 		sub	sp, sp, r3
 626 00d0 EA46     		mov	r10, sp
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 30


 627              	.LVL38:
 930:Core/Src/main.c **** 
 628              		.loc 1 930 5 is_stmt 1 view .LVU179
 930:Core/Src/main.c **** 
 629              		.loc 1 930 38 is_stmt 0 view .LVU180
 630 00d2 A5EB0408 		sub	r8, r5, r4
 631              	.LVL39:
 930:Core/Src/main.c **** 
 632              		.loc 1 930 10 view .LVU181
 633 00d6 08F10603 		add	r3, r8, #6
 634 00da 23F00703 		bic	r3, r3, #7
 635 00de ADEB030D 		sub	sp, sp, r3
 636              	.LVL40:
 932:Core/Src/main.c **** 
 637              		.loc 1 932 5 is_stmt 1 view .LVU182
 638 00e2 621E     		subs	r2, r4, #1
 639 00e4 B91D     		adds	r1, r7, #6
 640 00e6 5046     		mov	r0, r10
 641 00e8 FFF7FEFF 		bl	memcpy
 642              	.LVL41:
 934:Core/Src/main.c **** 
 643              		.loc 1 934 5 view .LVU183
 934:Core/Src/main.c **** 
 644              		.loc 1 934 50 is_stmt 0 view .LVU184
 645 00ec A11C     		adds	r1, r4, #2
 934:Core/Src/main.c **** 
 646              		.loc 1 934 5 view .LVU185
 647 00ee 4246     		mov	r2, r8
 648 00f0 3B1D     		adds	r3, r7, #4
 649 00f2 1944     		add	r1, r1, r3
 650 00f4 6846     		mov	r0, sp
 651 00f6 FFF7FEFF 		bl	memcpy
 652              	.LVL42:
 936:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 653              		.loc 1 936 5 is_stmt 1 view .LVU186
 936:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 654              		.loc 1 936 24 is_stmt 0 view .LVU187
 655 00fa DFF89480 		ldr	r8, .L29
 656              	.LVL43:
 936:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 657              		.loc 1 936 24 view .LVU188
 658 00fe 98F80090 		ldrb	r9, [r8]	@ zero_extendqisi2
 936:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 659              		.loc 1 936 36 view .LVU189
 660 0102 5046     		mov	r0, r10
 661 0104 FFF7FEFF 		bl	atof
 662              	.LVL44:
 936:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 663              		.loc 1 936 34 discriminator 1 view .LVU190
 664 0108 224C     		ldr	r4, .L29+4
 665              	.LVL45:
 936:Core/Src/main.c ****     deviceList[dev_num].maxValue = atof(maxValueArr);    
 666              		.loc 1 936 34 discriminator 1 view .LVU191
 667 010a 04EB8919 		add	r9, r4, r9, lsl #6
 668 010e 89ED060B 		vstr.64	d0, [r9, #24]
 937:Core/Src/main.c **** 
 669              		.loc 1 937 5 is_stmt 1 view .LVU192
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 31


 937:Core/Src/main.c **** 
 670              		.loc 1 937 24 is_stmt 0 view .LVU193
 671 0112 98F80090 		ldrb	r9, [r8]	@ zero_extendqisi2
 937:Core/Src/main.c **** 
 672              		.loc 1 937 36 view .LVU194
 673 0116 6846     		mov	r0, sp
 674 0118 FFF7FEFF 		bl	atof
 675              	.LVL46:
 937:Core/Src/main.c **** 
 676              		.loc 1 937 34 discriminator 1 view .LVU195
 677 011c 04EB8919 		add	r9, r4, r9, lsl #6
 678 0120 89ED080B 		vstr.64	d0, [r9, #32]
 939:Core/Src/main.c **** 
 679              		.loc 1 939 5 is_stmt 1 view .LVU196
 939:Core/Src/main.c **** 
 680              		.loc 1 939 24 is_stmt 0 view .LVU197
 681 0124 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 939:Core/Src/main.c **** 
 682              		.loc 1 939 41 view .LVU198
 683 0128 05F11203 		add	r3, r5, #18
 684 012c 3B44     		add	r3, r3, r7
 685 012e 13F80C3C 		ldrb	r3, [r3, #-12]	@ zero_extendqisi2
 939:Core/Src/main.c **** 
 686              		.loc 1 939 32 view .LVU199
 687 0132 04EB8214 		add	r4, r4, r2, lsl #6
 688 0136 84F83F30 		strb	r3, [r4, #63]
 941:Core/Src/main.c ****     // GET MIN, MAX VALUE & SYMBOL END
 689              		.loc 1 941 5 is_stmt 1 view .LVU200
 941:Core/Src/main.c ****     // GET MIN, MAX VALUE & SYMBOL END
 690              		.loc 1 941 36 is_stmt 0 view .LVU201
 691 013a 4723     		movs	r3, #71
 692 013c 84F83530 		strb	r3, [r4, #53]
 943:Core/Src/main.c ****       deviceList[dev_num].initState = DEV_STATE_IN;
 693              		.loc 1 943 5 is_stmt 1 view .LVU202
 943:Core/Src/main.c ****       deviceList[dev_num].initState = DEV_STATE_IN;
 694              		.loc 1 943 14 is_stmt 0 view .LVU203
 695 0140 164B     		ldr	r3, .L29+12
 696 0142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 943:Core/Src/main.c ****       deviceList[dev_num].initState = DEV_STATE_IN;
 697              		.loc 1 943 7 view .LVU204
 698 0144 23B9     		cbnz	r3, .L23
 944:Core/Src/main.c ****       dev_num++;
 699              		.loc 1 944 7 is_stmt 1 view .LVU205
 944:Core/Src/main.c ****       dev_num++;
 700              		.loc 1 944 37 is_stmt 0 view .LVU206
 701 0146 0121     		movs	r1, #1
 702 0148 2171     		strb	r1, [r4, #4]
 945:Core/Src/main.c ****     }
 703              		.loc 1 945 7 is_stmt 1 view .LVU207
 945:Core/Src/main.c ****     }
 704              		.loc 1 945 14 is_stmt 0 view .LVU208
 705 014a 0A44     		add	r2, r2, r1
 706 014c 88F80020 		strb	r2, [r8]
 707              	.L23:
 708 0150 B546     		mov	sp, r6
 709              	.LVL47:
 710              	.L24:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 32


 945:Core/Src/main.c ****     }
 711              		.loc 1 945 14 view .LVU209
 712              	.LBE11:
 957:Core/Src/main.c ****   }else{// ISSUE START
 958:Core/Src/main.c ****     //deviceList[dev_num].currentValue = atof(rx_buff);
 959:Core/Src/main.c ****     deviceList[dev_num].currentValue = atof(rx_buff);
 960:Core/Src/main.c ****     deviceList[dev_num].currentValue /= 10;
 961:Core/Src/main.c ****   }// ISSUE END
 962:Core/Src/main.c ****   // NEW CODE END
 963:Core/Src/main.c **** 
 964:Core/Src/main.c ****   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 713              		.loc 1 964 3 is_stmt 1 view .LVU210
 714 0152 4FF40051 		mov	r1, #8192
 715 0156 1248     		ldr	r0, .L29+16
 716 0158 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 717              	.LVL48:
 965:Core/Src/main.c **** }
 718              		.loc 1 965 1 is_stmt 0 view .LVU211
 719 015c 1037     		adds	r7, r7, #16
 720              		.cfi_remember_state
 721              		.cfi_def_cfa_offset 32
 722 015e BD46     		mov	sp, r7
 723              		.cfi_def_cfa_register 13
 724              		@ sp needed
 725 0160 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 726              	.L25:
 727              		.cfi_restore_state
 959:Core/Src/main.c ****     deviceList[dev_num].currentValue /= 10;
 728              		.loc 1 959 5 is_stmt 1 view .LVU212
 959:Core/Src/main.c ****     deviceList[dev_num].currentValue /= 10;
 729              		.loc 1 959 24 is_stmt 0 view .LVU213
 730 0164 0A4E     		ldr	r6, .L29
 731 0166 3578     		ldrb	r5, [r6]	@ zero_extendqisi2
 959:Core/Src/main.c ****     deviceList[dev_num].currentValue /= 10;
 732              		.loc 1 959 40 view .LVU214
 733 0168 381D     		adds	r0, r7, #4
 734 016a FFF7FEFF 		bl	atof
 735              	.LVL49:
 959:Core/Src/main.c ****     deviceList[dev_num].currentValue /= 10;
 736              		.loc 1 959 38 discriminator 1 view .LVU215
 737 016e 094C     		ldr	r4, .L29+4
 738 0170 04EB8515 		add	r5, r4, r5, lsl #6
 739 0174 85ED020B 		vstr.64	d0, [r5, #8]
 960:Core/Src/main.c ****   }// ISSUE END
 740              		.loc 1 960 5 is_stmt 1 view .LVU216
 960:Core/Src/main.c ****   }// ISSUE END
 741              		.loc 1 960 24 is_stmt 0 view .LVU217
 742 0178 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 743 017a 04EB8314 		add	r4, r4, r3, lsl #6
 960:Core/Src/main.c ****   }// ISSUE END
 744              		.loc 1 960 38 view .LVU218
 745 017e 0022     		movs	r2, #0
 746 0180 084B     		ldr	r3, .L29+20
 747 0182 D4E90201 		ldrd	r0, [r4, #8]
 748 0186 FFF7FEFF 		bl	__aeabi_ddiv
 749              	.LVL50:
 750 018a C4E90201 		strd	r0, [r4, #8]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 33


 751 018e E0E7     		b	.L24
 752              	.L30:
 753              		.align	2
 754              	.L29:
 755 0190 00000000 		.word	dev_num
 756 0194 00000000 		.word	deviceList
 757 0198 00000000 		.word	transmitMode
 758 019c 00000000 		.word	state
 759 01a0 00080240 		.word	1073874944
 760 01a4 00002440 		.word	1076101120
 761              		.cfi_endproc
 762              	.LFE144:
 764              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 765              		.align	1
 766              		.global	HAL_GPIO_EXTI_Callback
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 771              	HAL_GPIO_EXTI_Callback:
 772              	.LVL51:
 773              	.LFB145:
 966:Core/Src/main.c **** 
 967:Core/Src/main.c **** 
 968:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 969:Core/Src/main.c **** {
 774              		.loc 1 969 1 is_stmt 1 view -0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 970:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_9) {
 778              		.loc 1 970 3 view .LVU220
 779              		.loc 1 970 5 is_stmt 0 view .LVU221
 780 0000 B0F5007F 		cmp	r0, #512
 781 0004 01D0     		beq	.L38
 971:Core/Src/main.c ****     tickEnc(&enc);
 972:Core/Src/main.c ****   } else {
 973:Core/Src/main.c ****       __NOP();
 782              		.loc 1 973 7 is_stmt 1 view .LVU222
 783              		.syntax unified
 784              	@ 973 "Core/Src/main.c" 1
 785 0006 00BF     		nop
 786              	@ 0 "" 2
 787              		.thumb
 788              		.syntax unified
 789 0008 7047     		bx	lr
 790              	.L38:
 969:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_9) {
 791              		.loc 1 969 1 is_stmt 0 view .LVU223
 792 000a 08B5     		push	{r3, lr}
 793              		.cfi_def_cfa_offset 8
 794              		.cfi_offset 3, -8
 795              		.cfi_offset 14, -4
 971:Core/Src/main.c ****     tickEnc(&enc);
 796              		.loc 1 971 5 is_stmt 1 view .LVU224
 797 000c 0148     		ldr	r0, .L39
 798              	.LVL52:
 971:Core/Src/main.c ****     tickEnc(&enc);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 34


 799              		.loc 1 971 5 is_stmt 0 view .LVU225
 800 000e FFF7FEFF 		bl	tickEnc
 801              	.LVL53:
 974:Core/Src/main.c ****   }
 975:Core/Src/main.c **** }
 802              		.loc 1 975 1 view .LVU226
 803 0012 08BD     		pop	{r3, pc}
 804              	.L40:
 805              		.align	2
 806              	.L39:
 807 0014 00000000 		.word	enc
 808              		.cfi_endproc
 809              	.LFE145:
 811              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 812              		.align	2
 813              	.LC0:
 814 0000 50414E49 		.ascii	"PANIC!\000"
 814      432100
 815              		.section	.text.Error_Handler,"ax",%progbits
 816              		.align	1
 817              		.global	Error_Handler
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 822              	Error_Handler:
 823              	.LFB146:
 976:Core/Src/main.c **** /* USER CODE END 4 */
 977:Core/Src/main.c **** 
 978:Core/Src/main.c **** /**
 979:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 980:Core/Src/main.c ****   * @retval None
 981:Core/Src/main.c ****   */
 982:Core/Src/main.c **** void Error_Handler(void)
 983:Core/Src/main.c **** {
 824              		.loc 1 983 1 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ Volatile: function does not return.
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829 0000 08B5     		push	{r3, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 3, -8
 832              		.cfi_offset 14, -4
 984:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 985:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 986:Core/Src/main.c ****   __disable_irq();
 833              		.loc 1 986 3 view .LVU228
 834              	.LBB14:
 835              	.LBI14:
 836              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 35


   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 36


  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 37


 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 38


 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 39


 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 40


 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 41


 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 42


 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 43


 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 44


 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 45


 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 46


 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 47


 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 48


 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 49


 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 50


 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 51


 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 837              		.loc 2 960 27 view .LVU229
 838              	.LBB15:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 839              		.loc 2 962 3 view .LVU230
 840              		.syntax unified
 841              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 842 0002 72B6     		cpsid i
 843              	@ 0 "" 2
 844              		.thumb
 845              		.syntax unified
 846              	.L42:
 847              	.LBE15:
 848              	.LBE14:
 987:Core/Src/main.c ****   while (1)
 849              		.loc 1 987 3 view .LVU231
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 52


 988:Core/Src/main.c ****   {
 989:Core/Src/main.c ****     Show_Message("PANIC!", 60000);
 850              		.loc 1 989 5 discriminator 1 view .LVU232
 851 0004 4EF66021 		movw	r1, #60000
 852 0008 0148     		ldr	r0, .L44
 853 000a FFF7FEFF 		bl	Show_Message
 854              	.LVL54:
 987:Core/Src/main.c ****   while (1)
 855              		.loc 1 987 9 view .LVU233
 856 000e F9E7     		b	.L42
 857              	.L45:
 858              		.align	2
 859              	.L44:
 860 0010 00000000 		.word	.LC0
 861              		.cfi_endproc
 862              	.LFE146:
 864              		.section	.text.MX_SPI1_Init,"ax",%progbits
 865              		.align	1
 866              		.syntax unified
 867              		.thumb
 868              		.thumb_func
 870              	MX_SPI1_Init:
 871              	.LFB137:
 579:Core/Src/main.c **** 
 872              		.loc 1 579 1 view -0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876 0000 08B5     		push	{r3, lr}
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 3, -8
 879              		.cfi_offset 14, -4
 589:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 880              		.loc 1 589 3 view .LVU235
 589:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 881              		.loc 1 589 18 is_stmt 0 view .LVU236
 882 0002 0E48     		ldr	r0, .L50
 883 0004 0E4B     		ldr	r3, .L50+4
 884 0006 0360     		str	r3, [r0]
 590:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 885              		.loc 1 590 3 is_stmt 1 view .LVU237
 590:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_1LINE;
 886              		.loc 1 590 19 is_stmt 0 view .LVU238
 887 0008 4FF48273 		mov	r3, #260
 888 000c 4360     		str	r3, [r0, #4]
 591:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 889              		.loc 1 591 3 is_stmt 1 view .LVU239
 591:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 890              		.loc 1 591 24 is_stmt 0 view .LVU240
 891 000e 4FF40043 		mov	r3, #32768
 892 0012 8360     		str	r3, [r0, #8]
 592:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 893              		.loc 1 592 3 is_stmt 1 view .LVU241
 592:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 894              		.loc 1 592 23 is_stmt 0 view .LVU242
 895 0014 0023     		movs	r3, #0
 896 0016 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 53


 593:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 897              		.loc 1 593 3 is_stmt 1 view .LVU243
 593:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 898              		.loc 1 593 26 is_stmt 0 view .LVU244
 899 0018 0361     		str	r3, [r0, #16]
 594:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 900              		.loc 1 594 3 is_stmt 1 view .LVU245
 594:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 901              		.loc 1 594 23 is_stmt 0 view .LVU246
 902 001a 4361     		str	r3, [r0, #20]
 595:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 903              		.loc 1 595 3 is_stmt 1 view .LVU247
 595:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 904              		.loc 1 595 18 is_stmt 0 view .LVU248
 905 001c 4FF48022 		mov	r2, #262144
 906 0020 8261     		str	r2, [r0, #24]
 596:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 907              		.loc 1 596 3 is_stmt 1 view .LVU249
 596:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 908              		.loc 1 596 32 is_stmt 0 view .LVU250
 909 0022 C361     		str	r3, [r0, #28]
 597:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 910              		.loc 1 597 3 is_stmt 1 view .LVU251
 597:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 911              		.loc 1 597 23 is_stmt 0 view .LVU252
 912 0024 0362     		str	r3, [r0, #32]
 598:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 913              		.loc 1 598 3 is_stmt 1 view .LVU253
 598:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 914              		.loc 1 598 21 is_stmt 0 view .LVU254
 915 0026 4362     		str	r3, [r0, #36]
 599:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 916              		.loc 1 599 3 is_stmt 1 view .LVU255
 599:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 917              		.loc 1 599 29 is_stmt 0 view .LVU256
 918 0028 8362     		str	r3, [r0, #40]
 600:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 919              		.loc 1 600 3 is_stmt 1 view .LVU257
 600:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 920              		.loc 1 600 28 is_stmt 0 view .LVU258
 921 002a 0A23     		movs	r3, #10
 922 002c C362     		str	r3, [r0, #44]
 601:Core/Src/main.c ****   {
 923              		.loc 1 601 3 is_stmt 1 view .LVU259
 601:Core/Src/main.c ****   {
 924              		.loc 1 601 7 is_stmt 0 view .LVU260
 925 002e FFF7FEFF 		bl	HAL_SPI_Init
 926              	.LVL55:
 601:Core/Src/main.c ****   {
 927              		.loc 1 601 6 discriminator 1 view .LVU261
 928 0032 00B9     		cbnz	r0, .L49
 609:Core/Src/main.c **** 
 929              		.loc 1 609 1 view .LVU262
 930 0034 08BD     		pop	{r3, pc}
 931              	.L49:
 603:Core/Src/main.c ****   }
 932              		.loc 1 603 5 is_stmt 1 view .LVU263
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 54


 933 0036 FFF7FEFF 		bl	Error_Handler
 934              	.LVL56:
 935              	.L51:
 936 003a 00BF     		.align	2
 937              	.L50:
 938 003c 00000000 		.word	hspi1
 939 0040 00300140 		.word	1073819648
 940              		.cfi_endproc
 941              	.LFE137:
 943              		.section	.text.MX_UART5_Init,"ax",%progbits
 944              		.align	1
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 949              	MX_UART5_Init:
 950              	.LFB139:
 655:Core/Src/main.c **** 
 951              		.loc 1 655 1 view -0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955 0000 08B5     		push	{r3, lr}
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 3, -8
 958              		.cfi_offset 14, -4
 664:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 959              		.loc 1 664 3 view .LVU265
 664:Core/Src/main.c ****   huart5.Init.BaudRate = 115200;
 960              		.loc 1 664 19 is_stmt 0 view .LVU266
 961 0002 0A48     		ldr	r0, .L56
 962 0004 0A4B     		ldr	r3, .L56+4
 963 0006 0360     		str	r3, [r0]
 665:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 964              		.loc 1 665 3 is_stmt 1 view .LVU267
 665:Core/Src/main.c ****   huart5.Init.WordLength = UART_WORDLENGTH_8B;
 965              		.loc 1 665 24 is_stmt 0 view .LVU268
 966 0008 4FF4E133 		mov	r3, #115200
 967 000c 4360     		str	r3, [r0, #4]
 666:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
 968              		.loc 1 666 3 is_stmt 1 view .LVU269
 666:Core/Src/main.c ****   huart5.Init.StopBits = UART_STOPBITS_1;
 969              		.loc 1 666 26 is_stmt 0 view .LVU270
 970 000e 0023     		movs	r3, #0
 971 0010 8360     		str	r3, [r0, #8]
 667:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 972              		.loc 1 667 3 is_stmt 1 view .LVU271
 667:Core/Src/main.c ****   huart5.Init.Parity = UART_PARITY_NONE;
 973              		.loc 1 667 24 is_stmt 0 view .LVU272
 974 0012 C360     		str	r3, [r0, #12]
 668:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 975              		.loc 1 668 3 is_stmt 1 view .LVU273
 668:Core/Src/main.c ****   huart5.Init.Mode = UART_MODE_TX_RX;
 976              		.loc 1 668 22 is_stmt 0 view .LVU274
 977 0014 0361     		str	r3, [r0, #16]
 669:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 978              		.loc 1 669 3 is_stmt 1 view .LVU275
 669:Core/Src/main.c ****   huart5.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 55


 979              		.loc 1 669 20 is_stmt 0 view .LVU276
 980 0016 0C22     		movs	r2, #12
 981 0018 4261     		str	r2, [r0, #20]
 670:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 982              		.loc 1 670 3 is_stmt 1 view .LVU277
 670:Core/Src/main.c ****   huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 983              		.loc 1 670 25 is_stmt 0 view .LVU278
 984 001a 8361     		str	r3, [r0, #24]
 671:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 985              		.loc 1 671 3 is_stmt 1 view .LVU279
 671:Core/Src/main.c ****   if (HAL_UART_Init(&huart5) != HAL_OK)
 986              		.loc 1 671 28 is_stmt 0 view .LVU280
 987 001c C361     		str	r3, [r0, #28]
 672:Core/Src/main.c ****   {
 988              		.loc 1 672 3 is_stmt 1 view .LVU281
 672:Core/Src/main.c ****   {
 989              		.loc 1 672 7 is_stmt 0 view .LVU282
 990 001e FFF7FEFF 		bl	HAL_UART_Init
 991              	.LVL57:
 672:Core/Src/main.c ****   {
 992              		.loc 1 672 6 discriminator 1 view .LVU283
 993 0022 00B9     		cbnz	r0, .L55
 680:Core/Src/main.c **** 
 994              		.loc 1 680 1 view .LVU284
 995 0024 08BD     		pop	{r3, pc}
 996              	.L55:
 674:Core/Src/main.c ****   }
 997              		.loc 1 674 5 is_stmt 1 view .LVU285
 998 0026 FFF7FEFF 		bl	Error_Handler
 999              	.LVL58:
 1000              	.L57:
 1001 002a 00BF     		.align	2
 1002              	.L56:
 1003 002c 00000000 		.word	huart5
 1004 0030 00500040 		.word	1073762304
 1005              		.cfi_endproc
 1006              	.LFE139:
 1008              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 1009              		.align	1
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1014              	MX_USART6_UART_Init:
 1015              	.LFB141:
 721:Core/Src/main.c **** 
 1016              		.loc 1 721 1 view -0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020 0000 08B5     		push	{r3, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 3, -8
 1023              		.cfi_offset 14, -4
 730:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1024              		.loc 1 730 3 view .LVU287
 730:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 1025              		.loc 1 730 19 is_stmt 0 view .LVU288
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 56


 1026 0002 0A48     		ldr	r0, .L62
 1027 0004 0A4B     		ldr	r3, .L62+4
 1028 0006 0360     		str	r3, [r0]
 731:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1029              		.loc 1 731 3 is_stmt 1 view .LVU289
 731:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 1030              		.loc 1 731 24 is_stmt 0 view .LVU290
 1031 0008 4FF4E133 		mov	r3, #115200
 1032 000c 4360     		str	r3, [r0, #4]
 732:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1033              		.loc 1 732 3 is_stmt 1 view .LVU291
 732:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 1034              		.loc 1 732 26 is_stmt 0 view .LVU292
 1035 000e 0023     		movs	r3, #0
 1036 0010 8360     		str	r3, [r0, #8]
 733:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1037              		.loc 1 733 3 is_stmt 1 view .LVU293
 733:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 1038              		.loc 1 733 24 is_stmt 0 view .LVU294
 1039 0012 C360     		str	r3, [r0, #12]
 734:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1040              		.loc 1 734 3 is_stmt 1 view .LVU295
 734:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 1041              		.loc 1 734 22 is_stmt 0 view .LVU296
 1042 0014 0361     		str	r3, [r0, #16]
 735:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1043              		.loc 1 735 3 is_stmt 1 view .LVU297
 735:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1044              		.loc 1 735 20 is_stmt 0 view .LVU298
 1045 0016 0C22     		movs	r2, #12
 1046 0018 4261     		str	r2, [r0, #20]
 736:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1047              		.loc 1 736 3 is_stmt 1 view .LVU299
 736:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 1048              		.loc 1 736 25 is_stmt 0 view .LVU300
 1049 001a 8361     		str	r3, [r0, #24]
 737:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1050              		.loc 1 737 3 is_stmt 1 view .LVU301
 737:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 1051              		.loc 1 737 28 is_stmt 0 view .LVU302
 1052 001c C361     		str	r3, [r0, #28]
 738:Core/Src/main.c ****   {
 1053              		.loc 1 738 3 is_stmt 1 view .LVU303
 738:Core/Src/main.c ****   {
 1054              		.loc 1 738 7 is_stmt 0 view .LVU304
 1055 001e FFF7FEFF 		bl	HAL_UART_Init
 1056              	.LVL59:
 738:Core/Src/main.c ****   {
 1057              		.loc 1 738 6 discriminator 1 view .LVU305
 1058 0022 00B9     		cbnz	r0, .L61
 746:Core/Src/main.c **** 
 1059              		.loc 1 746 1 view .LVU306
 1060 0024 08BD     		pop	{r3, pc}
 1061              	.L61:
 740:Core/Src/main.c ****   }
 1062              		.loc 1 740 5 is_stmt 1 view .LVU307
 1063 0026 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 57


 1064              	.LVL60:
 1065              	.L63:
 1066 002a 00BF     		.align	2
 1067              	.L62:
 1068 002c 00000000 		.word	huart6
 1069 0030 00140140 		.word	1073812480
 1070              		.cfi_endproc
 1071              	.LFE141:
 1073              		.section	.text.MX_SPI2_Init,"ax",%progbits
 1074              		.align	1
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1079              	MX_SPI2_Init:
 1080              	.LFB138:
 617:Core/Src/main.c **** 
 1081              		.loc 1 617 1 view -0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085 0000 08B5     		push	{r3, lr}
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 3, -8
 1088              		.cfi_offset 14, -4
 627:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1089              		.loc 1 627 3 view .LVU309
 627:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1090              		.loc 1 627 18 is_stmt 0 view .LVU310
 1091 0002 0D48     		ldr	r0, .L68
 1092 0004 0D4B     		ldr	r3, .L68+4
 1093 0006 0360     		str	r3, [r0]
 628:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1094              		.loc 1 628 3 is_stmt 1 view .LVU311
 628:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 1095              		.loc 1 628 19 is_stmt 0 view .LVU312
 1096 0008 4FF48273 		mov	r3, #260
 1097 000c 4360     		str	r3, [r0, #4]
 629:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 1098              		.loc 1 629 3 is_stmt 1 view .LVU313
 629:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 1099              		.loc 1 629 24 is_stmt 0 view .LVU314
 1100 000e 0023     		movs	r3, #0
 1101 0010 8360     		str	r3, [r0, #8]
 630:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1102              		.loc 1 630 3 is_stmt 1 view .LVU315
 630:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1103              		.loc 1 630 23 is_stmt 0 view .LVU316
 1104 0012 C360     		str	r3, [r0, #12]
 631:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1105              		.loc 1 631 3 is_stmt 1 view .LVU317
 631:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1106              		.loc 1 631 26 is_stmt 0 view .LVU318
 1107 0014 0361     		str	r3, [r0, #16]
 632:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1108              		.loc 1 632 3 is_stmt 1 view .LVU319
 632:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1109              		.loc 1 632 23 is_stmt 0 view .LVU320
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 58


 1110 0016 4361     		str	r3, [r0, #20]
 633:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 1111              		.loc 1 633 3 is_stmt 1 view .LVU321
 633:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 1112              		.loc 1 633 18 is_stmt 0 view .LVU322
 1113 0018 4FF40072 		mov	r2, #512
 1114 001c 8261     		str	r2, [r0, #24]
 634:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1115              		.loc 1 634 3 is_stmt 1 view .LVU323
 634:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1116              		.loc 1 634 32 is_stmt 0 view .LVU324
 1117 001e 3822     		movs	r2, #56
 1118 0020 C261     		str	r2, [r0, #28]
 635:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1119              		.loc 1 635 3 is_stmt 1 view .LVU325
 635:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1120              		.loc 1 635 23 is_stmt 0 view .LVU326
 1121 0022 0362     		str	r3, [r0, #32]
 636:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1122              		.loc 1 636 3 is_stmt 1 view .LVU327
 636:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1123              		.loc 1 636 21 is_stmt 0 view .LVU328
 1124 0024 4362     		str	r3, [r0, #36]
 637:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 1125              		.loc 1 637 3 is_stmt 1 view .LVU329
 637:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 1126              		.loc 1 637 29 is_stmt 0 view .LVU330
 1127 0026 8362     		str	r3, [r0, #40]
 638:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1128              		.loc 1 638 3 is_stmt 1 view .LVU331
 638:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1129              		.loc 1 638 28 is_stmt 0 view .LVU332
 1130 0028 0A23     		movs	r3, #10
 1131 002a C362     		str	r3, [r0, #44]
 639:Core/Src/main.c ****   {
 1132              		.loc 1 639 3 is_stmt 1 view .LVU333
 639:Core/Src/main.c ****   {
 1133              		.loc 1 639 7 is_stmt 0 view .LVU334
 1134 002c FFF7FEFF 		bl	HAL_SPI_Init
 1135              	.LVL61:
 639:Core/Src/main.c ****   {
 1136              		.loc 1 639 6 discriminator 1 view .LVU335
 1137 0030 00B9     		cbnz	r0, .L67
 647:Core/Src/main.c **** 
 1138              		.loc 1 647 1 view .LVU336
 1139 0032 08BD     		pop	{r3, pc}
 1140              	.L67:
 641:Core/Src/main.c ****   }
 1141              		.loc 1 641 5 is_stmt 1 view .LVU337
 1142 0034 FFF7FEFF 		bl	Error_Handler
 1143              	.LVL62:
 1144              	.L69:
 1145              		.align	2
 1146              	.L68:
 1147 0038 00000000 		.word	hspi2
 1148 003c 00380040 		.word	1073756160
 1149              		.cfi_endproc
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 59


 1150              	.LFE138:
 1152              		.section	.text.MX_RTC_Init,"ax",%progbits
 1153              		.align	1
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1158              	MX_RTC_Init:
 1159              	.LFB136:
 501:Core/Src/main.c **** 
 1160              		.loc 1 501 1 view -0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 48
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164 0000 10B5     		push	{r4, lr}
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 4, -8
 1167              		.cfi_offset 14, -4
 1168 0002 8CB0     		sub	sp, sp, #48
 1169              		.cfi_def_cfa_offset 56
 507:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1170              		.loc 1 507 3 view .LVU339
 507:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 1171              		.loc 1 507 19 is_stmt 0 view .LVU340
 1172 0004 0023     		movs	r3, #0
 1173 0006 0793     		str	r3, [sp, #28]
 1174 0008 0893     		str	r3, [sp, #32]
 1175 000a 0993     		str	r3, [sp, #36]
 1176 000c 0A93     		str	r3, [sp, #40]
 1177 000e 0B93     		str	r3, [sp, #44]
 508:Core/Src/main.c **** 
 1178              		.loc 1 508 3 is_stmt 1 view .LVU341
 508:Core/Src/main.c **** 
 1179              		.loc 1 508 19 is_stmt 0 view .LVU342
 1180 0010 0693     		str	r3, [sp, #24]
 516:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1181              		.loc 1 516 3 is_stmt 1 view .LVU343
 516:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1182              		.loc 1 516 17 is_stmt 0 view .LVU344
 1183 0012 2948     		ldr	r0, .L82
 1184 0014 294A     		ldr	r2, .L82+4
 1185 0016 0260     		str	r2, [r0]
 517:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1186              		.loc 1 517 3 is_stmt 1 view .LVU345
 517:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 1187              		.loc 1 517 24 is_stmt 0 view .LVU346
 1188 0018 4360     		str	r3, [r0, #4]
 518:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1189              		.loc 1 518 3 is_stmt 1 view .LVU347
 518:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 1190              		.loc 1 518 26 is_stmt 0 view .LVU348
 1191 001a 7F22     		movs	r2, #127
 1192 001c 8260     		str	r2, [r0, #8]
 519:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1193              		.loc 1 519 3 is_stmt 1 view .LVU349
 519:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1194              		.loc 1 519 25 is_stmt 0 view .LVU350
 1195 001e FF22     		movs	r2, #255
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 60


 1196 0020 C260     		str	r2, [r0, #12]
 520:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1197              		.loc 1 520 3 is_stmt 1 view .LVU351
 520:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1198              		.loc 1 520 20 is_stmt 0 view .LVU352
 1199 0022 0361     		str	r3, [r0, #16]
 521:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1200              		.loc 1 521 3 is_stmt 1 view .LVU353
 521:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1201              		.loc 1 521 28 is_stmt 0 view .LVU354
 1202 0024 4361     		str	r3, [r0, #20]
 522:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1203              		.loc 1 522 3 is_stmt 1 view .LVU355
 522:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1204              		.loc 1 522 24 is_stmt 0 view .LVU356
 1205 0026 8361     		str	r3, [r0, #24]
 523:Core/Src/main.c ****   {
 1206              		.loc 1 523 3 is_stmt 1 view .LVU357
 523:Core/Src/main.c ****   {
 1207              		.loc 1 523 7 is_stmt 0 view .LVU358
 1208 0028 FFF7FEFF 		bl	HAL_RTC_Init
 1209              	.LVL63:
 523:Core/Src/main.c ****   {
 1210              		.loc 1 523 6 discriminator 1 view .LVU359
 1211 002c 78BB     		cbnz	r0, .L78
 530:Core/Src/main.c ****   RTC_TimeTypeDef gTime;
 1212              		.loc 1 530 3 is_stmt 1 view .LVU360
 531:Core/Src/main.c ****   bool rtcBackup = false;
 1213              		.loc 1 531 3 view .LVU361
 532:Core/Src/main.c **** 
 1214              		.loc 1 532 3 view .LVU362
 1215              	.LVL64:
 535:Core/Src/main.c ****   /* Get the RTC current Date */
 1216              		.loc 1 535 3 view .LVU363
 1217 002e 224C     		ldr	r4, .L82
 1218 0030 0022     		movs	r2, #0
 1219 0032 6946     		mov	r1, sp
 1220 0034 2046     		mov	r0, r4
 1221 0036 FFF7FEFF 		bl	HAL_RTC_GetTime
 1222              	.LVL65:
 537:Core/Src/main.c ****   
 1223              		.loc 1 537 3 view .LVU364
 1224 003a 0022     		movs	r2, #0
 1225 003c 05A9     		add	r1, sp, #20
 1226 003e 2046     		mov	r0, r4
 1227 0040 FFF7FEFF 		bl	HAL_RTC_GetDate
 1228              	.LVL66:
 539:Core/Src/main.c ****       rtcBackup = true;
 1229              		.loc 1 539 3 view .LVU365
 539:Core/Src/main.c ****       rtcBackup = true;
 1230              		.loc 1 539 11 is_stmt 0 view .LVU366
 1231 0044 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 539:Core/Src/main.c ****       rtcBackup = true;
 1232              		.loc 1 539 5 view .LVU367
 1233 0048 1BBB     		cbnz	r3, .L76
 532:Core/Src/main.c **** 
 1234              		.loc 1 532 8 view .LVU368
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 61


 1235 004a 0024     		movs	r4, #0
 1236              	.L72:
 1237              	.LVL67:
 546:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1238              		.loc 1 546 3 is_stmt 1 view .LVU369
 546:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1239              		.loc 1 546 15 is_stmt 0 view .LVU370
 1240 004c 0023     		movs	r3, #0
 1241 004e 8DF81C30 		strb	r3, [sp, #28]
 547:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1242              		.loc 1 547 3 is_stmt 1 view .LVU371
 547:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1243              		.loc 1 547 17 is_stmt 0 view .LVU372
 1244 0052 8DF81D30 		strb	r3, [sp, #29]
 548:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1245              		.loc 1 548 3 is_stmt 1 view .LVU373
 548:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1246              		.loc 1 548 17 is_stmt 0 view .LVU374
 1247 0056 8DF81E30 		strb	r3, [sp, #30]
 549:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1248              		.loc 1 549 3 is_stmt 1 view .LVU375
 549:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1249              		.loc 1 549 24 is_stmt 0 view .LVU376
 1250 005a 0A93     		str	r3, [sp, #40]
 550:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1251              		.loc 1 550 3 is_stmt 1 view .LVU377
 550:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1252              		.loc 1 550 24 is_stmt 0 view .LVU378
 1253 005c 0B93     		str	r3, [sp, #44]
 551:Core/Src/main.c ****   {
 1254              		.loc 1 551 3 is_stmt 1 view .LVU379
 551:Core/Src/main.c ****   {
 1255              		.loc 1 551 7 is_stmt 0 view .LVU380
 1256 005e 0122     		movs	r2, #1
 1257 0060 07A9     		add	r1, sp, #28
 1258 0062 1548     		ldr	r0, .L82
 1259 0064 FFF7FEFF 		bl	HAL_RTC_SetTime
 1260              	.LVL68:
 551:Core/Src/main.c ****   {
 1261              		.loc 1 551 6 discriminator 1 view .LVU381
 1262 0068 A8B9     		cbnz	r0, .L79
 555:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 1263              		.loc 1 555 3 is_stmt 1 view .LVU382
 555:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 1264              		.loc 1 555 17 is_stmt 0 view .LVU383
 1265 006a 0122     		movs	r2, #1
 1266 006c 8DF81820 		strb	r2, [sp, #24]
 556:Core/Src/main.c ****   sDate.Date = 0x1;
 1267              		.loc 1 556 3 is_stmt 1 view .LVU384
 556:Core/Src/main.c ****   sDate.Date = 0x1;
 1268              		.loc 1 556 15 is_stmt 0 view .LVU385
 1269 0070 8DF81920 		strb	r2, [sp, #25]
 557:Core/Src/main.c ****   sDate.Year = 0x0;
 1270              		.loc 1 557 3 is_stmt 1 view .LVU386
 557:Core/Src/main.c ****   sDate.Year = 0x0;
 1271              		.loc 1 557 14 is_stmt 0 view .LVU387
 1272 0074 8DF81A20 		strb	r2, [sp, #26]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 62


 558:Core/Src/main.c **** 
 1273              		.loc 1 558 3 is_stmt 1 view .LVU388
 558:Core/Src/main.c **** 
 1274              		.loc 1 558 14 is_stmt 0 view .LVU389
 1275 0078 0023     		movs	r3, #0
 1276 007a 8DF81B30 		strb	r3, [sp, #27]
 560:Core/Src/main.c ****   {
 1277              		.loc 1 560 3 is_stmt 1 view .LVU390
 560:Core/Src/main.c ****   {
 1278              		.loc 1 560 7 is_stmt 0 view .LVU391
 1279 007e 06A9     		add	r1, sp, #24
 1280 0080 0D48     		ldr	r0, .L82
 1281 0082 FFF7FEFF 		bl	HAL_RTC_SetDate
 1282              	.LVL69:
 560:Core/Src/main.c ****   {
 1283              		.loc 1 560 6 discriminator 1 view .LVU392
 1284 0086 40B9     		cbnz	r0, .L80
 565:Core/Src/main.c ****     HAL_RTC_SetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 1285              		.loc 1 565 3 is_stmt 1 view .LVU393
 565:Core/Src/main.c ****     HAL_RTC_SetTime(&hrtc, &gTime, RTC_FORMAT_BIN);
 1286              		.loc 1 565 5 is_stmt 0 view .LVU394
 1287 0088 4CB9     		cbnz	r4, .L81
 1288              	.LVL70:
 1289              	.L70:
 571:Core/Src/main.c **** 
 1290              		.loc 1 571 1 view .LVU395
 1291 008a 0CB0     		add	sp, sp, #48
 1292              		.cfi_remember_state
 1293              		.cfi_def_cfa_offset 8
 1294              		@ sp needed
 1295 008c 10BD     		pop	{r4, pc}
 1296              	.LVL71:
 1297              	.L78:
 1298              		.cfi_restore_state
 525:Core/Src/main.c ****   }
 1299              		.loc 1 525 5 is_stmt 1 view .LVU396
 1300 008e FFF7FEFF 		bl	Error_Handler
 1301              	.LVL72:
 1302              	.L76:
 540:Core/Src/main.c ****   }
 1303              		.loc 1 540 17 is_stmt 0 view .LVU397
 1304 0092 0124     		movs	r4, #1
 1305 0094 DAE7     		b	.L72
 1306              	.LVL73:
 1307              	.L79:
 553:Core/Src/main.c ****   }
 1308              		.loc 1 553 5 is_stmt 1 view .LVU398
 1309 0096 FFF7FEFF 		bl	Error_Handler
 1310              	.LVL74:
 1311              	.L80:
 562:Core/Src/main.c ****   }
 1312              		.loc 1 562 5 view .LVU399
 1313 009a FFF7FEFF 		bl	Error_Handler
 1314              	.LVL75:
 1315              	.L81:
 566:Core/Src/main.c ****     HAL_RTC_SetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
 1316              		.loc 1 566 5 view .LVU400
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 63


 1317 009e 064C     		ldr	r4, .L82
 1318              	.LVL76:
 566:Core/Src/main.c ****     HAL_RTC_SetDate(&hrtc, &gDate, RTC_FORMAT_BIN);
 1319              		.loc 1 566 5 is_stmt 0 view .LVU401
 1320 00a0 0022     		movs	r2, #0
 1321 00a2 6946     		mov	r1, sp
 1322 00a4 2046     		mov	r0, r4
 1323 00a6 FFF7FEFF 		bl	HAL_RTC_SetTime
 1324              	.LVL77:
 567:Core/Src/main.c ****   }
 1325              		.loc 1 567 5 is_stmt 1 view .LVU402
 1326 00aa 0022     		movs	r2, #0
 1327 00ac 05A9     		add	r1, sp, #20
 1328 00ae 2046     		mov	r0, r4
 1329 00b0 FFF7FEFF 		bl	HAL_RTC_SetDate
 1330              	.LVL78:
 571:Core/Src/main.c **** 
 1331              		.loc 1 571 1 is_stmt 0 view .LVU403
 1332 00b4 E9E7     		b	.L70
 1333              	.L83:
 1334 00b6 00BF     		.align	2
 1335              	.L82:
 1336 00b8 00000000 		.word	hrtc
 1337 00bc 00280040 		.word	1073752064
 1338              		.cfi_endproc
 1339              	.LFE136:
 1341              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1342              		.align	1
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1347              	MX_USART2_UART_Init:
 1348              	.LFB140:
 688:Core/Src/main.c **** 
 1349              		.loc 1 688 1 is_stmt 1 view -0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 0
 1352              		@ frame_needed = 0, uses_anonymous_args = 0
 1353 0000 08B5     		push	{r3, lr}
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 3, -8
 1356              		.cfi_offset 14, -4
 697:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1357              		.loc 1 697 3 view .LVU405
 697:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1358              		.loc 1 697 19 is_stmt 0 view .LVU406
 1359 0002 0A48     		ldr	r0, .L88
 1360 0004 0A4B     		ldr	r3, .L88+4
 1361 0006 0360     		str	r3, [r0]
 698:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1362              		.loc 1 698 3 is_stmt 1 view .LVU407
 698:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1363              		.loc 1 698 24 is_stmt 0 view .LVU408
 1364 0008 4FF4E133 		mov	r3, #115200
 1365 000c 4360     		str	r3, [r0, #4]
 699:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1366              		.loc 1 699 3 is_stmt 1 view .LVU409
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 64


 699:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1367              		.loc 1 699 26 is_stmt 0 view .LVU410
 1368 000e 0023     		movs	r3, #0
 1369 0010 8360     		str	r3, [r0, #8]
 700:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1370              		.loc 1 700 3 is_stmt 1 view .LVU411
 700:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1371              		.loc 1 700 24 is_stmt 0 view .LVU412
 1372 0012 C360     		str	r3, [r0, #12]
 701:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1373              		.loc 1 701 3 is_stmt 1 view .LVU413
 701:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1374              		.loc 1 701 22 is_stmt 0 view .LVU414
 1375 0014 0361     		str	r3, [r0, #16]
 702:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1376              		.loc 1 702 3 is_stmt 1 view .LVU415
 702:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1377              		.loc 1 702 20 is_stmt 0 view .LVU416
 1378 0016 0C22     		movs	r2, #12
 1379 0018 4261     		str	r2, [r0, #20]
 703:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1380              		.loc 1 703 3 is_stmt 1 view .LVU417
 703:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1381              		.loc 1 703 25 is_stmt 0 view .LVU418
 1382 001a 8361     		str	r3, [r0, #24]
 704:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1383              		.loc 1 704 3 is_stmt 1 view .LVU419
 704:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1384              		.loc 1 704 28 is_stmt 0 view .LVU420
 1385 001c C361     		str	r3, [r0, #28]
 705:Core/Src/main.c ****   {
 1386              		.loc 1 705 3 is_stmt 1 view .LVU421
 705:Core/Src/main.c ****   {
 1387              		.loc 1 705 7 is_stmt 0 view .LVU422
 1388 001e FFF7FEFF 		bl	HAL_UART_Init
 1389              	.LVL79:
 705:Core/Src/main.c ****   {
 1390              		.loc 1 705 6 discriminator 1 view .LVU423
 1391 0022 00B9     		cbnz	r0, .L87
 713:Core/Src/main.c **** 
 1392              		.loc 1 713 1 view .LVU424
 1393 0024 08BD     		pop	{r3, pc}
 1394              	.L87:
 707:Core/Src/main.c ****   }
 1395              		.loc 1 707 5 is_stmt 1 view .LVU425
 1396 0026 FFF7FEFF 		bl	Error_Handler
 1397              	.LVL80:
 1398              	.L89:
 1399 002a 00BF     		.align	2
 1400              	.L88:
 1401 002c 00000000 		.word	huart2
 1402 0030 00440040 		.word	1073759232
 1403              		.cfi_endproc
 1404              	.LFE140:
 1406              		.section	.text.SystemClock_Config,"ax",%progbits
 1407              		.align	1
 1408              		.global	SystemClock_Config
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 65


 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1413              	SystemClock_Config:
 1414              	.LFB135:
 453:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1415              		.loc 1 453 1 view -0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 80
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419 0000 00B5     		push	{lr}
 1420              		.cfi_def_cfa_offset 4
 1421              		.cfi_offset 14, -4
 1422 0002 95B0     		sub	sp, sp, #84
 1423              		.cfi_def_cfa_offset 88
 454:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1424              		.loc 1 454 3 view .LVU427
 454:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1425              		.loc 1 454 22 is_stmt 0 view .LVU428
 1426 0004 3422     		movs	r2, #52
 1427 0006 0021     		movs	r1, #0
 1428 0008 07A8     		add	r0, sp, #28
 1429 000a FFF7FEFF 		bl	memset
 1430              	.LVL81:
 455:Core/Src/main.c **** 
 1431              		.loc 1 455 3 is_stmt 1 view .LVU429
 455:Core/Src/main.c **** 
 1432              		.loc 1 455 22 is_stmt 0 view .LVU430
 1433 000e 0023     		movs	r3, #0
 1434 0010 0293     		str	r3, [sp, #8]
 1435 0012 0393     		str	r3, [sp, #12]
 1436 0014 0493     		str	r3, [sp, #16]
 1437 0016 0593     		str	r3, [sp, #20]
 1438 0018 0693     		str	r3, [sp, #24]
 459:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1439              		.loc 1 459 3 is_stmt 1 view .LVU431
 1440              	.LBB16:
 459:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1441              		.loc 1 459 3 view .LVU432
 1442 001a 0093     		str	r3, [sp]
 459:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1443              		.loc 1 459 3 view .LVU433
 1444 001c 204A     		ldr	r2, .L96
 1445 001e 116C     		ldr	r1, [r2, #64]
 1446 0020 41F08051 		orr	r1, r1, #268435456
 1447 0024 1164     		str	r1, [r2, #64]
 459:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1448              		.loc 1 459 3 view .LVU434
 1449 0026 126C     		ldr	r2, [r2, #64]
 1450 0028 02F08052 		and	r2, r2, #268435456
 1451 002c 0092     		str	r2, [sp]
 459:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1452              		.loc 1 459 3 view .LVU435
 1453 002e 009A     		ldr	r2, [sp]
 1454              	.LBE16:
 459:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1455              		.loc 1 459 3 view .LVU436
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 66


 460:Core/Src/main.c **** 
 1456              		.loc 1 460 3 view .LVU437
 1457              	.LBB17:
 460:Core/Src/main.c **** 
 1458              		.loc 1 460 3 view .LVU438
 1459 0030 0193     		str	r3, [sp, #4]
 460:Core/Src/main.c **** 
 1460              		.loc 1 460 3 view .LVU439
 1461 0032 1C4B     		ldr	r3, .L96+4
 1462 0034 1A68     		ldr	r2, [r3]
 1463 0036 42F44042 		orr	r2, r2, #49152
 1464 003a 1A60     		str	r2, [r3]
 460:Core/Src/main.c **** 
 1465              		.loc 1 460 3 view .LVU440
 1466 003c 1B68     		ldr	r3, [r3]
 1467 003e 03F44043 		and	r3, r3, #49152
 1468 0042 0193     		str	r3, [sp, #4]
 460:Core/Src/main.c **** 
 1469              		.loc 1 460 3 view .LVU441
 1470 0044 019B     		ldr	r3, [sp, #4]
 1471              	.LBE17:
 460:Core/Src/main.c **** 
 1472              		.loc 1 460 3 view .LVU442
 465:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1473              		.loc 1 465 3 view .LVU443
 465:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1474              		.loc 1 465 36 is_stmt 0 view .LVU444
 1475 0046 0523     		movs	r3, #5
 1476 0048 0793     		str	r3, [sp, #28]
 466:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 1477              		.loc 1 466 3 is_stmt 1 view .LVU445
 466:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 1478              		.loc 1 466 30 is_stmt 0 view .LVU446
 1479 004a 4FF48033 		mov	r3, #65536
 1480 004e 0893     		str	r3, [sp, #32]
 467:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1481              		.loc 1 467 3 is_stmt 1 view .LVU447
 467:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1482              		.loc 1 467 30 is_stmt 0 view .LVU448
 1483 0050 0123     		movs	r3, #1
 1484 0052 0993     		str	r3, [sp, #36]
 468:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1485              		.loc 1 468 3 is_stmt 1 view .LVU449
 468:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1486              		.loc 1 468 34 is_stmt 0 view .LVU450
 1487 0054 0223     		movs	r3, #2
 1488 0056 0D93     		str	r3, [sp, #52]
 469:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1489              		.loc 1 469 3 is_stmt 1 view .LVU451
 469:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 1490              		.loc 1 469 35 is_stmt 0 view .LVU452
 1491 0058 4FF48002 		mov	r2, #4194304
 1492 005c 0E92     		str	r2, [sp, #56]
 470:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1493              		.loc 1 470 3 is_stmt 1 view .LVU453
 470:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 1494              		.loc 1 470 30 is_stmt 0 view .LVU454
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 67


 1495 005e 0422     		movs	r2, #4
 1496 0060 0F92     		str	r2, [sp, #60]
 471:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1497              		.loc 1 471 3 is_stmt 1 view .LVU455
 471:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1498              		.loc 1 471 30 is_stmt 0 view .LVU456
 1499 0062 6022     		movs	r2, #96
 1500 0064 1092     		str	r2, [sp, #64]
 472:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1501              		.loc 1 472 3 is_stmt 1 view .LVU457
 472:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1502              		.loc 1 472 30 is_stmt 0 view .LVU458
 1503 0066 1193     		str	r3, [sp, #68]
 473:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1504              		.loc 1 473 3 is_stmt 1 view .LVU459
 473:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1505              		.loc 1 473 30 is_stmt 0 view .LVU460
 1506 0068 1293     		str	r3, [sp, #72]
 474:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1507              		.loc 1 474 3 is_stmt 1 view .LVU461
 474:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1508              		.loc 1 474 30 is_stmt 0 view .LVU462
 1509 006a 1393     		str	r3, [sp, #76]
 475:Core/Src/main.c ****   {
 1510              		.loc 1 475 3 is_stmt 1 view .LVU463
 475:Core/Src/main.c ****   {
 1511              		.loc 1 475 7 is_stmt 0 view .LVU464
 1512 006c 07A8     		add	r0, sp, #28
 1513 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1514              	.LVL82:
 475:Core/Src/main.c ****   {
 1515              		.loc 1 475 6 discriminator 1 view .LVU465
 1516 0072 88B9     		cbnz	r0, .L94
 482:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1517              		.loc 1 482 3 is_stmt 1 view .LVU466
 482:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1518              		.loc 1 482 31 is_stmt 0 view .LVU467
 1519 0074 0F23     		movs	r3, #15
 1520 0076 0293     		str	r3, [sp, #8]
 484:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1521              		.loc 1 484 3 is_stmt 1 view .LVU468
 484:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1522              		.loc 1 484 34 is_stmt 0 view .LVU469
 1523 0078 0223     		movs	r3, #2
 1524 007a 0393     		str	r3, [sp, #12]
 485:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1525              		.loc 1 485 3 is_stmt 1 view .LVU470
 485:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1526              		.loc 1 485 35 is_stmt 0 view .LVU471
 1527 007c 0023     		movs	r3, #0
 1528 007e 0493     		str	r3, [sp, #16]
 486:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1529              		.loc 1 486 3 is_stmt 1 view .LVU472
 486:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1530              		.loc 1 486 36 is_stmt 0 view .LVU473
 1531 0080 4FF48052 		mov	r2, #4096
 1532 0084 0592     		str	r2, [sp, #20]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 68


 487:Core/Src/main.c **** 
 1533              		.loc 1 487 3 is_stmt 1 view .LVU474
 487:Core/Src/main.c **** 
 1534              		.loc 1 487 36 is_stmt 0 view .LVU475
 1535 0086 0693     		str	r3, [sp, #24]
 489:Core/Src/main.c ****   {
 1536              		.loc 1 489 3 is_stmt 1 view .LVU476
 489:Core/Src/main.c ****   {
 1537              		.loc 1 489 7 is_stmt 0 view .LVU477
 1538 0088 0321     		movs	r1, #3
 1539 008a 02A8     		add	r0, sp, #8
 1540 008c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1541              	.LVL83:
 489:Core/Src/main.c ****   {
 1542              		.loc 1 489 6 discriminator 1 view .LVU478
 1543 0090 20B9     		cbnz	r0, .L95
 493:Core/Src/main.c **** 
 1544              		.loc 1 493 1 view .LVU479
 1545 0092 15B0     		add	sp, sp, #84
 1546              		.cfi_remember_state
 1547              		.cfi_def_cfa_offset 4
 1548              		@ sp needed
 1549 0094 5DF804FB 		ldr	pc, [sp], #4
 1550              	.L94:
 1551              		.cfi_restore_state
 477:Core/Src/main.c ****   }
 1552              		.loc 1 477 5 is_stmt 1 view .LVU480
 1553 0098 FFF7FEFF 		bl	Error_Handler
 1554              	.LVL84:
 1555              	.L95:
 491:Core/Src/main.c ****   }
 1556              		.loc 1 491 5 view .LVU481
 1557 009c FFF7FEFF 		bl	Error_Handler
 1558              	.LVL85:
 1559              	.L97:
 1560              		.align	2
 1561              	.L96:
 1562 00a0 00380240 		.word	1073887232
 1563 00a4 00700040 		.word	1073770496
 1564              		.cfi_endproc
 1565              	.LFE135:
 1567              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1568              		.align	2
 1569              	.LC1:
 1570 0000 53455420 		.ascii	"SET UP RTC!\000"
 1570      55502052 
 1570      54432100 
 1571              		.align	2
 1572              	.LC2:
 1573 000c 00       		.ascii	"\000"
 1574 000d 000000   		.align	2
 1575              	.LC3:
 1576 0010 50726F62 		.ascii	"Problem with SD card!\000"
 1576      6C656D20 
 1576      77697468 
 1576      20534420 
 1576      63617264 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 69


 1577              		.global	__aeabi_d2iz
 1578 0026 0000     		.align	2
 1579              	.LC4:
 1580 0028 696E6974 		.ascii	"init_%02d-%02d-%02d_%02d-%02d-%2d.txt\000"
 1580      5F253032 
 1580      642D2530 
 1580      32642D25 
 1580      3032645F 
 1581 004e 0000     		.align	2
 1582              	.LC5:
 1583 0050 54595045 		.ascii	"TYPE_SET_ONLY\000"
 1583      5F534554 
 1583      5F4F4E4C 
 1583      5900
 1584 005e 0000     		.align	2
 1585              	.LC6:
 1586 0060 54595045 		.ascii	"TYPE_SET_TEL\000"
 1586      5F534554 
 1586      5F54454C 
 1586      00
 1587 006d 000000   		.align	2
 1588              	.LC7:
 1589 0070 54595045 		.ascii	"TYPE_TEL_ONLY\000"
 1589      5F54454C 
 1589      5F4F4E4C 
 1589      5900
 1590 007e 0000     		.align	2
 1591              	.LC8:
 1592 0080 4445563A 		.ascii	"DEV: %d\012Min/Max: %s/%s\012Dev type: %s\012\012\000"
 1592      2025640A 
 1592      4D696E2F 
 1592      4D61783A 
 1592      2025732F 
 1593 00a6 0000     		.align	2
 1594              	.LC9:
 1595 00a8 4445563A 		.ascii	"DEV: empty\012\012\000"
 1595      20656D70 
 1595      74790A0A 
 1595      00
 1596              		.global	__aeabi_dadd
 1597              		.global	__aeabi_dcmple
 1598              		.global	__aeabi_dsub
 1599              		.global	__aeabi_dcmpge
 1600              		.section	.text.main,"ax",%progbits
 1601              		.align	1
 1602              		.global	main
 1603              		.syntax unified
 1604              		.thumb
 1605              		.thumb_func
 1607              	main:
 1608              	.LFB134:
 142:Core/Src/main.c **** 
 1609              		.loc 1 142 1 view -0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 8472
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 70


 1614              		.cfi_def_cfa_offset 36
 1615              		.cfi_offset 4, -36
 1616              		.cfi_offset 5, -32
 1617              		.cfi_offset 6, -28
 1618              		.cfi_offset 7, -24
 1619              		.cfi_offset 8, -20
 1620              		.cfi_offset 9, -16
 1621              		.cfi_offset 10, -12
 1622              		.cfi_offset 11, -8
 1623              		.cfi_offset 14, -4
 1624 0004 ADF5045D 		sub	sp, sp, #8448
 1625              		.cfi_def_cfa_offset 8484
 1626 0008 8BB0     		sub	sp, sp, #44
 1627              		.cfi_def_cfa_offset 8528
 151:Core/Src/main.c **** 
 1628              		.loc 1 151 3 view .LVU483
 1629 000a FFF7FEFF 		bl	HAL_Init
 1630              	.LVL86:
 167:Core/Src/main.c **** 
 1631              		.loc 1 167 3 view .LVU484
 1632 000e FFF7FEFF 		bl	SystemClock_Config
 1633              	.LVL87:
 174:Core/Src/main.c ****   MX_DMA_Init();
 1634              		.loc 1 174 3 view .LVU485
 1635 0012 FFF7FEFF 		bl	MX_GPIO_Init
 1636              	.LVL88:
 175:Core/Src/main.c ****   MX_SPI1_Init();
 1637              		.loc 1 175 3 view .LVU486
 1638 0016 FFF7FEFF 		bl	MX_DMA_Init
 1639              	.LVL89:
 176:Core/Src/main.c ****   MX_UART5_Init();
 1640              		.loc 1 176 3 view .LVU487
 1641 001a FFF7FEFF 		bl	MX_SPI1_Init
 1642              	.LVL90:
 177:Core/Src/main.c ****   MX_USART6_UART_Init();
 1643              		.loc 1 177 3 view .LVU488
 1644 001e FFF7FEFF 		bl	MX_UART5_Init
 1645              	.LVL91:
 178:Core/Src/main.c ****   MX_SPI2_Init();
 1646              		.loc 1 178 3 view .LVU489
 1647 0022 FFF7FEFF 		bl	MX_USART6_UART_Init
 1648              	.LVL92:
 179:Core/Src/main.c ****   MX_FATFS_Init();
 1649              		.loc 1 179 3 view .LVU490
 1650 0026 FFF7FEFF 		bl	MX_SPI2_Init
 1651              	.LVL93:
 180:Core/Src/main.c ****   MX_RTC_Init();
 1652              		.loc 1 180 3 view .LVU491
 1653 002a FFF7FEFF 		bl	MX_FATFS_Init
 1654              	.LVL94:
 181:Core/Src/main.c ****   MX_USART2_UART_Init();
 1655              		.loc 1 181 3 view .LVU492
 1656 002e FFF7FEFF 		bl	MX_RTC_Init
 1657              	.LVL95:
 182:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1658              		.loc 1 182 3 view .LVU493
 1659 0032 FFF7FEFF 		bl	MX_USART2_UART_Init
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 71


 1660              	.LVL96:
 187:Core/Src/main.c ****   HAL_Delay(200);
 1661              		.loc 1 187 3 view .LVU494
 1662 0036 BF4C     		ldr	r4, .L142
 1663 0038 0122     		movs	r2, #1
 1664 003a 4FF40051 		mov	r1, #8192
 1665 003e 2046     		mov	r0, r4
 1666 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1667              	.LVL97:
 188:Core/Src/main.c **** 	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 1668              		.loc 1 188 3 view .LVU495
 1669 0044 C820     		movs	r0, #200
 1670 0046 FFF7FEFF 		bl	HAL_Delay
 1671              	.LVL98:
 189:Core/Src/main.c **** 
 1672              		.loc 1 189 2 view .LVU496
 1673 004a 0022     		movs	r2, #0
 1674 004c 4FF40051 		mov	r1, #8192
 1675 0050 2046     		mov	r0, r4
 1676 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1677              	.LVL99:
 191:Core/Src/main.c **** 
 1678              		.loc 1 191 2 view .LVU497
 1679 0056 F021     		movs	r1, #240
 1680 0058 0846     		mov	r0, r1
 1681 005a FFF7FEFF 		bl	dispcolor_Init
 1682              	.LVL100:
 193:Core/Src/main.c ****   uint32_t screen_disp_time = HAL_GetTick();
 1683              		.loc 1 193 2 view .LVU498
 193:Core/Src/main.c ****   uint32_t screen_disp_time = HAL_GetTick();
 1684              		.loc 1 193 30 is_stmt 0 view .LVU499
 1685 005e FFF7FEFF 		bl	HAL_GetTick
 1686              	.LVL101:
 194:Core/Src/main.c ****   uint32_t hold_timeout = HAL_GetTick();
 1687              		.loc 1 194 3 is_stmt 1 view .LVU500
 194:Core/Src/main.c ****   uint32_t hold_timeout = HAL_GetTick();
 1688              		.loc 1 194 31 is_stmt 0 view .LVU501
 1689 0062 FFF7FEFF 		bl	HAL_GetTick
 1690              	.LVL102:
 1691 0066 0446     		mov	r4, r0
 1692              	.LVL103:
 195:Core/Src/main.c **** 
 1693              		.loc 1 195 3 is_stmt 1 view .LVU502
 195:Core/Src/main.c **** 
 1694              		.loc 1 195 27 is_stmt 0 view .LVU503
 1695 0068 FFF7FEFF 		bl	HAL_GetTick
 1696              	.LVL104:
 195:Core/Src/main.c **** 
 1697              		.loc 1 195 27 view .LVU504
 1698 006c 0646     		mov	r6, r0
 1699              	.LVL105:
 197:Core/Src/main.c ****   uint32_t txtmr = HAL_GetTick();
 1700              		.loc 1 197 3 is_stmt 1 view .LVU505
 197:Core/Src/main.c ****   uint32_t txtmr = HAL_GetTick();
 1701              		.loc 1 197 21 is_stmt 0 view .LVU506
 1702 006e FFF7FEFF 		bl	HAL_GetTick
 1703              	.LVL106:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 72


 198:Core/Src/main.c ****   
 1704              		.loc 1 198 3 is_stmt 1 view .LVU507
 198:Core/Src/main.c ****   
 1705              		.loc 1 198 20 is_stmt 0 view .LVU508
 1706 0072 FFF7FEFF 		bl	HAL_GetTick
 1707              	.LVL107:
 200:Core/Src/main.c **** 
 1708              		.loc 1 200 3 is_stmt 1 view .LVU509
 204:Core/Src/main.c ****   RTC_TimeTypeDef gTime;
 1709              		.loc 1 204 3 view .LVU510
 205:Core/Src/main.c **** 
 1710              		.loc 1 205 3 view .LVU511
 208:Core/Src/main.c ****   /* Get the RTC current Date */
 1711              		.loc 1 208 3 view .LVU512
 1712 0076 B04D     		ldr	r5, .L142+4
 1713 0078 0022     		movs	r2, #0
 1714 007a 0DF50451 		add	r1, sp, #8448
 1715 007e 1031     		adds	r1, r1, #16
 1716 0080 2846     		mov	r0, r5
 1717 0082 FFF7FEFF 		bl	HAL_RTC_GetTime
 1718              	.LVL108:
 210:Core/Src/main.c ****   
 1719              		.loc 1 210 3 view .LVU513
 1720 0086 0022     		movs	r2, #0
 1721 0088 0DF50451 		add	r1, sp, #8448
 1722 008c 2431     		adds	r1, r1, #36
 1723 008e 2846     		mov	r0, r5
 1724 0090 FFF7FEFF 		bl	HAL_RTC_GetDate
 1725              	.LVL109:
 212:Core/Src/main.c ****     Show_Message("SET UP RTC!", 1000);
 1726              		.loc 1 212 3 view .LVU514
 212:Core/Src/main.c ****     Show_Message("SET UP RTC!", 1000);
 1727              		.loc 1 212 11 is_stmt 0 view .LVU515
 1728 0094 0DF50453 		add	r3, sp, #8448
 1729 0098 2733     		adds	r3, r3, #39
 1730 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 212:Core/Src/main.c ****     Show_Message("SET UP RTC!", 1000);
 1731              		.loc 1 212 5 view .LVU516
 1732 009c 73B3     		cbz	r3, .L136
 1733              	.L99:
 218:Core/Src/main.c ****   FRESULT FR_Status;
 1734              		.loc 1 218 3 is_stmt 1 view .LVU517
 219:Core/Src/main.c ****   FIL Fil;
 1735              		.loc 1 219 3 view .LVU518
 220:Core/Src/main.c ****   UINT bytesWrote;
 1736              		.loc 1 220 3 view .LVU519
 221:Core/Src/main.c **** 
 1737              		.loc 1 221 3 view .LVU520
 223:Core/Src/main.c ****   if (FR_Status == FR_OK){
 1738              		.loc 1 223 3 view .LVU521
 223:Core/Src/main.c ****   if (FR_Status == FR_OK){
 1739              		.loc 1 223 15 is_stmt 0 view .LVU522
 1740 009e 0122     		movs	r2, #1
 1741 00a0 A649     		ldr	r1, .L142+8
 1742 00a2 0DF58650 		add	r0, sp, #4288
 1743 00a6 1830     		adds	r0, r0, #24
 1744 00a8 FFF7FEFF 		bl	f_mount
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 73


 1745              	.LVL110:
 224:Core/Src/main.c ****     isSDInitialised = true;
 1746              		.loc 1 224 3 is_stmt 1 view .LVU523
 224:Core/Src/main.c ****     isSDInitialised = true;
 1747              		.loc 1 224 6 is_stmt 0 view .LVU524
 1748 00ac 60BB     		cbnz	r0, .L100
 225:Core/Src/main.c ****   }else{
 1749              		.loc 1 225 5 is_stmt 1 view .LVU525
 225:Core/Src/main.c ****   }else{
 1750              		.loc 1 225 21 is_stmt 0 view .LVU526
 1751 00ae A44B     		ldr	r3, .L142+12
 1752 00b0 0122     		movs	r2, #1
 1753 00b2 1A70     		strb	r2, [r3]
 1754              	.LVL111:
 1755              	.L101:
 231:Core/Src/main.c ****   deviceList[1].tx_buff[0] = 84;
 1756              		.loc 1 231 3 is_stmt 1 view .LVU527
 231:Core/Src/main.c ****   deviceList[1].tx_buff[0] = 84;
 1757              		.loc 1 231 28 is_stmt 0 view .LVU528
 1758 00b4 A34B     		ldr	r3, .L142+16
 1759 00b6 5422     		movs	r2, #84
 1760 00b8 83F83520 		strb	r2, [r3, #53]
 232:Core/Src/main.c **** 
 1761              		.loc 1 232 3 is_stmt 1 view .LVU529
 232:Core/Src/main.c **** 
 1762              		.loc 1 232 28 is_stmt 0 view .LVU530
 1763 00bc 83F87520 		strb	r2, [r3, #117]
 235:Core/Src/main.c ****   HAL_GPIO_WritePin(DEV1_RST_GPIO_Port, DEV1_RST_Pin, GPIO_PIN_RESET);
 1764              		.loc 1 235 3 is_stmt 1 view .LVU531
 1765 00c0 A14F     		ldr	r7, .L142+20
 1766 00c2 0022     		movs	r2, #0
 1767 00c4 0421     		movs	r1, #4
 1768 00c6 3846     		mov	r0, r7
 1769 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1770              	.LVL112:
 236:Core/Src/main.c **** 	HAL_Delay(100);
 1771              		.loc 1 236 3 view .LVU532
 1772 00cc 9F4D     		ldr	r5, .L142+24
 1773 00ce 0022     		movs	r2, #0
 1774 00d0 0121     		movs	r1, #1
 1775 00d2 2846     		mov	r0, r5
 1776 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1777              	.LVL113:
 237:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_2, GPIO_PIN_SET);
 1778              		.loc 1 237 2 view .LVU533
 1779 00d8 6420     		movs	r0, #100
 1780 00da FFF7FEFF 		bl	HAL_Delay
 1781              	.LVL114:
 238:Core/Src/main.c ****   HAL_GPIO_WritePin(DEV1_RST_GPIO_Port, DEV1_RST_Pin, GPIO_PIN_SET);
 1782              		.loc 1 238 3 view .LVU534
 1783 00de 0122     		movs	r2, #1
 1784 00e0 0421     		movs	r1, #4
 1785 00e2 3846     		mov	r0, r7
 1786 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1787              	.LVL115:
 239:Core/Src/main.c **** 
 1788              		.loc 1 239 3 view .LVU535
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 74


 1789 00e8 0122     		movs	r2, #1
 1790 00ea 1146     		mov	r1, r2
 1791 00ec 2846     		mov	r0, r5
 1792 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 1793              	.LVL116:
 241:Core/Src/main.c ****   /* USER CODE END 2 */
 1794              		.loc 1 241 3 view .LVU536
 241:Core/Src/main.c ****   /* USER CODE END 2 */
 1795              		.loc 1 241 22 is_stmt 0 view .LVU537
 1796 00f2 FFF7FEFF 		bl	HAL_GetTick
 1797              	.LVL117:
 1798 00f6 0546     		mov	r5, r0
 1799              	.LVL118:
 200:Core/Src/main.c **** 
 1800              		.loc 1 200 11 view .LVU538
 1801 00f8 0027     		movs	r7, #0
 1802 00fa 89E1     		b	.L102
 1803              	.LVL119:
 1804              	.L136:
 213:Core/Src/main.c ****     // RTC SETUP MENU
 1805              		.loc 1 213 5 is_stmt 1 view .LVU539
 1806 00fc 4FF47A71 		mov	r1, #1000
 1807 0100 9348     		ldr	r0, .L142+28
 1808 0102 FFF7FEFF 		bl	Show_Message
 1809              	.LVL120:
 1810 0106 CAE7     		b	.L99
 1811              	.LVL121:
 1812              	.L100:
 227:Core/Src/main.c ****   }
 1813              		.loc 1 227 5 view .LVU540
 1814 0108 4FF47A71 		mov	r1, #1000
 1815 010c 9148     		ldr	r0, .L142+32
 1816              	.LVL122:
 227:Core/Src/main.c ****   }
 1817              		.loc 1 227 5 is_stmt 0 view .LVU541
 1818 010e FFF7FEFF 		bl	Show_Message
 1819              	.LVL123:
 1820 0112 CFE7     		b	.L101
 1821              	.LVL124:
 1822              	.L103:
 261:Core/Src/main.c ****       if(transmitMode == TRANSMIT_MODE_GET){
 1823              		.loc 1 261 7 is_stmt 1 view .LVU542
 261:Core/Src/main.c ****       if(transmitMode == TRANSMIT_MODE_GET){
 1824              		.loc 1 261 31 is_stmt 0 view .LVU543
 1825 0114 904B     		ldr	r3, .L142+36
 1826 0116 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 261:Core/Src/main.c ****       if(transmitMode == TRANSMIT_MODE_GET){
 1827              		.loc 1 261 7 view .LVU544
 1828 0118 8A4B     		ldr	r3, .L142+16
 1829 011a 03EB8010 		add	r0, r3, r0, lsl #6
 1830 011e FFF7FEFF 		bl	Dispaly_Data
 1831              	.LVL125:
 262:Core/Src/main.c ****         if(deviceList[dev_num].deviceMode != TYPE_SET_ONLY){
 1832              		.loc 1 262 7 is_stmt 1 view .LVU545
 262:Core/Src/main.c ****         if(deviceList[dev_num].deviceMode != TYPE_SET_ONLY){
 1833              		.loc 1 262 23 is_stmt 0 view .LVU546
 1834 0122 8E4B     		ldr	r3, .L142+40
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 75


 1835 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 262:Core/Src/main.c ****         if(deviceList[dev_num].deviceMode != TYPE_SET_ONLY){
 1836              		.loc 1 262 9 view .LVU547
 1837 0126 0BBB     		cbnz	r3, .L105
 263:Core/Src/main.c ****           HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 1838              		.loc 1 263 9 is_stmt 1 view .LVU548
 263:Core/Src/main.c ****           HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 1839              		.loc 1 263 31 is_stmt 0 view .LVU549
 1840 0128 8B4B     		ldr	r3, .L142+36
 1841 012a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1842 012c 854B     		ldr	r3, .L142+16
 1843 012e 03EB8213 		add	r3, r3, r2, lsl #6
 1844 0132 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 263:Core/Src/main.c ****           HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 1845              		.loc 1 263 11 view .LVU550
 1846 0134 012B     		cmp	r3, #1
 1847 0136 00F09181 		beq	.L104
 264:Core/Src/main.c ****           HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 1848              		.loc 1 264 11 is_stmt 1 view .LVU551
 264:Core/Src/main.c ****           HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 1849              		.loc 1 264 78 is_stmt 0 view .LVU552
 1850 013a 9301     		lsls	r3, r2, #6
 1851 013c 03F13001 		add	r1, r3, #48
 1852 0140 DFF80082 		ldr	r8, .L142+16
 1853 0144 4144     		add	r1, r1, r8
 264:Core/Src/main.c ****           HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 1854              		.loc 1 264 11 view .LVU553
 1855 0146 0A22     		movs	r2, #10
 1856 0148 0531     		adds	r1, r1, #5
 1857 014a 58F80300 		ldr	r0, [r8, r3]
 1858 014e FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 1859              	.LVL126:
 265:Core/Src/main.c ****         }
 1860              		.loc 1 265 11 is_stmt 1 view .LVU554
 1861 0152 814B     		ldr	r3, .L142+36
 1862 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265:Core/Src/main.c ****         }
 1863              		.loc 1 265 77 is_stmt 0 view .LVU555
 1864 0156 9B01     		lsls	r3, r3, #6
 1865 0158 03F12801 		add	r1, r3, #40
 1866 015c 4144     		add	r1, r1, r8
 265:Core/Src/main.c ****         }
 1867              		.loc 1 265 11 view .LVU556
 1868 015e 0A22     		movs	r2, #10
 1869 0160 0331     		adds	r1, r1, #3
 1870 0162 58F80300 		ldr	r0, [r8, r3]
 1871 0166 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1872              	.LVL127:
 1873 016a 77E1     		b	.L104
 1874              	.L105:
 1875              	.LBB18:
 268:Core/Src/main.c ****         //sprintf(setValueTx, "%d", deviceList[dev_num].setValue);
 1876              		.loc 1 268 9 is_stmt 1 view .LVU557
 270:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, setValueTx, 10);
 1877              		.loc 1 270 9 view .LVU558
 270:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, setValueTx, 10);
 1878              		.loc 1 270 33 is_stmt 0 view .LVU559
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 76


 1879 016c DFF8D481 		ldr	r8, .L142+16
 1880 0170 DFF8E491 		ldr	r9, .L142+36
 1881 0174 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 1882 0178 08EB8313 		add	r3, r8, r3, lsl #6
 270:Core/Src/main.c ****         HAL_UART_Transmit_DMA(deviceList[dev_num].uart, setValueTx, 10);
 1883              		.loc 1 270 9 view .LVU560
 1884 017c D3E90401 		ldrd	r0, [r3, #16]
 1885 0180 FFF7FEFF 		bl	__aeabi_d2iz
 1886              	.LVL128:
 1887 0184 0A22     		movs	r2, #10
 1888 0186 16A9     		add	r1, sp, #88
 1889 0188 FFF7FEFF 		bl	itoa
 1890              	.LVL129:
 271:Core/Src/main.c ****         transmitMode = TRANSMIT_MODE_GET;
 1891              		.loc 1 271 9 is_stmt 1 view .LVU561
 1892 018c 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 1893 0190 9B01     		lsls	r3, r3, #6
 1894 0192 0A22     		movs	r2, #10
 1895 0194 16A9     		add	r1, sp, #88
 1896 0196 58F80300 		ldr	r0, [r8, r3]
 1897 019a FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 1898              	.LVL130:
 272:Core/Src/main.c ****       }
 1899              		.loc 1 272 9 view .LVU562
 272:Core/Src/main.c ****       }
 1900              		.loc 1 272 22 is_stmt 0 view .LVU563
 1901 019e 6F4B     		ldr	r3, .L142+40
 1902 01a0 0022     		movs	r2, #0
 1903 01a2 1A70     		strb	r2, [r3]
 1904 01a4 5AE1     		b	.L104
 1905              	.L138:
 272:Core/Src/main.c ****       }
 1906              		.loc 1 272 22 view .LVU564
 1907              	.LBE18:
 280:Core/Src/main.c ****       }else{
 1908              		.loc 1 280 9 is_stmt 1 view .LVU565
 280:Core/Src/main.c ****       }else{
 1909              		.loc 1 280 16 is_stmt 0 view .LVU566
 1910 01a6 08F10103 		add	r3, r8, #1
 1911 01aa 6B4A     		ldr	r2, .L142+36
 1912 01ac 1370     		strb	r3, [r2]
 1913 01ae 64E1     		b	.L107
 1914              	.L139:
 300:Core/Src/main.c ****       // state = STATE_800INIT;
 1915              		.loc 1 300 38 discriminator 1 view .LVU567
 1916 01b0 6B4B     		ldr	r3, .L142+44
 1917 01b2 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 300:Core/Src/main.c ****       // state = STATE_800INIT;
 1918              		.loc 1 300 29 discriminator 1 view .LVU568
 1919 01b6 B8F1000F 		cmp	r8, #0
 1920 01ba 40F06A81 		bne	.L108
 302:Core/Src/main.c ****       simtmr = HAL_GetTick();
 1921              		.loc 1 302 7 is_stmt 1 view .LVU569
 302:Core/Src/main.c ****       simtmr = HAL_GetTick();
 1922              		.loc 1 302 13 is_stmt 0 view .LVU570
 1923 01be 0122     		movs	r2, #1
 1924 01c0 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 77


 303:Core/Src/main.c ****       dev_num = 0;
 1925              		.loc 1 303 7 is_stmt 1 view .LVU571
 303:Core/Src/main.c ****       dev_num = 0;
 1926              		.loc 1 303 16 is_stmt 0 view .LVU572
 1927 01c2 FFF7FEFF 		bl	HAL_GetTick
 1928              	.LVL131:
 304:Core/Src/main.c ****       screen_scroll_mode = SCROLL_MODE_AUTO;
 1929              		.loc 1 304 7 is_stmt 1 view .LVU573
 304:Core/Src/main.c ****       screen_scroll_mode = SCROLL_MODE_AUTO;
 1930              		.loc 1 304 15 is_stmt 0 view .LVU574
 1931 01c6 0023     		movs	r3, #0
 1932 01c8 634A     		ldr	r2, .L142+36
 1933 01ca 1370     		strb	r3, [r2]
 305:Core/Src/main.c ****       if(isSDInitialised){
 1934              		.loc 1 305 7 is_stmt 1 view .LVU575
 305:Core/Src/main.c ****       if(isSDInitialised){
 1935              		.loc 1 305 26 is_stmt 0 view .LVU576
 1936 01cc 654A     		ldr	r2, .L142+48
 1937 01ce 1370     		strb	r3, [r2]
 306:Core/Src/main.c ****         // CREATE FILE "init_time_date.txt"
 1938              		.loc 1 306 7 is_stmt 1 view .LVU577
 306:Core/Src/main.c ****         // CREATE FILE "init_time_date.txt"
 1939              		.loc 1 306 10 is_stmt 0 view .LVU578
 1940 01d0 5B4B     		ldr	r3, .L142+12
 1941 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306:Core/Src/main.c ****         // CREATE FILE "init_time_date.txt"
 1942              		.loc 1 306 9 view .LVU579
 1943 01d4 002B     		cmp	r3, #0
 1944 01d6 00F05C81 		beq	.L108
 1945              	.LBB19:
 308:Core/Src/main.c ****         uint8_t buf_len;
 1946              		.loc 1 308 9 is_stmt 1 view .LVU580
 309:Core/Src/main.c ****         sprintf(filename_buff, "init_%02d-%02d-%02d_%02d-%02d-%2d.txt", gTime.Hours, gTime.Minutes,
 1947              		.loc 1 309 9 view .LVU581
 310:Core/Src/main.c ****         FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1948              		.loc 1 310 9 view .LVU582
 310:Core/Src/main.c ****         FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1949              		.loc 1 310 106 is_stmt 0 view .LVU583
 1950 01da 0DF50453 		add	r3, sp, #8448
 1951 01de 1233     		adds	r3, r3, #18
 1952 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 310:Core/Src/main.c ****         FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1953              		.loc 1 310 121 view .LVU584
 1954 01e2 0DF50452 		add	r2, sp, #8448
 1955 01e6 2632     		adds	r2, r2, #38
 1956 01e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 310:Core/Src/main.c ****         FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1957              		.loc 1 310 133 view .LVU585
 1958 01ea 0DF50451 		add	r1, sp, #8448
 1959 01ee 2531     		adds	r1, r1, #37
 1960 01f0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 310:Core/Src/main.c ****         FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
 1961              		.loc 1 310 146 view .LVU586
 1962 01f2 0DF50450 		add	r0, sp, #8448
 1963 01f6 2730     		adds	r0, r0, #39
 1964 01f8 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 310:Core/Src/main.c ****         FR_Status = f_open(&Fil, filename_buff, FA_WRITE | FA_OPEN_ALWAYS | FA_CREATE_ALWAYS);
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 78


 1965              		.loc 1 310 9 view .LVU587
 1966 01fa 0390     		str	r0, [sp, #12]
 1967 01fc 0291     		str	r1, [sp, #8]
 1968 01fe 0192     		str	r2, [sp, #4]
 1969 0200 0093     		str	r3, [sp]
 1970 0202 0DF50453 		add	r3, sp, #8448
 1971 0206 1133     		adds	r3, r3, #17
 1972 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1973 020a 0DF50452 		add	r2, sp, #8448
 1974 020e 1032     		adds	r2, r2, #16
 1975 0210 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1976 0212 5549     		ldr	r1, .L142+52
 1977 0214 0DA8     		add	r0, sp, #52
 1978 0216 FFF7FEFF 		bl	sprintf
 1979              	.LVL132:
 311:Core/Src/main.c ****         for (uint8_t i = 0; i < DEV_COUNT; i++){
 1980              		.loc 1 311 9 is_stmt 1 view .LVU588
 311:Core/Src/main.c ****         for (uint8_t i = 0; i < DEV_COUNT; i++){
 1981              		.loc 1 311 21 is_stmt 0 view .LVU589
 1982 021a 1A22     		movs	r2, #26
 1983 021c 0DA9     		add	r1, sp, #52
 1984 021e 2AA8     		add	r0, sp, #168
 1985 0220 FFF7FEFF 		bl	f_open
 1986              	.LVL133:
 312:Core/Src/main.c ****           char init_file_buf[75];
 1987              		.loc 1 312 9 is_stmt 1 view .LVU590
 1988              	.LBB20:
 312:Core/Src/main.c ****           char init_file_buf[75];
 1989              		.loc 1 312 14 view .LVU591
 312:Core/Src/main.c ****           char init_file_buf[75];
 1990              		.loc 1 312 9 is_stmt 0 view .LVU592
 1991 0224 33E0     		b	.L109
 1992              	.LVL134:
 1993              	.L111:
 1994              	.LBB21:
 1995              	.LBB22:
 319:Core/Src/main.c ****               break;
 1996              		.loc 1 319 15 is_stmt 1 view .LVU593
 1997 0226 514B     		ldr	r3, .L142+56
 1998 0228 0DF1240C 		add	ip, sp, #36
 1999 022c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2000 022e ACE80700 		stmia	ip!, {r0, r1, r2}
 2001 0232 ACF80030 		strh	r3, [ip]	@ movhi
 320:Core/Src/main.c ****             case TYPE_SET_TEL:
 2002              		.loc 1 320 15 view .LVU594
 2003              	.L114:
 328:Core/Src/main.c ****             uint8_t min[5];
 2004              		.loc 1 328 13 view .LVU595
 329:Core/Src/main.c ****             gcvt(deviceList[i].minValue, 5, min);
 2005              		.loc 1 329 13 view .LVU596
 330:Core/Src/main.c ****             gcvt(deviceList[i].maxValue, 5, max);
 2006              		.loc 1 330 13 view .LVU597
 2007 0236 434B     		ldr	r3, .L142+16
 2008 0238 03EB891B 		add	fp, r3, r9, lsl #6
 2009 023c 07A9     		add	r1, sp, #28
 2010 023e 0520     		movs	r0, #5
 2011 0240 9BED060B 		vldr.64	d0, [fp, #24]
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 79


 2012 0244 FFF7FEFF 		bl	gcvt
 2013              	.LVL135:
 331:Core/Src/main.c ****             buf_len = sprintf(init_file_buf, "DEV: %d\nMin/Max: %s/%s\nDev type: %s\n\n", i, min, m
 2014              		.loc 1 331 13 view .LVU598
 2015 0248 0DF1140A 		add	r10, sp, #20
 2016 024c 5146     		mov	r1, r10
 2017 024e 0520     		movs	r0, #5
 2018 0250 9BED080B 		vldr.64	d0, [fp, #32]
 2019 0254 FFF7FEFF 		bl	gcvt
 2020              	.LVL136:
 332:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 2021              		.loc 1 332 13 view .LVU599
 332:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 2022              		.loc 1 332 23 is_stmt 0 view .LVU600
 2023 0258 09AB     		add	r3, sp, #36
 2024 025a 0193     		str	r3, [sp, #4]
 2025 025c CDF800A0 		str	r10, [sp]
 2026 0260 07AB     		add	r3, sp, #28
 2027 0262 4A46     		mov	r2, r9
 2028 0264 4249     		ldr	r1, .L142+60
 2029 0266 16A8     		add	r0, sp, #88
 2030 0268 FFF7FEFF 		bl	sprintf
 2031              	.LVL137:
 332:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 2032              		.loc 1 332 21 discriminator 1 view .LVU601
 2033 026c 5FFA80F9 		uxtb	r9, r0
 2034              	.LVL138:
 333:Core/Src/main.c ****           }else{
 2035              		.loc 1 333 13 is_stmt 1 view .LVU602
 2036 0270 4FF40051 		mov	r1, #8192
 2037 0274 2F48     		ldr	r0, .L142
 2038 0276 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 2039              	.LVL139:
 2040              	.L115:
 333:Core/Src/main.c ****           }else{
 2041              		.loc 1 333 13 is_stmt 0 view .LVU603
 2042              	.LBE22:
 337:Core/Src/main.c ****         }
 2043              		.loc 1 337 11 is_stmt 1 view .LVU604
 337:Core/Src/main.c ****         }
 2044              		.loc 1 337 23 is_stmt 0 view .LVU605
 2045 027a 29AB     		add	r3, sp, #164
 2046 027c 4A46     		mov	r2, r9
 2047 027e 16A9     		add	r1, sp, #88
 2048 0280 2AA8     		add	r0, sp, #168
 2049 0282 FFF7FEFF 		bl	f_write
 2050              	.LVL140:
 2051              	.LBE21:
 312:Core/Src/main.c ****           char init_file_buf[75];
 2052              		.loc 1 312 45 is_stmt 1 discriminator 2 view .LVU606
 2053 0286 08F10108 		add	r8, r8, #1
 2054              	.LVL141:
 312:Core/Src/main.c ****           char init_file_buf[75];
 2055              		.loc 1 312 45 is_stmt 0 discriminator 2 view .LVU607
 2056 028a 5FFA88F8 		uxtb	r8, r8
 2057              	.LVL142:
 2058              	.L109:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 80


 312:Core/Src/main.c ****           char init_file_buf[75];
 2059              		.loc 1 312 31 is_stmt 1 discriminator 1 view .LVU608
 2060 028e B8F1010F 		cmp	r8, #1
 2061 0292 2CD8     		bhi	.L137
 2062              	.LBB24:
 313:Core/Src/main.c ****           if(deviceList[i].initState == DEV_STATE_IN){
 2063              		.loc 1 313 11 view .LVU609
 314:Core/Src/main.c ****             char dev_type_buf[15];
 2064              		.loc 1 314 11 view .LVU610
 314:Core/Src/main.c ****             char dev_type_buf[15];
 2065              		.loc 1 314 27 is_stmt 0 view .LVU611
 2066 0294 C146     		mov	r9, r8
 2067 0296 2B4B     		ldr	r3, .L142+16
 2068 0298 03EB8813 		add	r3, r3, r8, lsl #6
 2069 029c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 314:Core/Src/main.c ****             char dev_type_buf[15];
 2070              		.loc 1 314 13 view .LVU612
 2071 029e DBB1     		cbz	r3, .L110
 2072              	.LBB23:
 315:Core/Src/main.c ****             switch (deviceList[i].deviceMode)
 2073              		.loc 1 315 13 is_stmt 1 view .LVU613
 316:Core/Src/main.c ****             {
 2074              		.loc 1 316 13 view .LVU614
 316:Core/Src/main.c ****             {
 2075              		.loc 1 316 34 is_stmt 0 view .LVU615
 2076 02a0 284B     		ldr	r3, .L142+16
 2077 02a2 03EB8813 		add	r3, r3, r8, lsl #6
 2078 02a6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 316:Core/Src/main.c ****             {
 2079              		.loc 1 316 13 view .LVU616
 2080 02a8 012B     		cmp	r3, #1
 2081 02aa BCD0     		beq	.L111
 2082 02ac 022B     		cmp	r3, #2
 2083 02ae 0AD0     		beq	.L112
 2084 02b0 002B     		cmp	r3, #0
 2085 02b2 C0D1     		bne	.L114
 322:Core/Src/main.c ****               break;
 2086              		.loc 1 322 15 is_stmt 1 view .LVU617
 2087 02b4 2F4B     		ldr	r3, .L142+64
 2088 02b6 0DF1240C 		add	ip, sp, #36
 2089 02ba 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2090 02bc ACE80700 		stmia	ip!, {r0, r1, r2}
 2091 02c0 8CF80030 		strb	r3, [ip]
 323:Core/Src/main.c ****             case TYPE_TEL_ONLY:
 2092              		.loc 1 323 15 view .LVU618
 2093 02c4 B7E7     		b	.L114
 2094              	.L112:
 325:Core/Src/main.c ****               break;
 2095              		.loc 1 325 15 view .LVU619
 2096 02c6 2C4B     		ldr	r3, .L142+68
 2097 02c8 0DF1240C 		add	ip, sp, #36
 2098 02cc 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2099 02ce ACE80700 		stmia	ip!, {r0, r1, r2}
 2100 02d2 ACF80030 		strh	r3, [ip]	@ movhi
 326:Core/Src/main.c ****             }
 2101              		.loc 1 326 15 view .LVU620
 2102 02d6 AEE7     		b	.L114
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 81


 2103              	.L110:
 2104              	.LBE23:
 335:Core/Src/main.c ****           }
 2105              		.loc 1 335 13 view .LVU621
 335:Core/Src/main.c ****           }
 2106              		.loc 1 335 23 is_stmt 0 view .LVU622
 2107 02d8 284B     		ldr	r3, .L142+72
 2108 02da 0DF1580C 		add	ip, sp, #88
 2109 02de 0FCB     		ldm	r3, {r0, r1, r2, r3}
 2110 02e0 ACE80700 		stmia	ip!, {r0, r1, r2}
 2111 02e4 8CF80030 		strb	r3, [ip]
 2112              	.LVL143:
 335:Core/Src/main.c ****           }
 2113              		.loc 1 335 21 discriminator 1 view .LVU623
 2114 02e8 4FF00C09 		mov	r9, #12
 2115 02ec C5E7     		b	.L115
 2116              	.LVL144:
 2117              	.L137:
 335:Core/Src/main.c ****           }
 2118              		.loc 1 335 21 discriminator 1 view .LVU624
 2119              	.LBE24:
 2120              	.LBE20:
 339:Core/Src/main.c ****         // SAVE CONFIG
 2121              		.loc 1 339 9 is_stmt 1 view .LVU625
 2122 02ee 2AA8     		add	r0, sp, #168
 2123 02f0 FFF7FEFF 		bl	f_close
 2124              	.LVL145:
 2125 02f4 CDE0     		b	.L108
 2126              	.LVL146:
 2127              	.L119:
 339:Core/Src/main.c ****         // SAVE CONFIG
 2128              		.loc 1 339 9 is_stmt 0 view .LVU626
 2129              	.LBE19:
 352:Core/Src/main.c ****           }
 2130              		.loc 1 352 13 is_stmt 1 view .LVU627
 352:Core/Src/main.c ****           }
 2131              		.loc 1 352 20 is_stmt 0 view .LVU628
 2132 02f6 184B     		ldr	r3, .L142+36
 2133 02f8 0022     		movs	r2, #0
 2134 02fa 1A70     		strb	r2, [r3]
 2135              	.L120:
 354:Core/Src/main.c ****       }
 2136              		.loc 1 354 17 is_stmt 1 view .LVU629
 354:Core/Src/main.c ****       }
 2137              		.loc 1 354 37 is_stmt 0 view .LVU630
 2138 02fc 164B     		ldr	r3, .L142+36
 2139 02fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2140 0300 104B     		ldr	r3, .L142+16
 2141 0302 03EB8213 		add	r3, r3, r2, lsl #6
 2142 0306 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 354:Core/Src/main.c ****       }
 2143              		.loc 1 354 17 view .LVU631
 2144 0308 002B     		cmp	r3, #0
 2145 030a 40F0D180 		bne	.L118
 2146              	.L121:
 348:Core/Src/main.c ****           if(dev_num < DEV_COUNT-1){
 2147              		.loc 1 348 9 is_stmt 1 view .LVU632
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 82


 349:Core/Src/main.c ****             dev_num++;
 2148              		.loc 1 349 11 view .LVU633
 349:Core/Src/main.c ****             dev_num++;
 2149              		.loc 1 349 22 is_stmt 0 view .LVU634
 2150 030e 124B     		ldr	r3, .L142+36
 2151 0310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 349:Core/Src/main.c ****             dev_num++;
 2152              		.loc 1 349 13 view .LVU635
 2153 0312 002B     		cmp	r3, #0
 2154 0314 EFD1     		bne	.L119
 350:Core/Src/main.c ****           }else{
 2155              		.loc 1 350 13 is_stmt 1 view .LVU636
 350:Core/Src/main.c ****           }else{
 2156              		.loc 1 350 20 is_stmt 0 view .LVU637
 2157 0316 0133     		adds	r3, r3, #1
 2158 0318 0F4A     		ldr	r2, .L142+36
 2159 031a 1370     		strb	r3, [r2]
 2160 031c EEE7     		b	.L120
 2161              	.L140:
 367:Core/Src/main.c ****       if(screen_scroll_mode == SCROLL_MODE_AUTO){
 2162              		.loc 1 367 7 is_stmt 1 view .LVU638
 367:Core/Src/main.c ****       if(screen_scroll_mode == SCROLL_MODE_AUTO){
 2163              		.loc 1 367 26 is_stmt 0 view .LVU639
 2164 031e FFF7FEFF 		bl	HAL_GetTick
 2165              	.LVL147:
 2166 0322 0446     		mov	r4, r0
 2167              	.LVL148:
 368:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2168              		.loc 1 368 7 is_stmt 1 view .LVU640
 368:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2169              		.loc 1 368 29 is_stmt 0 view .LVU641
 2170 0324 0F4B     		ldr	r3, .L142+48
 2171 0326 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 368:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2172              		.loc 1 368 9 view .LVU642
 2173 0328 53BB     		cbnz	r3, .L123
 369:Core/Src/main.c ****       }else{
 2174              		.loc 1 369 9 is_stmt 1 view .LVU643
 369:Core/Src/main.c ****       }else{
 2175              		.loc 1 369 28 is_stmt 0 view .LVU644
 2176 032a 0E4B     		ldr	r3, .L142+48
 2177 032c 0122     		movs	r2, #1
 2178 032e 1A70     		strb	r2, [r3]
 2179 0330 CCE0     		b	.L122
 2180              	.L143:
 2181 0332 00BF     		.align	2
 2182              	.L142:
 2183 0334 00080240 		.word	1073874944
 2184 0338 00000000 		.word	hrtc
 2185 033c 0C000000 		.word	.LC2
 2186 0340 00000000 		.word	isSDInitialised
 2187 0344 00000000 		.word	deviceList
 2188 0348 000C0240 		.word	1073875968
 2189 034c 00040240 		.word	1073873920
 2190 0350 00000000 		.word	.LC1
 2191 0354 10000000 		.word	.LC3
 2192 0358 00000000 		.word	dev_num
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 83


 2193 035c 00000000 		.word	transmitMode
 2194 0360 00000000 		.word	state
 2195 0364 00000000 		.word	screen_scroll_mode
 2196 0368 28000000 		.word	.LC4
 2197 036c 50000000 		.word	.LC5
 2198 0370 80000000 		.word	.LC8
 2199 0374 60000000 		.word	.LC6
 2200 0378 70000000 		.word	.LC7
 2201 037c A8000000 		.word	.LC9
 2202              	.L123:
 371:Core/Src/main.c ****       }
 2203              		.loc 1 371 9 is_stmt 1 view .LVU645
 371:Core/Src/main.c ****       }
 2204              		.loc 1 371 28 is_stmt 0 view .LVU646
 2205 0380 774B     		ldr	r3, .L144
 2206 0382 0022     		movs	r2, #0
 2207 0384 1A70     		strb	r2, [r3]
 2208 0386 A1E0     		b	.L122
 2209              	.LVL149:
 2210              	.L141:
 401:Core/Src/main.c ****         if(deviceList[dev_num].setValue+5<=deviceList[dev_num].maxValue){
 2211              		.loc 1 401 7 is_stmt 1 view .LVU647
 401:Core/Src/main.c ****         if(deviceList[dev_num].setValue+5<=deviceList[dev_num].maxValue){
 2212              		.loc 1 401 10 is_stmt 0 view .LVU648
 2213 0388 7648     		ldr	r0, .L144+4
 2214 038a FFF7FEFF 		bl	isRight
 2215              	.LVL150:
 401:Core/Src/main.c ****         if(deviceList[dev_num].setValue+5<=deviceList[dev_num].maxValue){
 2216              		.loc 1 401 9 discriminator 1 view .LVU649
 2217 038e A0B1     		cbz	r0, .L125
 402:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 2218              		.loc 1 402 9 is_stmt 1 view .LVU650
 402:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 2219              		.loc 1 402 31 is_stmt 0 view .LVU651
 2220 0390 754B     		ldr	r3, .L144+8
 2221 0392 93F80090 		ldrb	r9, [r3]	@ zero_extendqisi2
 2222 0396 754B     		ldr	r3, .L144+12
 2223 0398 03EB8918 		add	r8, r3, r9, lsl #6
 402:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 2224              		.loc 1 402 40 view .LVU652
 2225 039c 0022     		movs	r2, #0
 2226 039e 744B     		ldr	r3, .L144+16
 2227 03a0 D8E90401 		ldrd	r0, [r8, #16]
 2228 03a4 FFF7FEFF 		bl	__aeabi_dadd
 2229              	.LVL151:
 2230 03a8 8246     		mov	r10, r0
 2231 03aa 8B46     		mov	fp, r1
 402:Core/Src/main.c ****           deviceList[dev_num].setValue +=5;
 2232              		.loc 1 402 11 view .LVU653
 2233 03ac D8E90823 		ldrd	r2, [r8, #32]
 2234 03b0 FFF7FEFF 		bl	__aeabi_dcmple
 2235              	.LVL152:
 2236 03b4 08B1     		cbz	r0, .L125
 403:Core/Src/main.c ****         }
 2237              		.loc 1 403 11 is_stmt 1 view .LVU654
 403:Core/Src/main.c ****         }
 2238              		.loc 1 403 40 is_stmt 0 view .LVU655
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 84


 2239 03b6 C8E904AB 		strd	r10, [r8, #16]
 2240              	.L125:
 406:Core/Src/main.c ****         if(deviceList[dev_num].setValue-5>=deviceList[dev_num].minValue){
 2241              		.loc 1 406 7 is_stmt 1 view .LVU656
 406:Core/Src/main.c ****         if(deviceList[dev_num].setValue-5>=deviceList[dev_num].minValue){
 2242              		.loc 1 406 10 is_stmt 0 view .LVU657
 2243 03ba 6A48     		ldr	r0, .L144+4
 2244 03bc FFF7FEFF 		bl	isLeft
 2245              	.LVL153:
 406:Core/Src/main.c ****         if(deviceList[dev_num].setValue-5>=deviceList[dev_num].minValue){
 2246              		.loc 1 406 9 discriminator 1 view .LVU658
 2247 03c0 0028     		cmp	r0, #0
 2248 03c2 00F08D80 		beq	.L124
 407:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 2249              		.loc 1 407 9 is_stmt 1 view .LVU659
 407:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 2250              		.loc 1 407 31 is_stmt 0 view .LVU660
 2251 03c6 684B     		ldr	r3, .L144+8
 2252 03c8 93F80090 		ldrb	r9, [r3]	@ zero_extendqisi2
 2253 03cc 674B     		ldr	r3, .L144+12
 2254 03ce 03EB8918 		add	r8, r3, r9, lsl #6
 407:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 2255              		.loc 1 407 40 view .LVU661
 2256 03d2 0022     		movs	r2, #0
 2257 03d4 664B     		ldr	r3, .L144+16
 2258 03d6 D8E90401 		ldrd	r0, [r8, #16]
 2259 03da FFF7FEFF 		bl	__aeabi_dsub
 2260              	.LVL154:
 2261 03de 8246     		mov	r10, r0
 2262 03e0 8B46     		mov	fp, r1
 407:Core/Src/main.c ****           deviceList[dev_num].setValue -=5;
 2263              		.loc 1 407 11 view .LVU662
 2264 03e2 D8E90623 		ldrd	r2, [r8, #24]
 2265 03e6 FFF7FEFF 		bl	__aeabi_dcmpge
 2266              	.LVL155:
 2267 03ea 0028     		cmp	r0, #0
 2268 03ec 78D0     		beq	.L124
 408:Core/Src/main.c ****         }
 2269              		.loc 1 408 11 is_stmt 1 view .LVU663
 408:Core/Src/main.c ****         }
 2270              		.loc 1 408 40 is_stmt 0 view .LVU664
 2271 03ee C8E904AB 		strd	r10, [r8, #16]
 2272 03f2 75E0     		b	.L124
 2273              	.L130:
 428:Core/Src/main.c ****       }else{
 2274              		.loc 1 428 9 is_stmt 1 view .LVU665
 428:Core/Src/main.c ****       }else{
 2275              		.loc 1 428 47 is_stmt 0 view .LVU666
 2276 03f4 5D4B     		ldr	r3, .L144+12
 2277 03f6 03EB8213 		add	r3, r3, r2, lsl #6
 2278 03fa 0122     		movs	r2, #1
 2279 03fc 83F82920 		strb	r2, [r3, #41]
 2280              	.L131:
 434:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2281              		.loc 1 434 7 is_stmt 1 view .LVU667
 434:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2282              		.loc 1 434 29 is_stmt 0 view .LVU668
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 85


 2283 0400 574B     		ldr	r3, .L144
 2284 0402 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 434:Core/Src/main.c ****         screen_scroll_mode = SCROLL_MODE_HALT;
 2285              		.loc 1 434 9 view .LVU669
 2286 0404 002B     		cmp	r3, #0
 2287 0406 40F0A680 		bne	.L132
 435:Core/Src/main.c ****       }else{
 2288              		.loc 1 435 9 is_stmt 1 view .LVU670
 435:Core/Src/main.c ****       }else{
 2289              		.loc 1 435 28 is_stmt 0 view .LVU671
 2290 040a 554B     		ldr	r3, .L144
 2291 040c 0122     		movs	r2, #1
 2292 040e 1A70     		strb	r2, [r3]
 2293              	.LVL156:
 2294              	.L102:
 246:Core/Src/main.c ****   { // NEW CODE START
 2295              		.loc 1 246 3 is_stmt 1 view .LVU672
 248:Core/Src/main.c ****       Display_Init(dev_num, DEV_COUNT);
 2296              		.loc 1 248 5 view .LVU673
 248:Core/Src/main.c ****       Display_Init(dev_num, DEV_COUNT);
 2297              		.loc 1 248 14 is_stmt 0 view .LVU674
 2298 0410 584B     		ldr	r3, .L144+20
 2299 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 248:Core/Src/main.c ****       Display_Init(dev_num, DEV_COUNT);
 2300              		.loc 1 248 7 view .LVU675
 2301 0414 002B     		cmp	r3, #0
 2302 0416 7FF47DAE 		bne	.L103
 249:Core/Src/main.c ****       HAL_UART_Transmit_DMA(deviceList[dev_num].uart, deviceList[dev_num].tx_buff, 10);
 2303              		.loc 1 249 7 is_stmt 1 view .LVU676
 2304 041a DFF84C91 		ldr	r9, .L144+8
 2305 041e 0221     		movs	r1, #2
 2306 0420 99F80000 		ldrb	r0, [r9]	@ zero_extendqisi2
 2307 0424 FFF7FEFF 		bl	Display_Init
 2308              	.LVL157:
 250:Core/Src/main.c ****        HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 2309              		.loc 1 250 7 view .LVU677
 2310 0428 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 250:Core/Src/main.c ****        HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 2311              		.loc 1 250 74 is_stmt 0 view .LVU678
 2312 042c 9B01     		lsls	r3, r3, #6
 2313 042e 03F13001 		add	r1, r3, #48
 2314 0432 DFF83881 		ldr	r8, .L144+12
 2315 0436 4144     		add	r1, r1, r8
 250:Core/Src/main.c ****        HAL_UART_Receive_DMA(deviceList[dev_num].uart, deviceList[dev_num].rx_buff, 10);
 2316              		.loc 1 250 7 view .LVU679
 2317 0438 0A22     		movs	r2, #10
 2318 043a 0531     		adds	r1, r1, #5
 2319 043c 58F80300 		ldr	r0, [r8, r3]
 2320 0440 FFF7FEFF 		bl	HAL_UART_Transmit_DMA
 2321              	.LVL158:
 251:Core/Src/main.c ****     }
 2322              		.loc 1 251 8 is_stmt 1 view .LVU680
 2323 0444 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 251:Core/Src/main.c ****     }
 2324              		.loc 1 251 74 is_stmt 0 view .LVU681
 2325 0448 9B01     		lsls	r3, r3, #6
 2326 044a 03F12801 		add	r1, r3, #40
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 86


 2327 044e 4144     		add	r1, r1, r8
 251:Core/Src/main.c ****     }
 2328              		.loc 1 251 8 view .LVU682
 2329 0450 0A22     		movs	r2, #10
 2330 0452 0331     		adds	r1, r1, #3
 2331 0454 58F80300 		ldr	r0, [r8, r3]
 2332 0458 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 2333              	.LVL159:
 2334              	.L104:
 278:Core/Src/main.c ****       if(dev_num == old_dev_num){
 2335              		.loc 1 278 5 is_stmt 1 view .LVU683
 278:Core/Src/main.c ****       if(dev_num == old_dev_num){
 2336              		.loc 1 278 9 is_stmt 0 view .LVU684
 2337 045c FFF7FEFF 		bl	HAL_GetTick
 2338              	.LVL160:
 278:Core/Src/main.c ****       if(dev_num == old_dev_num){
 2339              		.loc 1 278 22 discriminator 1 view .LVU685
 2340 0460 401B     		subs	r0, r0, r5
 278:Core/Src/main.c ****       if(dev_num == old_dev_num){
 2341              		.loc 1 278 8 discriminator 1 view .LVU686
 2342 0462 B0F57A7F 		cmp	r0, #1000
 2343 0466 0FD9     		bls	.L106
 278:Core/Src/main.c ****       if(dev_num == old_dev_num){
 2344              		.loc 1 278 54 discriminator 1 view .LVU687
 2345 0468 424B     		ldr	r3, .L144+20
 2346 046a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 278:Core/Src/main.c ****       if(dev_num == old_dev_num){
 2347              		.loc 1 278 45 discriminator 1 view .LVU688
 2348 046c 63B9     		cbnz	r3, .L106
 279:Core/Src/main.c ****         dev_num++;
 2349              		.loc 1 279 7 is_stmt 1 view .LVU689
 279:Core/Src/main.c ****         dev_num++;
 2350              		.loc 1 279 18 is_stmt 0 view .LVU690
 2351 046e 3E4B     		ldr	r3, .L144+8
 2352 0470 93F80080 		ldrb	r8, [r3]	@ zero_extendqisi2
 279:Core/Src/main.c ****         dev_num++;
 2353              		.loc 1 279 9 view .LVU691
 2354 0474 B845     		cmp	r8, r7
 2355 0476 3FF496AE 		beq	.L138
 2356              	.L107:
 2357              	.LVL161:
 284:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2358              		.loc 1 284 7 is_stmt 1 view .LVU692
 284:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2359              		.loc 1 284 26 is_stmt 0 view .LVU693
 2360 047a FFF7FEFF 		bl	HAL_GetTick
 2361              	.LVL162:
 2362 047e 0546     		mov	r5, r0
 2363              	.LVL163:
 285:Core/Src/main.c ****     }
 2364              		.loc 1 285 7 is_stmt 1 view .LVU694
 285:Core/Src/main.c ****     }
 2365              		.loc 1 285 26 is_stmt 0 view .LVU695
 2366 0480 FFF7FEFF 		bl	HAL_GetTick
 2367              	.LVL164:
 285:Core/Src/main.c ****     }
 2368              		.loc 1 285 26 view .LVU696
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 87


 2369 0484 0446     		mov	r4, r0
 2370              	.LVL165:
 285:Core/Src/main.c ****     }
 2371              		.loc 1 285 26 view .LVU697
 2372 0486 4746     		mov	r7, r8
 2373              	.LVL166:
 2374              	.L106:
 300:Core/Src/main.c ****       // state = STATE_800INIT;
 2375              		.loc 1 300 5 is_stmt 1 view .LVU698
 300:Core/Src/main.c ****       // state = STATE_800INIT;
 2376              		.loc 1 300 16 is_stmt 0 view .LVU699
 2377 0488 374B     		ldr	r3, .L144+8
 2378 048a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 300:Core/Src/main.c ****       // state = STATE_800INIT;
 2379              		.loc 1 300 7 view .LVU700
 2380 048c 022B     		cmp	r3, #2
 2381 048e 3FF48FAE 		beq	.L139
 2382              	.L108:
 346:Core/Src/main.c ****       if(state != STATE_INIT){
 2383              		.loc 1 346 5 is_stmt 1 view .LVU701
 346:Core/Src/main.c ****       if(state != STATE_INIT){
 2384              		.loc 1 346 9 is_stmt 0 view .LVU702
 2385 0492 FFF7FEFF 		bl	HAL_GetTick
 2386              	.LVL167:
 346:Core/Src/main.c ****       if(state != STATE_INIT){
 2387              		.loc 1 346 22 discriminator 1 view .LVU703
 2388 0496 031B     		subs	r3, r0, r4
 346:Core/Src/main.c ****       if(state != STATE_INIT){
 2389              		.loc 1 346 8 discriminator 1 view .LVU704
 2390 0498 41F28832 		movw	r2, #5000
 2391 049c 9342     		cmp	r3, r2
 2392 049e 0AD9     		bls	.L117
 346:Core/Src/main.c ****       if(state != STATE_INIT){
 2393              		.loc 1 346 67 discriminator 1 view .LVU705
 2394 04a0 2F4B     		ldr	r3, .L144
 2395 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 346:Core/Src/main.c ****       if(state != STATE_INIT){
 2396              		.loc 1 346 45 discriminator 1 view .LVU706
 2397 04a4 3BB9     		cbnz	r3, .L117
 347:Core/Src/main.c ****         do{
 2398              		.loc 1 347 7 is_stmt 1 view .LVU707
 347:Core/Src/main.c ****         do{
 2399              		.loc 1 347 16 is_stmt 0 view .LVU708
 2400 04a6 334B     		ldr	r3, .L144+20
 2401 04a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 347:Core/Src/main.c ****         do{
 2402              		.loc 1 347 9 view .LVU709
 2403 04aa 002B     		cmp	r3, #0
 2404 04ac 7FF42FAF 		bne	.L121
 2405              	.L118:
 356:Core/Src/main.c ****     }
 2406              		.loc 1 356 7 is_stmt 1 view .LVU710
 356:Core/Src/main.c ****     }
 2407              		.loc 1 356 26 is_stmt 0 view .LVU711
 2408 04b0 FFF7FEFF 		bl	HAL_GetTick
 2409              	.LVL168:
 2410 04b4 0446     		mov	r4, r0
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 88


 2411              	.LVL169:
 2412              	.L117:
 361:Core/Src/main.c ****     
 2413              		.loc 1 361 5 is_stmt 1 view .LVU712
 2414 04b6 DFF8C080 		ldr	r8, .L144+24
 2415 04ba 4046     		mov	r0, r8
 2416 04bc FFF7FEFF 		bl	tick
 2417              	.LVL170:
 366:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2418              		.loc 1 366 5 view .LVU713
 366:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2419              		.loc 1 366 8 is_stmt 0 view .LVU714
 2420 04c0 4046     		mov	r0, r8
 2421 04c2 FFF7FEFF 		bl	isClicked
 2422              	.LVL171:
 366:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2423              		.loc 1 366 7 discriminator 1 view .LVU715
 2424 04c6 0028     		cmp	r0, #0
 2425 04c8 7FF429AF 		bne	.L140
 2426              	.L122:
 378:Core/Src/main.c ****     // TEST CODE
 2427              		.loc 1 378 5 is_stmt 1 view .LVU716
 378:Core/Src/main.c ****     // TEST CODE
 2428              		.loc 1 378 28 is_stmt 0 view .LVU717
 2429 04cc 264B     		ldr	r3, .L144+8
 2430 04ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2431 04d0 264B     		ldr	r3, .L144+12
 2432 04d2 03EB8213 		add	r3, r3, r2, lsl #6
 2433 04d6 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 378:Core/Src/main.c ****     // TEST CODE
 2434              		.loc 1 378 8 view .LVU718
 2435 04da 002B     		cmp	r3, #0
 2436 04dc 7FF454AF 		bne	.L141
 2437              	.L124:
 421:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2438              		.loc 1 421 5 is_stmt 1 view .LVU719
 421:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2439              		.loc 1 421 8 is_stmt 0 view .LVU720
 2440 04e0 2548     		ldr	r0, .L144+24
 2441 04e2 FFF7FEFF 		bl	isHold
 2442              	.LVL172:
 421:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2443              		.loc 1 421 7 discriminator 1 view .LVU721
 2444 04e6 0028     		cmp	r0, #0
 2445 04e8 92D0     		beq	.L102
 421:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2446              		.loc 1 421 27 discriminator 1 view .LVU722
 2447 04ea FFF7FEFF 		bl	HAL_GetTick
 2448              	.LVL173:
 421:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2449              		.loc 1 421 41 discriminator 1 view .LVU723
 2450 04ee 801B     		subs	r0, r0, r6
 421:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2451              		.loc 1 421 24 discriminator 1 view .LVU724
 2452 04f0 40F2EE23 		movw	r3, #750
 2453 04f4 9842     		cmp	r0, r3
 2454 04f6 8BD9     		bls	.L102
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 89


 421:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2455              		.loc 1 421 84 discriminator 2 view .LVU725
 2456 04f8 1B4B     		ldr	r3, .L144+8
 2457 04fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2458 04fc 1B4B     		ldr	r3, .L144+12
 2459 04fe 03EB8213 		add	r3, r3, r2, lsl #6
 2460 0502 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 421:Core/Src/main.c ****       screen_disp_time = HAL_GetTick();
 2461              		.loc 1 421 62 discriminator 2 view .LVU726
 2462 0504 022B     		cmp	r3, #2
 2463 0506 83D0     		beq	.L102
 422:Core/Src/main.c ****       hold_timeout = HAL_GetTick();
 2464              		.loc 1 422 7 is_stmt 1 view .LVU727
 422:Core/Src/main.c ****       hold_timeout = HAL_GetTick();
 2465              		.loc 1 422 26 is_stmt 0 view .LVU728
 2466 0508 FFF7FEFF 		bl	HAL_GetTick
 2467              	.LVL174:
 2468 050c 0446     		mov	r4, r0
 2469              	.LVL175:
 423:Core/Src/main.c ****       if(deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 2470              		.loc 1 423 7 is_stmt 1 view .LVU729
 423:Core/Src/main.c ****       if(deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 2471              		.loc 1 423 22 is_stmt 0 view .LVU730
 2472 050e FFF7FEFF 		bl	HAL_GetTick
 2473              	.LVL176:
 423:Core/Src/main.c ****       if(deviceList[dev_num].deviceDisplayMode == MODE_NORMAL){
 2474              		.loc 1 423 22 view .LVU731
 2475 0512 0646     		mov	r6, r0
 2476              	.LVL177:
 424:Core/Src/main.c ****         if (deviceList[dev_num].deviceMode != TYPE_SET_ONLY){
 2477              		.loc 1 424 7 is_stmt 1 view .LVU732
 424:Core/Src/main.c ****         if (deviceList[dev_num].deviceMode != TYPE_SET_ONLY){
 2478              		.loc 1 424 29 is_stmt 0 view .LVU733
 2479 0514 144B     		ldr	r3, .L144+8
 2480 0516 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2481 0518 144B     		ldr	r3, .L144+12
 2482 051a 03EB8213 		add	r3, r3, r2, lsl #6
 2483 051e 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 424:Core/Src/main.c ****         if (deviceList[dev_num].deviceMode != TYPE_SET_ONLY){
 2484              		.loc 1 424 9 view .LVU734
 2485 0522 73B9     		cbnz	r3, .L129
 425:Core/Src/main.c ****           deviceList[dev_num].setValue = deviceList[dev_num].currentValue;
 2486              		.loc 1 425 9 is_stmt 1 view .LVU735
 425:Core/Src/main.c ****           deviceList[dev_num].setValue = deviceList[dev_num].currentValue;
 2487              		.loc 1 425 32 is_stmt 0 view .LVU736
 2488 0524 114B     		ldr	r3, .L144+12
 2489 0526 03EB8213 		add	r3, r3, r2, lsl #6
 2490 052a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 425:Core/Src/main.c ****           deviceList[dev_num].setValue = deviceList[dev_num].currentValue;
 2491              		.loc 1 425 12 view .LVU737
 2492 052c 012B     		cmp	r3, #1
 2493 052e 3FF461AF 		beq	.L130
 426:Core/Src/main.c ****         }
 2494              		.loc 1 426 11 is_stmt 1 view .LVU738
 426:Core/Src/main.c ****         }
 2495              		.loc 1 426 61 is_stmt 0 view .LVU739
 2496 0532 0E4B     		ldr	r3, .L144+12
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 90


 2497 0534 03EB8213 		add	r3, r3, r2, lsl #6
 2498 0538 D3E90201 		ldrd	r0, [r3, #8]
 2499              	.LVL178:
 426:Core/Src/main.c ****         }
 2500              		.loc 1 426 40 view .LVU740
 2501 053c C3E90401 		strd	r0, [r3, #16]
 2502 0540 58E7     		b	.L130
 2503              	.LVL179:
 2504              	.L129:
 430:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_NORMAL;
 2505              		.loc 1 430 9 is_stmt 1 view .LVU741
 430:Core/Src/main.c ****         deviceList[dev_num].deviceDisplayMode = MODE_NORMAL;
 2506              		.loc 1 430 22 is_stmt 0 view .LVU742
 2507 0542 0E4B     		ldr	r3, .L144+28
 2508 0544 0121     		movs	r1, #1
 2509 0546 1970     		strb	r1, [r3]
 431:Core/Src/main.c ****       }
 2510              		.loc 1 431 9 is_stmt 1 view .LVU743
 431:Core/Src/main.c ****       }
 2511              		.loc 1 431 47 is_stmt 0 view .LVU744
 2512 0548 084B     		ldr	r3, .L144+12
 2513 054a 03EB8213 		add	r3, r3, r2, lsl #6
 2514 054e 0022     		movs	r2, #0
 2515 0550 83F82920 		strb	r2, [r3, #41]
 2516 0554 54E7     		b	.L131
 2517              	.LVL180:
 2518              	.L132:
 437:Core/Src/main.c ****       }
 2519              		.loc 1 437 9 is_stmt 1 view .LVU745
 437:Core/Src/main.c ****       }
 2520              		.loc 1 437 28 is_stmt 0 view .LVU746
 2521 0556 024B     		ldr	r3, .L144
 2522 0558 0022     		movs	r2, #0
 2523 055a 1A70     		strb	r2, [r3]
 2524 055c 58E7     		b	.L102
 2525              	.L145:
 2526 055e 00BF     		.align	2
 2527              	.L144:
 2528 0560 00000000 		.word	screen_scroll_mode
 2529 0564 00000000 		.word	enc
 2530 0568 00000000 		.word	dev_num
 2531 056c 00000000 		.word	deviceList
 2532 0570 00001440 		.word	1075052544
 2533 0574 00000000 		.word	state
 2534 0578 00000000 		.word	button
 2535 057c 00000000 		.word	transmitMode
 2536              		.cfi_endproc
 2537              	.LFE134:
 2539              		.global	isSDInitialised
 2540              		.section	.bss.isSDInitialised,"aw",%nobits
 2543              	isSDInitialised:
 2544 0000 00       		.space	1
 2545              		.global	transmitMode
 2546              		.section	.bss.transmitMode,"aw",%nobits
 2549              	transmitMode:
 2550 0000 00       		.space	1
 2551              		.global	rx_buff
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 91


 2552              		.section	.bss.rx_buff,"aw",%nobits
 2553              		.align	2
 2556              	rx_buff:
 2557 0000 00000000 		.space	10
 2557      00000000 
 2557      0000
 2558              		.global	sim
 2559              		.section	.data.sim,"aw"
 2560              		.align	2
 2563              	sim:
 2564 0000 00000000 		.word	huart6
 2565 0004 00000000 		.space	4
 2566              		.global	deviceList
 2567              		.section	.data.deviceList,"aw"
 2568              		.align	3
 2571              	deviceList:
 2572 0000 00000000 		.word	huart5
 2573 0004 00       		.byte	0
 2574 0005 01       		.byte	1
 2575 0006 00000000 		.space	58
 2575      00000000 
 2575      00000000 
 2575      00000000 
 2575      00000000 
 2576 0040 00000000 		.word	huart2
 2577 0044 00       		.byte	0
 2578 0045 01       		.byte	1
 2579 0046 00000000 		.space	58
 2579      00000000 
 2579      00000000 
 2579      00000000 
 2579      00000000 
 2580              		.global	enc
 2581              		.section	.data.enc,"aw"
 2582              		.align	2
 2585              	enc:
 2586 0000 00040240 		.word	1073873920
 2587 0004 0002     		.short	512
 2588 0006 0000     		.space	2
 2589 0008 00040240 		.word	1073873920
 2590 000c 0001     		.short	256
 2591 000e 00000000 		.space	6
 2591      0000
 2592              		.global	button
 2593              		.section	.data.button,"aw"
 2594              		.align	2
 2597              	button:
 2598 0000 00040240 		.word	1073873920
 2599 0004 8000     		.short	128
 2600 0006 01       		.byte	1
 2601 0007 00000000 		.space	13
 2601      00000000 
 2601      00000000 
 2601      00
 2602              		.global	screen_scroll_mode
 2603              		.section	.bss.screen_scroll_mode,"aw",%nobits
 2606              	screen_scroll_mode:
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 92


 2607 0000 00       		.space	1
 2608              		.global	trySIMInit
 2609              		.section	.bss.trySIMInit,"aw",%nobits
 2612              	trySIMInit:
 2613 0000 00       		.space	1
 2614              		.global	dev_num
 2615              		.section	.bss.dev_num,"aw",%nobits
 2618              	dev_num:
 2619 0000 00       		.space	1
 2620              		.global	state
 2621              		.section	.bss.state,"aw",%nobits
 2624              	state:
 2625 0000 00       		.space	1
 2626              		.global	device_type
 2627              		.section	.bss.device_type,"aw",%nobits
 2630              	device_type:
 2631 0000 00       		.space	1
 2632              		.global	palette
 2633              		.section	.bss.palette,"aw",%nobits
 2636              	palette:
 2637 0000 00       		.space	1
 2638              		.global	tx_buff
 2639              		.section	.data.tx_buff,"aw"
 2640              		.align	2
 2643              	tx_buff:
 2644 0000 54424344 		.ascii	"TBCDEFGHIJ"
 2644      45464748 
 2644      494A
 2645              		.global	val
 2646              		.section	.data.val,"aw"
 2647              		.align	3
 2650              	val:
 2651 0000 00000000 		.word	0
 2652 0004 00002440 		.word	1076101120
 2653              		.global	hdma_usart6_tx
 2654              		.section	.bss.hdma_usart6_tx,"aw",%nobits
 2655              		.align	2
 2658              	hdma_usart6_tx:
 2659 0000 00000000 		.space	96
 2659      00000000 
 2659      00000000 
 2659      00000000 
 2659      00000000 
 2660              		.global	hdma_usart6_rx
 2661              		.section	.bss.hdma_usart6_rx,"aw",%nobits
 2662              		.align	2
 2665              	hdma_usart6_rx:
 2666 0000 00000000 		.space	96
 2666      00000000 
 2666      00000000 
 2666      00000000 
 2666      00000000 
 2667              		.global	hdma_usart2_tx
 2668              		.section	.bss.hdma_usart2_tx,"aw",%nobits
 2669              		.align	2
 2672              	hdma_usart2_tx:
 2673 0000 00000000 		.space	96
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 93


 2673      00000000 
 2673      00000000 
 2673      00000000 
 2673      00000000 
 2674              		.global	hdma_usart2_rx
 2675              		.section	.bss.hdma_usart2_rx,"aw",%nobits
 2676              		.align	2
 2679              	hdma_usart2_rx:
 2680 0000 00000000 		.space	96
 2680      00000000 
 2680      00000000 
 2680      00000000 
 2680      00000000 
 2681              		.global	hdma_uart5_tx
 2682              		.section	.bss.hdma_uart5_tx,"aw",%nobits
 2683              		.align	2
 2686              	hdma_uart5_tx:
 2687 0000 00000000 		.space	96
 2687      00000000 
 2687      00000000 
 2687      00000000 
 2687      00000000 
 2688              		.global	hdma_uart5_rx
 2689              		.section	.bss.hdma_uart5_rx,"aw",%nobits
 2690              		.align	2
 2693              	hdma_uart5_rx:
 2694 0000 00000000 		.space	96
 2694      00000000 
 2694      00000000 
 2694      00000000 
 2694      00000000 
 2695              		.global	huart6
 2696              		.section	.bss.huart6,"aw",%nobits
 2697              		.align	2
 2700              	huart6:
 2701 0000 00000000 		.space	72
 2701      00000000 
 2701      00000000 
 2701      00000000 
 2701      00000000 
 2702              		.global	huart2
 2703              		.section	.bss.huart2,"aw",%nobits
 2704              		.align	2
 2707              	huart2:
 2708 0000 00000000 		.space	72
 2708      00000000 
 2708      00000000 
 2708      00000000 
 2708      00000000 
 2709              		.global	huart5
 2710              		.section	.bss.huart5,"aw",%nobits
 2711              		.align	2
 2714              	huart5:
 2715 0000 00000000 		.space	72
 2715      00000000 
 2715      00000000 
 2715      00000000 
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 94


 2715      00000000 
 2716              		.global	hspi2
 2717              		.section	.bss.hspi2,"aw",%nobits
 2718              		.align	2
 2721              	hspi2:
 2722 0000 00000000 		.space	88
 2722      00000000 
 2722      00000000 
 2722      00000000 
 2722      00000000 
 2723              		.global	hspi1
 2724              		.section	.bss.hspi1,"aw",%nobits
 2725              		.align	2
 2728              	hspi1:
 2729 0000 00000000 		.space	88
 2729      00000000 
 2729      00000000 
 2729      00000000 
 2729      00000000 
 2730              		.global	hrtc
 2731              		.section	.bss.hrtc,"aw",%nobits
 2732              		.align	2
 2735              	hrtc:
 2736 0000 00000000 		.space	32
 2736      00000000 
 2736      00000000 
 2736      00000000 
 2736      00000000 
 2737              		.text
 2738              	.Letext0:
 2739              		.file 3 "Core/Inc/stm32f4xx_hal_conf.h"
 2740              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 2741              		.file 5 "C:/Users/kroko/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 2742              		.file 6 "C:/Users/kroko/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 2743              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2744              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2745              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2746              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2747              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 2748              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2749              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2750              		.file 14 "Core/Inc/main.h"
 2751              		.file 15 "Middlewares/Third_Party/FatFs/src/integer.h"
 2752              		.file 16 "Middlewares/Third_Party/FatFs/src/ff.h"
 2753              		.file 17 "Core/Inc/buttons.h"
 2754              		.file 18 "Core/Inc/enc.h"
 2755              		.file 19 "C:/Users/kroko/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-t
 2756              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2757              		.file 21 "Core/Inc/info_disp.h"
 2758              		.file 22 "Core/Inc/dispcolor.h"
 2759              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2760              		.file 24 "<built-in>"
 2761              		.file 25 "FATFS/App/fatfs.h"
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 95


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:281    .text.MX_GPIO_Init:00000138 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:290    .text.MX_DMA_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:295    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:419    .text.MX_DMA_Init:000000a4 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:425    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:431    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:755    .text.HAL_UART_RxCpltCallback:00000190 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2618   .bss.dev_num:00000000 dev_num
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2571   .data.deviceList:00000000 deviceList
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2549   .bss.transmitMode:00000000 transmitMode
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2624   .bss.state:00000000 state
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:765    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:771    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:807    .text.HAL_GPIO_EXTI_Callback:00000014 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2585   .data.enc:00000000 enc
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:812    .rodata.Error_Handler.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:816    .text.Error_Handler:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:822    .text.Error_Handler:00000000 Error_Handler
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:860    .text.Error_Handler:00000010 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:865    .text.MX_SPI1_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:870    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:938    .text.MX_SPI1_Init:0000003c $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2728   .bss.hspi1:00000000 hspi1
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:944    .text.MX_UART5_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:949    .text.MX_UART5_Init:00000000 MX_UART5_Init
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1003   .text.MX_UART5_Init:0000002c $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2714   .bss.huart5:00000000 huart5
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1009   .text.MX_USART6_UART_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1014   .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1068   .text.MX_USART6_UART_Init:0000002c $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2700   .bss.huart6:00000000 huart6
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1074   .text.MX_SPI2_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1079   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1147   .text.MX_SPI2_Init:00000038 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2721   .bss.hspi2:00000000 hspi2
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1153   .text.MX_RTC_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1158   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1336   .text.MX_RTC_Init:000000b8 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2735   .bss.hrtc:00000000 hrtc
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1342   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1347   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1401   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2707   .bss.huart2:00000000 huart2
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1407   .text.SystemClock_Config:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1413   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1562   .text.SystemClock_Config:000000a0 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1568   .rodata.main.str1.4:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1601   .text.main:00000000 $t
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:1607   .text.main:00000000 main
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2183   .text.main:00000334 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2543   .bss.isSDInitialised:00000000 isSDInitialised
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2606   .bss.screen_scroll_mode:00000000 screen_scroll_mode
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2205   .text.main:00000380 $t
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 96


C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2528   .text.main:00000560 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2597   .data.button:00000000 button
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2544   .bss.isSDInitialised:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2550   .bss.transmitMode:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2556   .bss.rx_buff:00000000 rx_buff
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2553   .bss.rx_buff:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2563   .data.sim:00000000 sim
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2560   .data.sim:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2568   .data.deviceList:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2582   .data.enc:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2594   .data.button:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2607   .bss.screen_scroll_mode:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2612   .bss.trySIMInit:00000000 trySIMInit
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2613   .bss.trySIMInit:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2619   .bss.dev_num:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2625   .bss.state:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2630   .bss.device_type:00000000 device_type
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2631   .bss.device_type:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2636   .bss.palette:00000000 palette
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2637   .bss.palette:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2643   .data.tx_buff:00000000 tx_buff
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2640   .data.tx_buff:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2650   .data.val:00000000 val
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2647   .data.val:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2658   .bss.hdma_usart6_tx:00000000 hdma_usart6_tx
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2655   .bss.hdma_usart6_tx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2665   .bss.hdma_usart6_rx:00000000 hdma_usart6_rx
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2662   .bss.hdma_usart6_rx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2672   .bss.hdma_usart2_tx:00000000 hdma_usart2_tx
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2669   .bss.hdma_usart2_tx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2679   .bss.hdma_usart2_rx:00000000 hdma_usart2_rx
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2676   .bss.hdma_usart2_rx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2686   .bss.hdma_uart5_tx:00000000 hdma_uart5_tx
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2683   .bss.hdma_uart5_tx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2693   .bss.hdma_uart5_rx:00000000 hdma_uart5_rx
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2690   .bss.hdma_uart5_rx:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2697   .bss.huart6:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2704   .bss.huart2:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2711   .bss.huart5:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2718   .bss.hspi2:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2725   .bss.hspi1:00000000 $d
C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s:2732   .bss.hrtc:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_ddiv
HAL_UART_Receive_DMA
memcpy
atof
HAL_GPIO_TogglePin
tickEnc
Show_Message
HAL_SPI_Init
HAL_UART_Init
ARM GAS  C:\Users\kroko\AppData\Local\Temp\ccqW0zUr.s 			page 97


HAL_RTC_Init
HAL_RTC_GetTime
HAL_RTC_GetDate
HAL_RTC_SetTime
HAL_RTC_SetDate
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_d2iz
__aeabi_dadd
__aeabi_dcmple
__aeabi_dsub
__aeabi_dcmpge
HAL_Init
MX_FATFS_Init
HAL_Delay
dispcolor_Init
HAL_GetTick
f_mount
Dispaly_Data
HAL_UART_Transmit_DMA
itoa
sprintf
f_open
gcvt
f_write
f_close
isRight
isLeft
Display_Init
tick
isClicked
isHold
